@model PTSL.GENERIC.Web.Core.Model.EntityViewModels.CipManagement.CipTeamVM

@{
    ViewBag.Title = "Create";
    var Message = ViewBag.Message;
}

<style>
    .add-participant-container {
        display: flex;
        justify-content: right;
        align-items: end;
    }

    label.error {
        color: red !important;
    }

</style>


@*<style>
    input, select {
        height: 30px!important;
        line-height: 10px !important;
        font-weight: 400 !important;
        color: black !important;
    }

    legend {
        font-weight: 500 !important;
        font-size: 20px!important;
    }
</style>*@


<div class="card">
    <div class="card-header">
        <h4>
            <a href="/CipTeam/Index" class="mr-1 back">
                <svg width="20" height="20" viewBox="0 0 32 32">
                    <path fill="currentColor" d="m14 26l1.41-1.41L7.83 17H28v-2H7.83l7.58-7.59L14 6L4 16l10 10z" />
                </svg>
            </a>
            Create Cip Team
        </h4>
        <button class="ml-auto reset btn btn-sm" onclick="location.reload()">
            <svg class="rotate180z" width="16" height="16" viewBox="0 0 32 32">
                <path d="M25.95 7.65l.005-.004c-.092-.11-.197-.206-.293-.312c-.184-.205-.367-.41-.563-.603c-.139-.136-.286-.262-.43-.391c-.183-.165-.366-.329-.558-.482c-.16-.128-.325-.247-.49-.367c-.192-.14-.385-.277-.585-.406a13.513 13.513 0 0 0-.533-.324q-.308-.179-.625-.341c-.184-.094-.37-.185-.56-.27c-.222-.1-.449-.191-.678-.28c-.19-.072-.378-.145-.571-.208c-.246-.082-.498-.15-.75-.217c-.186-.049-.368-.102-.556-.143c-.29-.063-.587-.107-.883-.15c-.16-.023-.315-.056-.476-.073A12.933 12.933 0 0 0 6 7.703V4H4v8h8v-2H6.811A10.961 10.961 0 0 1 16 5a11.111 11.111 0 0 1 1.189.067c.136.015.268.042.403.061c.25.037.501.075.746.128c.16.035.315.08.472.121c.213.057.425.114.633.183c.164.054.325.116.486.178c.193.074.384.15.57.235c.162.072.32.15.477.23q.268.136.526.286c.153.09.305.18.453.276c.168.11.33.224.492.342c.14.102.282.203.417.312c.162.13.316.268.47.406c.123.11.248.217.365.332c.167.164.323.338.479.512A10.993 10.993 0 1 1 5 16H3a13 13 0 1 0 22.95-8.35z" fill="currentColor" />
            </svg>
            Reset
        </button>
    </div>
    <div style="padding-left: 15px; padding-right: 15px;">
       @* @using (Html.BeginForm("", "", FormMethod.Post, new { id = "Form" }))
        {*@
            <form id="CommitteeManagementForm" class="card-body mt-2 green-card">
                @*@{ Html.RenderPartial("~/Views/Shared/_ForestCivilLocation.cshtml", "create-member"); }*@

                <div class="row p-1 custom ">
                    <div class="p-2 col-12">
                        @*<legend class="float-none w-auto">Committees Management</legend>*@
                        @*<h6 style="margin: 10px 0px 10px 10px;">Committee Management</h6>*@
                        <div class="row custom forest-location">
                            <div class="col-6 p-1">
                                @await Html.PartialAsync(
                            "~/Views/Shared/_ForestAdministration.cshtml",
                            (
                            ViewBag.ForestCircleId as SelectList,
                            ViewBag.ForestDivisionId as SelectList,
                            ViewBag.ForestRangeId as SelectList,
                            ViewBag.ForestBeatId as SelectList,
                            ViewBag.ForestFcvVcfId as SelectList
                            )
                            )
                            </div>

                            <div class="col-6 p-1">
                                @await Html.PartialAsync(
                            "~/Views/Shared/_CivilAdministration.cshtml",
                            (
                            ViewBag.DivisionId as SelectList,
                            ViewBag.DistrictId as SelectList,
                            ViewBag.UpazillaId as SelectList,
                            ViewBag.UnionId as SelectList
                            )
                            )
                            </div>

                        </div>


                        <div class="row custom ">

                            <div class="col-6 p-1">
                                <fieldset class="p-2">
                                    <legend class="float-none w-auto">NGO Information</legend>
                                    <div class="row">
                                        <div class="col-6 pr-1" style="max-width: 245px;">
                                            <label class="m-0">NGO <span style="color: red;">*</span></label>
                                            @Html.DropDownList("NgoId", null, "Choose NGO", htmlAttributes: new { @class = "form-control col-md-12", @required = "required" })
                                        </div>
                                    </div>
                                </fieldset>
                            </div>
                        </div>

                        <div class="row mt-2" style="padding: 10px;">
                            <div class="col-12 p-1">
                                <fieldset class="p-2">
                                    <legend class="float-none w-auto">Cip Team Information</legend>
                                    <div class="row" style="padding-left: 10px;">

                                    <div class="col-md-3 col-sm-12 px-1">
                                        <label>
                                           Team Name
                                            <span style="color:red;">*</span>
                                        </label>
                                        <input id="TeamName" name="TeamName" type="text" placeholder="Enter Team Name" required>
                                    </div>

                                         <div id="CipDivId" class="col-3 pl-1" style="padding-left: 7px;">
                                                <label class="m-0" id="">Cip Name <span style="color: red;">*</span></label>
                                            @Html.DropDownList("CipId", null, "Choose Cip", htmlAttributes: new { @class = "form-control col-md-12", style = "width: 235px;" })
                                         </div>

                                         <div class="col-3 pr-1" style="padding-left: 8px; max-width: 252px;">
                                              <label class="m-0">Other Member</label>
                                               @Html.DropDownList("OtherCommitteeMemberId", null, "Select Other Member", htmlAttributes: new { @class = "form-control col-md-12" })
                                         </div>

                                    <div class="col-3 pr-1">
                                        <label class="m-0">Designetion Name<span style="color: red;">*</span></label>
                                        <input type="text" id="DesignetionName" name="DesignetionName" placeholder="Enter Designetion Name" required="">
                                    </div>


                                         <div id="DocumentFileDivId" class="col-3 pr-1" style="padding-left: 7px;">
                                              <label class="m-0" id="">Document File <span style="color: red;"></span></label>
                                        <input type="file" value="@Model.DocumentUrl" id="DocumentFileUrl" name="DocumentFileUrl" />
                                         </div>

                                    </div>

                                    <div class="row">
                                        <div class="col-md-12">
                                            <button style="background-color:forestgreen;float: right" class="btn btn-success btn-sm" type="button" onclick="addMore()">Add Member</button>
                                        </div>
                                    </div>



                                    <div class="row  mt-2" style="padding: 10px;">
                                        <div class="col-12 p-1">


                                            <div class="row mt-3" style="padding-left: 10px!important;">
                                                <div class="col-6 pl-1">
                                                    <div class="row">
                                                    </div>
                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                </fieldset>
                            </div>


                            <div style="overflow-y: scroll;">
                            <table class="reportTable" id="" role="grid" aria-describedby="tableExport_filter_info" style="width: 1018px;">
                                <thead>
                                    <tr role="row">
                                        <th class="sorting_asc" tabindex="0" aria-controls="tableExport_filter" rowspan="1" colspan="1" aria-sort="ascending" aria-label="SL: activate to sort column descending" style="min-width: 50px;">SL NO</th>
                                        <th class="sorting" tabindex="0" aria-controls="tableExport_filter" aria-label="Forest Department: activate to sort column ascending" style="min-width: 80px;">Beneficiary Name</th>
                                        <th class="sorting" tabindex="0" aria-controls="tableExport_filter"     aria-label="Forest Range: activate to sort column ascending" style="min-width: 100px;">Father Or Spouse</th>
                                        <th class="sorting" tabindex="0" aria-controls="tableExport_filter" aria-label="Forest Beat: activate to sort column ascending" style="min-width: 95px;">Forest Village Name</th>
                                        <th class="sorting" tabindex="0" aria-controls="tableExport_filter"  aria-label="Name Of FCV: activate to sort column ascending" style="min-width: 100px;">Mobile Number</th>
                                        <th class="sorting" tabindex="0" aria-controls="tableExport_filter" aria-label="Name Of FCV: activate to sort column ascending" style="min-width: 100px;">Designetion</th>
                                        <th class="sorting" tabindex="0" aria-controls="tableExport_filter" aria-label="Comment: activate to sort column ascending" style="min-width: 50px;">Action</th>
                                    </tr>
                                </thead>
                                 <tbody id="tbody">
                                  @*  <tr role="row" class="trClass">
                                        <td class="sorting_1">1</td>
                                        <td class="DesignationId"></td>
                                        <td class="MemberNameId"></td>
                                        <td class="MemberTypeId"></td>
                                        <td class="FatherNameId"></td>
                                        <td class="GenderId"></td>
                                        <td class="EthnicityId"></td>
                                        <td class="NidNoId"></td>
                                        <td class="MobileNoId"></td>
                                        <td>
                                            <div>
                                                <button style="background-color:red" class="btn btn-danger btn-sm">Remove</button>
                                            </div>
                                        </td>
                                    </tr>*@
                                </tbody>

                            </table>
                            </div>

                        </div>

                    </div>
                </div>
            </form>

          

            <div class="d-flex justify-content-end mt-2">
            <button type="button" onclick="submitFormData()" id="SaveCommitteeManagement" class="btn btn-sm btn-green btn-submit mr-2">
                    @* <i class="fa fa-save mr-2"></i>*@Save
                </button>
            </div>
       @* }*@
    </div>

    @*@{ Html.RenderPartial("_AddParticipant"); }*@


    <div class="card-header pull-left">
        <!--  <a href="/ExecutiveCommittee/Index" class="btn btn-warning">Return to Index</a> -->
    </div>

</div>

<script>
    var OtherCommitteeMemberInfo = "";

    $(".submit-btn").on("click", function () {
        if ($("#Form").valid()) {
            var valCell = $("#CellNo").val();
            alert(valCell);
        }
    });


    $("#Form").validate({
        rules: {
            ForestCircleId: {
                required: true
            },
            ForestDivisionId: {
                required: true
            },
            ForestRangeId: {
                required: true
            },
            ForestBeatId: {
                required: true
            },
            ForestFcvVcfId: {
                required: true
            },
            DistrictId: {
                required: true
            },
            DivisionId: {
                required: true
            },
            UpazillaId: {
                required: true
            },
            UnionId: {
                required: true
            },
            FcvVcfType: {
                required: true
            },
            SubCommitteeDesignationId: {
                required: true
            },
            CommitteeEndDate: {
                dateMustBeGreaterThanStart: true
            },


        },

    });






    $("#CellNo").keyup(function () {
        $("#CellNo").val(this.value.match(/[0-9]*/));
    });

    var BeneficiaryInfo;
    $("#ForestFcvVcfId").on("change", function () {

        //$("#OfficeBearersId").prop('required', true);
        //$("#OtherMemberId").prop('required', true);
        $(".loader").fadeIn("slow");
        var ForestFcvVcfId = $("#ForestFcvVcfId").val();
        var OfficeBearersId = $("#OfficeBearersId");
        var CipId = $("#CipId");

        $.ajax({
            cache: false,
            type: "GET",
            url: "/CipTeam/GetCipById",
            data: { "id": ForestFcvVcfId },
            success: function (data) {
                $(".loader").fadeOut("slow");
                BeneficiaryInfo = data;
                console.log(data);

                CipId.html('<option value="">Select Cip</option>');
                $.each(data.Data, function (id, option) {
                    CipId.append($('<option></option>').val(option.Id).html(option.BeneficiaryName));
                });


            },
            error: function (xhr, ajaxOptions, thrownError) {
                //alert('Failed to retrieve data.');
            }
        });
    });

    var OtherMemberInfo;

    $("#OtherMemberId").on("change", function () {

        var myOtherMemberId = $("#OtherMemberId").val();
        //alert(myOtherMemberId);

        $.ajax({
            cache: false,
            type: "GET",
            url: "/ExecutiveCommittee/GetOtherCommitteeMemberById",
            data: { "id": myOtherMemberId },
            success: function (data) {
                console.log(data);
                OtherMemberInfo = data;

                $("#NidNo").val(data.NID);
                $("#CellNo").val(data.PhoneNumber);
                $("#FatherOrSpouse").val(data.FatherOrSpouse);
                document.getElementById("GenderId").value = data.Gender;
                document.getElementById("EthnicityId").value = data.EthnicityId;
            },
            error: function (xhr, ajaxOptions, thrownError) {
               // alert('Failed to retrieve data.');
            }
        });


      
    });

</script>



<script>
    $("#CircleId").change(function () {
        var selectedItem = $(this).val();
        var forestDivisonList = $("#ForestDivisionId");
        if (selectedItem == "" || selectedItem == null) {
            return true;
        }

        $.ajax({
            cache: false,
            type: "GET",
            url: "/Dropdown/ListForestDivisionByForestCircle",
            data: { "id": selectedItem },
            success: function (data) {
                forestDivisonList.html('<option value="">Choose Forest Divison</option>');
                $.each(data, function (id, option) {
                    forestDivisonList.append($('<option></option>').val(option.Id).html(option.Name));
                });
                forestDivisonList.prop("disabled", false);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert('Failed to retrieve data.');
            }
        });
    });

    $("#ForestDivisionId").change(function () {
        var selectedItem = $(this).val();
        var forestRangeList = $("#RangeId");
        if (selectedItem == "" || selectedItem == null) {
            return true;
        }

        $.ajax({
            cache: false,
            type: "GET",
            url: "/Dropdown/ListForestRangeByForestDivision",
            data: { "id": selectedItem },
            success: function (data) {
                forestRangeList.html('<option value="">Choose Forest Range</option>');
                $.each(data, function (id, option) {
                    forestRangeList.append($('<option></option>').val(option.Id).html(option.Name));
                });
                forestRangeList.prop("disabled", false);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert('Failed to retrieve data.');
            }
        });
    });

    $("#RangeId").change(function () {
        var selectedItem = $(this).val();
        var forestBeatList = $("#BeatId");
        if (selectedItem == "" || selectedItem == null) {
            return true;
        }

        $.ajax({
            cache: false,
            type: "GET",
            url: "/Dropdown/ListForestBeatByForestRange",
            data: { "id": selectedItem },
            success: function (data) {
                forestBeatList.html('<option value="">Choose Forest Beat</option>');
                $.each(data, function (id, option) {
                    forestBeatList.append($('<option></option>').val(option.Id).html(option.Name));
                });
                forestBeatList.prop("disabled", false);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert('Failed to retrieve data.');
            }
        });
    });

    $("#BeatId").change(function () {
        var selectedItem = $(this).val();
        var forestFcvVcfList = $("#FcvId");
        if (selectedItem == "" || selectedItem == null) {
            return true;
        }
        var FcvVcfType = $("#FcvVcfType").val();
        $.ajax({
            cache: false,
            type: "GET",
            url: "/Dropdown/ListByForestBeatAndType",
            data: { "beatId": selectedItem, "type": FcvVcfType },
            success: function (data) {
                forestFcvVcfList.html('<option value="">Choose Forest FCV/VCF</option>');
                $.each(data, function (id, option) {
                    forestFcvVcfList.append($('<option></option>').val(option.Id).html(option.Name));
                });
                forestFcvVcfList.prop("disabled", false);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert('Failed to retrieve data.');
            }
        });
    });

    $("#CivilDivisionId").change(function () {
        var selectedItem = $(this).val();
        var PresentDistrictId = $("#CivilDistrictId");
        if (selectedItem == "" || selectedItem == null) {
            return true;
        }

        $.ajax({
            cache: false,
            type: "GET",
            url: "/Dropdown/ListDistrictByDivision",
            data: { "id": selectedItem },
            success: function (data) {
                PresentDistrictId.html('<option value="">Choose District</option>');
                $.each(data, function (id, option) {
                    PresentDistrictId.append($('<option></option>').val(option.Id).html(option.Name));
                });
                PresentDistrictId.prop("disabled", false);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert('Failed to retrieve data.');
            }
        });
    });

    $("#CivilDistrictId").change(function () {
        var selectedItem = $(this).val();
        var PresentUpazillaId = $("#CivilUpazillaId");
        if (selectedItem == "" || selectedItem == null) {
            return true;
        }

        $.ajax({
            cache: false,
            type: "GET",
            url: "/Dropdown/ListUpazillaByDistrict",
            data: { "id": selectedItem },
            success: function (data) {
                PresentUpazillaId.html('<option value="">Choose Upazilla</option>');
                $.each(data, function (id, option) {
                    PresentUpazillaId.append($('<option></option>').val(option.Id).html(option.Name));
                });
                PresentUpazillaId.prop("disabled", false);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert('Failed to retrieve data.');
            }
        });
    });


    $("#CivilUpazillaId").change(function () {
        var selectedItem = $(this).val();
        var PresentUpazillaId = $("#UnionId");
        if (selectedItem == "" || selectedItem == null) {
            return true;
        }

        $.ajax({
            cache: false,
            type: "GET",
            url: "/Dropdown/ListUnionByUpazilla",
            data: { "id": selectedItem },
            success: function (data) {
                PresentUpazillaId.html('<option value="">Choose..</option>');
                $.each(data, function (id, option) {
                    PresentUpazillaId.append($('<option></option>').val(option.Id).html(option.Name));
                });
                PresentUpazillaId.prop("disabled", false);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                //
            }
        });
    });


    // FcvVcfType Start
    $("#FcvVcfType").change(function () {
        $("#BeatId").trigger("change");
    });

    $("#BeatId").change(function () {
        var selectedItem = $(this).val();
        var forestFcvVcfList = $("#ForestFcvVcfId");
        var FcvVcfType = $("#FcvVcfType").val();
        if (selectedItem == "" || selectedItem == null || FcvVcfType == "" | FcvVcfType == null) {
            return true;
        }
    });

</script>

<script>
    $.validator.addMethod(
        'dateMustBeGreaterThanStart',
        function (value, element, requiredValue) {
            return dateMustBeGreaterThanStartDateFunc(value);
        },
        'Date must be greater or equal to start date.'
    );

    const dateMustBeGreaterThanStartDateFunc = date => {
        var startDate = $("#CommitteeFormDate").val();

        return (new Date(date)).toISOString() >= (new Date(startDate)).toISOString();
    }
</script>

<!--Commitee Management-->
<script>
     var count = 1;
        var itemDetails = [];

    function addMore(event) {
        debugger;
        var UserName = "";
        var UserId="";
        var FatherOrSpouseName = "";
        var ForestVillageName = "";
        var MobileNumber = "";

        var designetionName = $("#DesignetionName").val();
        if (designetionName.length <= 0) {
            alert("Please Write Designation");
            return;
        }

        var CipId = "";
        var OtherCmtMemId = "";
        CipId = parseInt($("#CipId").val());
        var cipObj = BeneficiaryInfo;
         


        if (Number.isNaN(CipId) === true || CipId === 0)
        {
            //alert("test");
           UserName = OtherCommitteeMemberInfo.FullName;
           UserId = OtherCommitteeMemberInfo.Id;
           FatherOrSpouseName = OtherCommitteeMemberInfo.FatherOrSpouse;
           ForestVillageName = OtherCommitteeMemberInfo.ForestFcvVcf.Name;
           MobileNumber = OtherCommitteeMemberInfo.PhoneNumber;
           OtherCmtMemId = OtherCommitteeMemberInfo.Id;
        }
        else
        {
            var item = BeneficiaryInfo.Data.find(item => item.Id === CipId);
            UserName = item.BeneficiaryName;
            UserId = item.Id;
            FatherOrSpouseName =item.FatherOrSpouseName;
            ForestVillageName = item.ForestVillageName;
            MobileNumber = item.MobileNumber;
        }

        //check cip Validetion
        var isUserExist = itemDetails.find(x => x.CipId == CipId);
        if (count > 1) {
            if (isUserExist !== undefined) {
                alert("Alredy User Added!");
                return;
            }
        }
        //check other member Validetion
        var isUserExist2 = itemDetails.find(x => x.OtherCommitteeMemberId == OtherCmtMemId);
        if (count > 1) {
            if (isUserExist2 !== undefined) {
                alert("Alredy User Added!");
                return;
            }
        }


        //event.preventDefault();
        var tbody = $("#tbody");

        tbody.append(`
                             <tr role="row" class="trClass" data-id="${count}">
                                        <td class="Id">${count}</td>
                                            <td data-designation="" class="BeneficiaryNameId">${UserName}</td>
                                            <td data-memberNameId="" class="FatherOrSpouseNameId">${FatherOrSpouseName}</td>
                                            <td class="ForestVillageNameId">${ForestVillageName}</td>
                                            <td class="MobileNumberId">${MobileNumber}</td>
                                            <td class="MobileNumberId">${designetionName}</td>
                                        <td>
                                            <div>
                                                <button style="background-color:red" class="btn btn-danger btn-sm" onclick="removeItem(${count})">Remove</button>
                                            </div>
                                        </td>
                                    </tr>                           
                       `);

        console.log(BeneficiaryInfo);

       
        itemDetails.push({
            //Id: CipId,
            Count: count,
            CipId: CipId,
            OtherCommitteeMemberId: OtherCmtMemId,
            DesignetionName : designetionName
            });

            count=count+1;

        OtherCommitteeMemberInfo.Id = 0;
        BeneficiaryInfo.Id = 0;


        $("#CipId").prop("selectedIndex", 0);
        $("#OtherCommitteeMemberId").prop("selectedIndex", 0);

    }
  
</script>

<script>

 

    function removeItem(id) 
    {
        for (var i = 0; i < itemDetails.length; i++) {
            if (itemDetails[i].Count === id) {
                itemDetails.splice(i, 1);
                //break;
            }
        }
        //alert(updatedHero);
        $(`[data-id=${id}]`).remove();
    }

   

    function submitFormData(event) {

         // Validate
        $("#CommitteeManagementForm").validate({
            rules: {
                ForestCircleId: "required",
                ForestDivisionId: "required",
                ForestRangeId: "required",
                ForestBeatId: "required",
                ForestFcvVcfId: "required",
                DivisionId: "required",
                DistrictId: "required",
                UpazillaId: "required",
                UnionId: "required",
                FcvVcfType: "required",
                //CipId:"required",
                TeamName: "required",
            }
        });

        var isFormValid = $("#CommitteeManagementForm").valid();
        if (isFormValid == false) {
            return;
        }

        if(itemDetails.length <= 0){
              alert("Please Add Committee Information !");
              return;
        }



        debugger;
        //event.preventDefault();
       // alert("Test save");

         var formData = new FormData();
        //formData.append('Id', $("#Id").val());
        formData.append('ForestCircleId', $("#ForestCircleId").val());
        formData.append('ForestDivisionId', $("#ForestDivisionId").val());
        formData.append('ForestRangeId', $("#ForestRangeId").val());
        formData.append('ForestBeatId', $("#ForestBeatId").val());
        formData.append('ForestFcvVcfId', $("#ForestFcvVcfId").val());
        formData.append('DivisionId', $("#DivisionId").val());
        formData.append('DistrictId', $("#DistrictId").val());
        formData.append('UpazillaId', $("#UpazillaId").val());
        formData.append('UnionId', $("#UnionId").val());
        formData.append('NgoId', $("#NgoId").val());
        formData.append('TeamName', $("#TeamName").val());
        formData.append('DocumentFileUrl', $('#DocumentFileUrl')[0].files[0]);
        //formData.append('CipId', $("#CipId").val());
         
        var CipTeamMembers = itemDetails.filter(Boolean);
        formData.append('CipTeamMembersJson', JSON.stringify(CipTeamMembers));

        console.log(formData);


        $.ajax({
            type: "POST",
            url: "/CipTeam/Create",
            data: formData,
            cache: false,
            contentType: false,
            processData: false,
            dataType: 'json',
            success: function (response) {
                window.location.href = "/CipTeam/Index";
                //location.reload();
            }
        });
    }
</script>

<script>
    $(document).ready(function () {
       //alert("test");
       $("#CipId").prop("selectedIndex", 0);
       $("#OtherCommitteeMemberId").prop("selectedIndex", 0);
    });

    $("#CipId").on("change", function () {
        $("#OtherCommitteeMemberId").prop("selectedIndex", 0);
    });

    $("#OtherCommitteeMemberId").on("change", function () {
        $("#CipId").prop("selectedIndex", 0);

        var otherMemberId = $("#OtherCommitteeMemberId").val();

        $.ajax({
            cache: false,
            type: "GET",
            url: "/CipTeam/GetOtherMemberById",
            data: { "id": otherMemberId },
            success: function (data) {
                $(".loader").fadeOut("slow");
                OtherCommitteeMemberInfo = data.Data;
               
            },
            error: function (xhr, ajaxOptions, thrownError) {
                //alert('Failed to retrieve data.');
            }
        });

        

    });

</script>