@using PTSL.GENERIC.Web.Core.Helper.Enum;
@model List<PTSL.GENERIC.Web.Core.Model.EntityViewModels.SocialForestry.NewRaisedPlantationVM>
@{
    ViewBag.Title = "Information And Data On Plantations Felled Or Cut";
}

@await Html.PartialAsync("~/Views/Shared/_DataTables.cshtml")

<div style="min-width: 250% !important;" class="card" id="reportView">
    <div class="card-header report_header no-print">
        <div>
            <h5>Information And Data On Plantations Felled Or Cut</h5>
        </div>
        <div>
            <button type="button" class="btn btn-primary btn-sm" onclick="printReport()">Print</button>
        </div>
    </div>

    <div class="card-body">
        <table class="reportTable" id="tableExport_filter">
            <thead>
                <tr>
                    <th colspan="26">
                        <div class="reportTableHeader">
                            <img src="/img/login/bd-govt.png" width="60" height="60" style="box-shadow: none;" />
                            <h3 class="font-weight-normal">Sustainable Forests & Livelihoods (SUFAL)</h3>
                            <h5>Information And Data On Plantations Felled Or Cut</h5>
                            <p class="font-16">Reporting date: @DateTime.Now.ToUIDateString()</p>
                        </div>
                    </th>
                </tr>
                <tr>
                    <th>SL</th>
                    <th>Forest Division</th>
                    <th>Civil District</th>
                    <th>Civil Union</th>
                    <th>Forest Range/SFNTC</th>
                    <th>Forest Beat/Camp/SFPC</th>
                    <th>Plantation Type</th>
                    <th>Plantation Year</th>
                    <th>Rotation No</th>
                    <th>Felling/Cutting year</th>
                    <th>Plantation Area</th>
                    <th>Timber</th>
                    <th>Pole</th>
                    <th>Fuel Wood</th>
                    <th>Total Sale Value</th>
                    <th>Total Realized Amount</th>
                    <th>Total Unrealized Amount</th>
                    <th>FD Amount</th>
                    <th>BFD Distributed Amount</th>
                    <th>BFD (Undistributed Amount)</th>
                   




             @*        <th>Land Owning Agency</th>
                    <th>Source of funding/Project name</th>
                    <th>Plantation year</th>
                    <th>Plantation Type</th>
                    <th>Location with Coordinate</th>
                    <th>Plantation Area</th>
                    <th>Cost Type</th>
                    <th>Total Cost</th>

                    <th>Labor Type</th>
                    <th>Male no</th>
                    <th>Female no</th>
                    <th>Total</th>

                    <th>Beneficiary Total Male</th>
                    <th>Beneficiary Total Female</th>
                    <th>Beneficiary Total</th>

                    <th>Social forestry management committee formed</th>
                    <th>Fund management sub committee formed</th>
                    <th>Advisory committee formed</th> *@
                    <th>Remarks</th>

                </tr>
            </thead>
            <tbody>
                @{
                    var index = 0;
                }

                @foreach (var item in Model)
                {
                    <tr>
                        <td>@(++index)</td>
                        <td>@item.ForestDivision.Name</td>
                        <td>@item.District.Name</td>
                        <td>@item.Upazilla.Name</td>
                        <td>@item.ForestRange.Name</td>
                        <td>@item.ForestBeat.Name</td>
                        <td>@item?.PlantationType?.Name</td>
                        <td>@item?.PlantedFinancialYear?.Name</td>
                        <td>@item.RotationNo</td>
                        <td>@item.ExpectedCuttingYear</td>
                        <td>@item.PlantationArea (@item?.PlantationUnit?.Name)</td>
                        <td>@item.CuttingPlantations.Select(x=>x.MarkedTimber).Sum() (@item.CuttingPlantations.Select(x=>x.MarkedTimberUnit.Name).FirstOrDefault())</td>
                        <td>@item.CuttingPlantations.Select(x=>x.MarkedPole).Sum() (@item.CuttingPlantations.Select(x=>x.MarkedPoleUnit.Name).FirstOrDefault())</td>
                        <td>@item.CuttingPlantations.Select(x=>x.MarkedFuelWood).Sum() (@item.CuttingPlantations.Select(x=>x.MarkedFuelWoodUnit.Name).FirstOrDefault())</td>
                        @{
                            double totalVal = 0;
                            foreach (var saleValueInfo in item.CuttingPlantations.Select(x => x.LotWiseSellingInformation))
                            {
                                totalVal = saleValueInfo.Select(x => x.TotalSaleValue).Sum();
                            }
                         }
                       <td>@totalVal</td>


                        @{
                            double totalRealizedVal = 0;
                            foreach (var realizationInfo in item.CuttingPlantations.Select(x => x.Realizations))
                            {
                                totalRealizedVal = realizationInfo.Select(x => x.TotalSaleValue).Sum();
                            }
                        }
                        <td>@totalRealizedVal</td>

                        @{
                            double totalLotWiseSellingVal = 0;
                            foreach (var lotWiseSellingInfo in item.CuttingPlantations.Select(x => x.LotWiseSellingInformation))
                            {
                                totalLotWiseSellingVal = lotWiseSellingInfo.Select(x => x.TotalSaleValue).Sum();
                            }
                        }
                        <td>@totalLotWiseSellingVal</td>


                        @{
                            double totalAmountOfShareToBeDistributed = totalRealizedVal;
                            double totalCurrentDistributedAmount = 0;

                            foreach (var shareDistributionInfo in item.CuttingPlantations.Select(x => x.ShareDistributions))
                            {
                                totalCurrentDistributedAmount = shareDistributionInfo.Select(x => x.DepositedRevenueAmount).Sum();
                            }
                        }
                        <td>@(totalAmountOfShareToBeDistributed - totalCurrentDistributedAmount)</td>

                        @{
                            double distributedAmountVal = 0;
                            foreach (var ldistributedAmountInfo in item.CuttingPlantations.Select(x => x.ShareDistributions.Where(x => x.DistributionFundTypeId == 2)))
                            {
                                distributedAmountVal = ldistributedAmountInfo.Select(x => x.DepositedRevenueAmount).Sum();
                            }
                        }
                        <td>@distributedAmountVal</td>


                        <td>@((totalAmountOfShareToBeDistributed - totalCurrentDistributedAmount) - distributedAmountVal)</td>



                        <td>@item.Remarks</td>
                    </tr>
                }
            </tbody>
            <tfoot class="reportTfoot">
                <tr>
                    <td colspan="20" class="text-center">Total:</td>
                    <td colspan="22" class="text-center">@(Model.Count)</td>
                </tr>
            </tfoot>
        </table>
    </div>
</div>

<script>
    $(document).ready(function () {
        $('#tableExport_filter').DataTable({
            pageLength: 10,
            dom: 'Blfrtip',
            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, "All"]],
            buttons: ['excel', 'pdf']
        });
    });
</script>

