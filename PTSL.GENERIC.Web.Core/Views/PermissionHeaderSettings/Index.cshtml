@model IEnumerable<PTSL.GENERIC.Web.Core.Model.EntityViewModels.PermissionSettings.PermissionHeaderSettingsVM>
@{
    ViewBag.Title = "Index";
}

<style>
    .btn-warning:hover,
    .btn-warning:focus,
    .btn-warning:active,
    .btn-warning.disabled:hover,
    .btn-warning.disabled:focus,
    .btn-warning.disabled:active :hover {
        background-color: white !important;
        color: red !important;
    }
</style>

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <div class="col-md-10 p-0">
                    <h4>Permission Settings List</h4>
                </div>
                <div class="col-md-2 text-right p-0">
                    <a href="/PermissionHeaderSettings/Create" class="badge badge-success badge-shadow">Create New</a>
                </div>
            </div>

            <div class="card-body">
               
               @* <form asp-action="IndexFilter" asp-controller="PermissionHeaderSettings" class="mb-4 green-card p-2" style="border-radius: 5px;">*@
                     
                    <div class="row custom">
                       @* <div class="col-6 p-1">
                            @await Html.PartialAsync(
                            "~/Views/Shared/_ForestAdministration.cshtml",
                            (
                            ViewBag.ForestCircleId as SelectList,
                            ViewBag.ForestDivisionId as SelectList,
                            ViewBag.ForestRangeId as SelectList,
                            ViewBag.ForestBeatId as SelectList,
                            ViewBag.ForestFcvVcfId as SelectList
                            )
                            )
                        </div>*@

                        <div class="col-6 p-1">
                            @*<fieldset class="p-2">
                            <legend class="float-none w-auto">Civil Administrative Unit</legend>
                            <div class="row">
                            <div class="col-6 pr-1">
                            <label class="m-0">Division</label>
                            @Html.DropDownList("DivisionId", null, "Select Division", htmlAttributes: new { @class = "" })
                            </div>
                            <div class="col-6 pl-1">
                            <label class="m-0">District</label>
                            @Html.DropDownList("DistrictId", null, "Select District", htmlAttributes: new { @class = "" })
                            </div>
                            </div>
                            <div class="row mt-2">
                            <div class="col-6 pr-1">
                            <label class="m-0">Upazilla</label>
                            @Html.DropDownList("UpazillaId", null, "Select Upazilla", htmlAttributes: new { @class = "" })
                            </div>
                            <div class="col-6 pl-1">
                            <label class="m-0">Union</label>
                            <select>
                            <!option>Choose</!option>
                            </select>
                            </div>
                            </div>
                            </fieldset>*@

                          @*  @await Html.PartialAsync(
                            "~/Views/Shared/_CivilAdministration.cshtml",
                            (
                            ViewBag.DivisionId as SelectList,
                            ViewBag.DistrictId as SelectList,
                            ViewBag.UpazillaId as SelectList,
                            ViewBag.UnionId as SelectList
                            )
                            )*@

                        </div>
                    </div>
                    <!--Extra Filter Start-->
                    @*                    <div class="row custom">
                    <div class="col-12 p-1">
                    <fieldset class="p-2">
                    <legend class="float-none w-auto">Basic Information</legend>
                    <div class="row">
                    <div class="col pr-1">
                    <label class="m-0">NGO</label>
                    @Html.DropDownList("NgoId", null, "Select NGO", htmlAttributes: new { })
                    </div>
                    <div class="col px-1">
                    <label class="m-0">Mobile Number</label>
                    <input type="text" id="PhoneNumber" value="@ViewBag.PhoneNumber" name="PhoneNumber" placeholder="Enter Beneficiary Mobile Number" />
                    </div>
                    <div class="col px-1">
                    <label class="m-0">NID</label>
                    <input type="text" id="NID" value="@ViewBag.NID" name="NID" placeholder="Enter Beneficiary NID (if any)" />
                    </div>
                    <div class="col pl-1">
                    <label class="m-0">Gender</label>
                    @Html.DropDownList("Gender", null, "Select Gender", htmlAttributes: new { })
                    </div>
                    </div>
                    </fieldset>
                    </div>
                    </div>*@
                    <!--Extra Filter End-->


                   @* <div class="d-flex justify-content-end mt-2">
                        <button type="submit" class="btn btn-sm btn-green save">Search</button>
                    </div>*@
                    <!-- </form> -->

                <div class="table-responsive">
                    <table class="table table-striped table-bordered table-hover" id="tableExport_filter" style="width:100%;">
                        <thead>
                            <tr>
                                <th>Sl No.</th>
                                <th>Module Name</th>
                                @*<th>Prepare Information User Role</th>
                                <th>Prepare Information User Name</th>*@
                                <th>Total Approval Authority</th>

                                <th class="not-export-col">Action</th>
                            </tr>
                        </thead> @{
                            int i = 1;
                        }
                        <tbody>
                            @if (Model != null)
                            {
                                foreach (var data in Model)
                                {
                                 
                                    <tr style="">
                                        @*<td>@data.Id</td>*@
                                        <td>@i.ToString()</td>
                                        @*<td>@data?.ModuleEnumId.GetEnumDisplayName()</td>*@
                                        <td>@data?.Accesslist?.Mask</td>
                                        @*<td>@data?.UserRole?.RoleName</td>
                                        <td>@data?.User?.UserName</td>*@

                                        <td>@data?.PermissionRowSettings?.Where(x=>x.IsDeleted == false).Count()</td>
                                       
                                        <td class="not-export-col">
                                            <a href="/PermissionHeaderSettings/Edit?id=@data.Id" class="btn btn-primary btn-sm">Edit</a>
                                            <a href="/PermissionHeaderSettings/Details?id=@data.Id" class="btn btn-info btn-sm">Details</a>
                                            <button onclick="showDeleteConfirmMessage(@data.Id)" class="btn btn-danger btn-sm">Delete</button>
                                        </td>
                                    </tr>
                                    i++;
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>



        </div>
    </div>
</div>
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.12.1/css/jquery.dataTables.css">
<script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/1.12.1/js/jquery.dataTables.js"></script>
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/buttons/1.5.6/css/buttons.dataTables.min.css" />
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jszip/2.5.0/jszip.min.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/pdfmake.min.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/vfs_fonts.js"></script>
<script type="text/javascript" src="https://cdn.datatables.net/1.10.18/js/jquery.dataTables.min.js"></script>
<script type="text/javascript" src="https://cdn.datatables.net/buttons/1.5.6/js/dataTables.buttons.min.js"></script>
<script type="text/javascript" src="https://cdn.datatables.net/buttons/1.5.6/js/buttons.html5.min.js"></script>
<script type="text/javascript" src="https://cdn.datatables.net/buttons/1.5.6/js/buttons.print.min.js"></script>



<script>
    $(document).ready(function () {
        $('#tableExport_filter').DataTable({
            pageLength: 5,
            dom: 'lBfrtip',

            buttons: [
                'copy',
                {
                    extend: 'csv',
                    title: 'Permission Settings List',
                    exportOptions: {
                        columns: [0, 1, 2, 3, 4]
                    }
                },
                {
                    extend: 'excel',
                    title: 'Permission Settings List',
                    exportOptions: {
                        columns: [0, 1, 2, 3, 4]
                    }
                },
                {
                    extend: 'pdf',
                    title: 'Permission Settings List',
                    exportOptions: {
                        columns: [0, 1, 2, 3, 4]
                    }
                },
                {
                    extend: 'print',
                    title: 'Permission Settings List',
                    exportOptions: {
                        columns: [0, 1, 2, 3, 4]
                    }
                }
            ]
        });
    });



    $(document).ready(function () {
        $('.buttons-copy').hide();
    });


    function showDeleteConfirmMessage(id) {
        swal({
            title: "Are you sure?",
            text: "You will not be able to recover this item!",
            type: "warning",
            showCancelButton: true,
            confirmButtonColor: "#DD6B55",
            confirmButtonText: "Yes, delete it!",
            closeOnConfirm: false
        }, function () {
            var data = {
                'id': id
            };
            $.ajax({
                type: "GET",
                contentType: "application/json; charset=utf-8",
                url: "/PermissionHeaderSettings/Delete",
                data: data,
                datatype: "json",
                success: function (result) {
                    console.log(result);
                    var message = result.Message;
                    var executionState = result.executionState;
                    if (executionState != null) {
                        if (executionState != 10) {
                            swal("Deleted!", "Item has been deleted.", "success");
                        } else {
                            swal("Deleted Failed!", message, "success");
                        }
                        $(".confirm").on('click', function () {
                            window.location.reload();
                        });
                    }
                },
                error: function (xmlhttprequest, textstatus, errorthrown) {
                    swal("Not Deleted!", "Item has not been deleted.", "error");
                }
            });
        });
    }
</script>

<script>
    $("#ForestCircleId").change(function () {
        var selectedItem = $(this).val();
        var forestDivisonList = $("#ForestDivisionId");
        if (selectedItem == "" || selectedItem == null) {
            return true;
        }

        $.ajax({
            cache: false,
            type: "GET",
            url: "/Dropdown/ListForestDivisionByForestCircle",
            data: { "id": selectedItem },
            success: function (data) {
                forestDivisonList.html('<option value="">Choose Forest Divison</option>');
                $.each(data, function (id, option) {
                    forestDivisonList.append($('<option></option>').val(option.Id).html(option.Name));
                });
                forestDivisonList.prop("disabled", false);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert('Failed to retrieve data.');
            }
        });
    });

    $("#ForestDivisionId").change(function () {
        var selectedItem = $(this).val();
        var forestRangeList = $("#ForestRangeId");
        if (selectedItem == "" || selectedItem == null) {
            return true;
        }

        $.ajax({
            cache: false,
            type: "GET",
            url: "/Dropdown/ListForestRangeByForestDivision",
            data: { "id": selectedItem },
            success: function (data) {
                forestRangeList.html('<option value="">Choose  Forest Range</option>');
                $.each(data, function (id, option) {
                    forestRangeList.append($('<option></option>').val(option.Id).html(option.Name));
                });
                forestRangeList.prop("disabled", false);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert('Failed to retrieve data.');
            }
        });
    });

    $("#ForestRangeId").change(function () {
        var selectedItem = $(this).val();
        var forestBeatList = $("#ForestBeatId");
        if (selectedItem == "" || selectedItem == null) {
            return true;
        }

        $.ajax({
            cache: false,
            type: "GET",
            url: "/Dropdown/ListForestBeatByForestRange",
            data: { "id": selectedItem },
            success: function (data) {
                forestBeatList.html('<option value="">Choose Forest Beat</option>');
                $.each(data, function (id, option) {
                    forestBeatList.append($('<option></option>').val(option.Id).html(option.Name));
                });
                forestBeatList.prop("disabled", false);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert('Failed to retrieve data.');
            }
        });
    });

    $("#ForestBeatId").change(function () {
        var selectedItem = $(this).val();
        var forestFcvVcfList = $("#ForestFcvVcfId");
        if (selectedItem == "" || selectedItem == null) {
            return true;
        }

        $.ajax({
            cache: false,
            type: "GET",
            url: "/Dropdown/ListForestFcvVcfByForestBeat",
            data: { "id": selectedItem },
            success: function (data) {
                forestFcvVcfList.html('<option value="">Choose FCV/VCF</option>');
                $.each(data, function (id, option) {
                    forestFcvVcfList.append($('<option></option>').val(option.Id).html(option.Name));
                });
                forestFcvVcfList.prop("disabled", false);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert('Failed to retrieve data.');
            }
        });
    });

    $("#DivisionId").change(function () {
        var selectedItem = $(this).val();
        var PresentDistrictId = $("#DistrictId");
        if (selectedItem == "" || selectedItem == null) {
            return true;
        }

        $.ajax({
            cache: false,
            type: "GET",
            url: "/Dropdown/ListDistrictByDivision",
            data: { "id": selectedItem },
            success: function (data) {
                PresentDistrictId.html('<option value="">Choose District</option>');
                $.each(data, function (id, option) {
                    PresentDistrictId.append($('<option></option>').val(option.Id).html(option.Name));
                });
                PresentDistrictId.prop("disabled", false);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert('Failed to retrieve data.');
            }
        });
    });

    $("#DistrictId").change(function () {
        var selectedItem = $(this).val();
        var PresentUpazillaId = $("#UpazillaId");
        if (selectedItem == "" || selectedItem == null) {
            return true;
        }

        $.ajax({
            cache: false,
            type: "GET",
            url: "/Dropdown/ListUpazillaByDistrict",
            data: { "id": selectedItem },
            success: function (data) {
                PresentUpazillaId.html('<option value="">Choose Upazilla</option>');
                $.each(data, function (id, option) {
                    PresentUpazillaId.append($('<option></option>').val(option.Id).html(option.Name));
                });
                PresentUpazillaId.prop("disabled", false);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert('Failed to retrieve data.');
            }
        });
    });
</script>


