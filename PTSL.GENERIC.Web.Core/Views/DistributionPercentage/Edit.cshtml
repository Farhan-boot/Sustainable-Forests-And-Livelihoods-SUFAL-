@model IEnumerable<PTSL.GENERIC.Web.Core.Model.EntityViewModels.SocialForestry.Cutting.DistributionPercentageVM>
@{
    ViewBag.Title = "Edit";
    var Message = ViewBag.Message;
    var plantationTypelist = ViewBag.PlantationType;
    var distributionFundTypeList = ViewBag.DistributionFundType;
}
@section Styles {
    <link rel="stylesheet" href="~/multiselect/jquery.multiselect.css">
    <style>
        select[multiple] + div div.ms-options li label input {
            margin-right: 8px !important;
            margin-top: 5px !important;
        }

        label.error {
            color: red;
        }
    </style>
    <style>
        input, select {
            height: 30px !important;
            line-height: 10px !important;
            font-weight: 400 !important;
            color: black !important;
        }

        legend {
            font-weight: 500 !important;
            font-size: 20px !important;
        }
    </style>
}
@section Scripts {
    <script src="~/multiselect/jquery.multiselect.js" defer></script>
}


<div class="card">
    <div class="card-header">
        <h4>
            <a href="/DistributionPercentage/Index" class="mr-1 back">
                <svg width="20" height="20" viewBox="0 0 32 32">
                    <path fill="currentColor" d="m14 26l1.41-1.41L7.83 17H28v-2H7.83l7.58-7.59L14 6L4 16l10 10z" />
                </svg>
            </a>
            Edit Distribute Percentage
        </h4>
        <button class="ml-auto reset btn btn-sm" onclick="resetFromData('#DistributePercentageForm')">
            <svg class="rotate180z" width="16" height="16" viewBox="0 0 32 32">
                <path d="M25.95 7.65l.005-.004c-.092-.11-.197-.206-.293-.312c-.184-.205-.367-.41-.563-.603c-.139-.136-.286-.262-.43-.391c-.183-.165-.366-.329-.558-.482c-.16-.128-.325-.247-.49-.367c-.192-.14-.385-.277-.585-.406a13.513 13.513 0 0 0-.533-.324q-.308-.179-.625-.341c-.184-.094-.37-.185-.56-.27c-.222-.1-.449-.191-.678-.28c-.19-.072-.378-.145-.571-.208c-.246-.082-.498-.15-.75-.217c-.186-.049-.368-.102-.556-.143c-.29-.063-.587-.107-.883-.15c-.16-.023-.315-.056-.476-.073A12.933 12.933 0 0 0 6 7.703V4H4v8h8v-2H6.811A10.961 10.961 0 0 1 16 5a11.111 11.111 0 0 1 1.189.067c.136.015.268.042.403.061c.25.037.501.075.746.128c.16.035.315.08.472.121c.213.057.425.114.633.183c.164.054.325.116.486.178c.193.074.384.15.57.235c.162.072.32.15.477.23q.268.136.526.286c.153.09.305.18.453.276c.168.11.33.224.492.342c.14.102.282.203.417.312c.162.13.316.268.47.406c.123.11.248.217.365.332c.167.164.323.338.479.512A10.993 10.993 0 1 1 5 16H3a13 13 0 1 0 22.95-8.35z" fill="currentColor" />
            </svg>
            Reset
        </button>
    </div>

    <div class="card-body">
        @using (Html.BeginForm("Edit", "DistributionPercentage", FormMethod.Post, new { id = "DistributePercentageForm" }))
        {
            <input hidden id="crntPId"value="@ViewBag.CuurentPlantationTypeId"/>
            <div class="form-horizontal">

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for=""> Plantation Type<span style="color:red;">*</span></label>
                            <select id="PlantationTypeId" name="PlantationTypeId" class="form-control" required>
                                <option value="">Select Plantation Type</option>
                                @if (plantationTypelist != null)
                                {

                                    @foreach (var item in plantationTypelist)
                                    {
                                        if (item.Id == Model.FirstOrDefault().PlantationTypeId)
                                        {
                                            <option value="@item.Id" selected>@item.Name</option>
                                        }
                                        else
                                        {
                                            <option value="@item.Id">@item.Name</option>
                                        }

                                    }
                                }
                            </select>

                        </div>
                    </div>

                </div>

                <div class="container m-0 p-0 form-group">
                    <label>Distribution Fund Type List</label>
                    @if (distributionFundTypeList != null)
                    {
                        <input hidden id="distributionFundTypeListCount" value="@distributionFundTypeList.Count" />


                        @for (var item = 0; item < distributionFundTypeList.Count; item++)
                        {
                            <div class="row custom">
                                <div class="col-3 mt-4">
                                    <input hidden id="distributionFundTypeId_@item" value="@distributionFundTypeList[item].Id" />
                                    <input class="form-control text-center" id="@distributionFundTypeList[item]" value="@distributionFundTypeList[item].Name" readonly />
                                </div>
                                <div class="col-3">
                                    <label for=""> Percentage<span style="color:red;">*</span></label>
                                    @foreach (var fund in Model)
                                    {
                                        @if (fund.DistributionFundTypeId == distributionFundTypeList[item].Id)
                                        {

                                            <input hidden id="distributionPercentageId_@item"value="@fund.Id" class="form-control" />
                                            <input id="percentage_@item" name="Percentage" type="number" value="@fund.Percentage" class="form-control percentage-input" />
                                        }
                                    }
                                </div>
                            </div>
                        }
                        <hr />
                        <div class="row custom">
                            <div class=" col-md-3 text-center">
                                <label class="">Total</label>
                            </div>
                            <div class=" col-md-3 ">
                                <input id="totalPercentage" class="form-control text-center" value="0%" readonly />
                                <div id="errorMessage" style="color: red;"></div>
                            </div>
                        </div>


                    }

                </div>

                <div class="form-group col-md-12">
                    <button type="button" class="btn btn-primary submit-btn pull-right btn-sm" id="submitButton" disabled>Submit</button>
                </div>
            </div>
        }
    </div>
</div>

<script>
    $(".submit-btn").on("click", function () {
        debugger
        let distributionFundTypeListCount = parseInt($("#distributionFundTypeListCount").val());
        let distributionPercentage = [];

        for (var i = 0; i < distributionFundTypeListCount; i++) {
            var DistributionFundTypeId = $(`#distributionFundTypeId_${i}`).val();
            var percentage = $(`#percentage_${i}`).val();
            var distributionPercentageId = $(`#distributionPercentageId_${i}`).val();
            distributionPercentage.push({
                Id: distributionPercentageId,
                PlantationTypeId: $("#PlantationTypeId").val(),
                DistributionFundTypeId: DistributionFundTypeId,
                Percentage: percentage
            })
        }

        var formData = new FormData();
        let obj = {
            DistributionPercentageListVM: distributionPercentage
        }
        let plantTypeId = $("#crntPId").val();
        objectToFormData(obj, formData);
        debugger;
        $.ajax({
            type: "POST",
            url: `/DistributionPercentage/Edit/${plantTypeId}`,
            data: formData,
            cache: false,
            contentType: false,
            processData: false,
            dataType: 'json',
            success: function (data) {
                $(".loader").fadeOut("fast");

                if (data.RedirectUrl) {
                    window.location.href = data.RedirectUrl;
                    return;
                }

                if (data.Success) {
                    swal(
                        'Success',
                        data.Message,
                        'success'
                    );
                } else {
                    swal(
                        'Failed',
                        data.Message,
                        'error'
                    );
                }
            },
            error: function (xhr, ajaxOptions, thrownError) {
                $(".loader").fadeOut("fast");

                swal(
                    'Failed',
                    'Unexpected Error Occured',
                    'error'
                );
            }
        });


        if ($("#DistributePercentageForm").valid()) {
            //Do something here
            $(".loader").fadeIn("slow");
        }
    });

    document.addEventListener('input', function (event) {
        if (event.target.classList.contains('percentage-input')) {
            updateTotalPercentage();
        }
    });

    function updateTotalPercentage() {
        var total = 0;
        var inputs = document.querySelectorAll('.percentage-input');
        inputs.forEach(function (input) {
            total += parseFloat(input.value) || 0;
        });
        $("#totalPercentage").val(total + "%");

        var errorMessage = document.getElementById('errorMessage');
        if (total > 100.0) {

            errorMessage.textContent = 'Total percentage cannot exceed 100!';
        }
        else {
            errorMessage.textContent = '';

        }
        if (total === 100.0) {
            $("#submitButton").removeAttr("disabled")
        }
        else {
            $("#submitButton").attr("disabled", "disabled")
        }
    }
    $(document).ready(function () {
        updateTotalPercentage();
        $("#DistributePercentageForm").validate({
            rules: {
                Name: "required",
                PlantationTypeId: "required",
                Percentage: "required"
            }
        });
    });


    function objectToFormData(dataObject, formData, parentKey) {
        for (var key in dataObject) {
            if (dataObject.hasOwnProperty(key)) {
                var propName = parentKey ? `${parentKey}[${key}]` : key;

                if (typeof dataObject[key] === 'object' && !Array.isArray(dataObject[key])) {
                    // Nested object, recursively convert it
                    objectToFormData(dataObject[key], formData, propName);
                } else if (Array.isArray(dataObject[key])) {
                    // Array of objects, loop through and convert each item
                    dataObject[key].forEach(function (item, index) {
                        var arrayKey = `${propName}[${index}]`;
                        objectToFormData(item, formData, arrayKey);
                    });
                } else {
                    // Regular key-value pair
                    formData.append(propName, dataObject[key]);
                }
            }
        }
    }

</script>