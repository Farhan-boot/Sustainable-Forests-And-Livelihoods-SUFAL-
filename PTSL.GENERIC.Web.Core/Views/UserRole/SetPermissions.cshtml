@using PTSL.GENERIC.Web.Core.Model.EntityViewModels.SystemUser;
@model PTSL.GENERIC.Web.Core.Model.EntityViewModels.SystemUser.UserRoleVM
@{
    ViewBag.Title = "Add Permissions to Role";

    var permissions = (List<PermissionGroup>)ViewBag.PermissionList;
    var rolePermissionList = (List<string>)ViewBag.RolePermissionList;
}

<style>
    .collapsible {
        margin-bottom: 10px;
        border: 1px solid #ccc;
        padding: 10px;
        border-radius: 5px;
    }

    .permission-list {
        padding-left: 20px;
        display: flex;
        flex-direction: column;
        gap: 0;
    }

    .collapsible-trigger {
        cursor: pointer;
        position: relative;
        display: flex;
        gap: 8px;
    }

    .collapsible-trigger::after {
        content: "";
        position: absolute;
        top: 50%;
        right: 2px;
        display: block;
        width: .42em;
        height: .42em;
        border: 1.5px solid;
        border-bottom: 0;
        border-left: 0;
        transition: transform .3s ease;
        transform: translateY(-50%) rotate(-45deg);
        will-change: transform;
    }

        .collapsible-trigger.triggered::after {
            transition: transform .3s ease;
            transform: translateY(-50%) rotate(135deg);
        }

    .not-active {
        display: none;
    }

    .permission-group {
        display: grid;
        grid-template-columns: 1fr 1fr 1fr;
        column-gap: 10px;
    }

    .single-permission {
        display: flex;
        align-items: center;
        gap: 5px;
    }

        .single-permission label {
            padding: 0 !important;
            margin: 0 !important;
            user-select: none;
            font-weight: 500;
        }
</style>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const menuTriggers = document.querySelectorAll(".collapsible-trigger");

        menuTriggers.forEach(function (trigger) {
            trigger.addEventListener("click", function (e) {
                const selectAll = trigger.querySelector(".select-all");
                const submenu = this.nextElementSibling;

                if (e.target == selectAll) {
                    const allCheckbox = submenu.querySelectorAll("input[type='checkbox']");
                    allCheckbox.forEach(c => {
                        c.checked = selectAll.checked;
                    });

                    return;
                }

                this.classList.toggle("triggered");

                if (submenu) {
                    submenu.classList.toggle("not-active");
                }
            });
        });

        const selectAllGroup = document.getElementById("select-all-group");

        selectAllGroup.addEventListener("click", function (e) {
            const allCheckbox = document.querySelectorAll(".permission-group input[type='checkbox']");
            allCheckbox.forEach(c => {
                c.checked = e.target.checked;
            });
        });
    });
</script>

<div class="card">
    <div class="card-header">
        <h4>
            <a href="/UserRole/Index" class="mr-1 back">
                <svg width="20" height="20" viewBox="0 0 32 32">
                    <path fill="currentColor" d="m14 26l1.41-1.41L7.83 17H28v-2H7.83l7.58-7.59L14 6L4 16l10 10z" />
                </svg>
            </a>
            Add Permissions to Role
        </h4>
        <button class="ml-auto reset btn btn-sm" onclick="resetFromData('#Form')">
            <svg class="rotate180z" width="16" height="16" viewBox="0 0 32 32">
                <path d="M25.95 7.65l.005-.004c-.092-.11-.197-.206-.293-.312c-.184-.205-.367-.41-.563-.603c-.139-.136-.286-.262-.43-.391c-.183-.165-.366-.329-.558-.482c-.16-.128-.325-.247-.49-.367c-.192-.14-.385-.277-.585-.406a13.513 13.513 0 0 0-.533-.324q-.308-.179-.625-.341c-.184-.094-.37-.185-.56-.27c-.222-.1-.449-.191-.678-.28c-.19-.072-.378-.145-.571-.208c-.246-.082-.498-.15-.75-.217c-.186-.049-.368-.102-.556-.143c-.29-.063-.587-.107-.883-.15c-.16-.023-.315-.056-.476-.073A12.933 12.933 0 0 0 6 7.703V4H4v8h8v-2H6.811A10.961 10.961 0 0 1 16 5a11.111 11.111 0 0 1 1.189.067c.136.015.268.042.403.061c.25.037.501.075.746.128c.16.035.315.08.472.121c.213.057.425.114.633.183c.164.054.325.116.486.178c.193.074.384.15.57.235c.162.072.32.15.477.23q.268.136.526.286c.153.09.305.18.453.276c.168.11.33.224.492.342c.14.102.282.203.417.312c.162.13.316.268.47.406c.123.11.248.217.365.332c.167.164.323.338.479.512A10.993 10.993 0 1 1 5 16H3a13 13 0 1 0 22.95-8.35z" fill="currentColor" />
            </svg>
            Reset
        </button>
    </div>

    <form id="Form" asp-controller="UserRole" asp-action="Create" class="card-body mt-2">
        <div class="row">
            <div class="col-md-3 col-sm-12">
                <label>
                    Role Name
                </label>
                <input type="text"
                       name="@nameof(Model.RoleName)"
                       placeholder="Enter Role Name"
                       value="@Model.RoleName"
                       class="form-control"
                       disabled />
            </div>
        </div>

        <hr />

        <div>
            <input type="checkbox" id="select-all-group" />
            <label for="select-all-group" style="user-select: none;">Select All</label>
        </div>

        <div class="permission-group">
            @foreach (var group in permissions)
            {
                <div class="collapsible">
                    <h6 class="collapsible-trigger">
                        <span>
                            <input type="checkbox" value="" class="select-all" @(group.Permissions.All(x => rolePermissionList.Contains(x.PermissionName)) ? "checked" : "") />
                        </span>
                        <span>
                            @group.GroupName
                        </span>
                    </h6>
                    <div class="permission-list">
                        @foreach (var permission in group.Permissions)
                        {
                            <div class="single-permission">
                                <input type="checkbox" value="@permission.PermissionName" id="@permission.PermissionName" @(rolePermissionList.Any(x => x == permission.PermissionName) ? "checked" : "") />
                                <label for="@permission.PermissionName">@permission.PermissionDetails</label>
                            </div>
                        }
                    </div>
                </div>
            }
        </div>

        <div class="d-flex justify-content-end py-2">
            <button type="button" id="submit-btn" class="btn btn-sm btn-green save">
                Save
            </button>
        </div>
    </form>
</div>

<script>
    $("#submit-btn").on("click", function () {

        let permissions = [];
        document.querySelectorAll("#Form input[type='checkbox']").forEach(x => {
            if (x.checked) {
                permissions.push(x.value);
            }
        })
        permissions = permissions.filter(Boolean);
        permissions = permissions.filter(x => x != 'on');

        const data = {
            UserRoleId: @Model.Id,
            Permissions: permissions
        }

        console.log(data);

        $.ajax({
            cache: false,
            type: "POST",
            url: "/UserRole/SetPermissions",
            data: data,
            success: function (data) {
                if (data.Success) {
                    swal(
                        'Success',
                        data.Message,
                        'success'
                    );
                }
                else {
                    swal(
                        'Error',
                        data.Message,
                        'error'
                    );
                }
            },
            error: function (xhr, ajaxOptions, thrownError) {
            }
        });
    });

    $("#Form").validate({
        rules: {
        },
    });
</script>

