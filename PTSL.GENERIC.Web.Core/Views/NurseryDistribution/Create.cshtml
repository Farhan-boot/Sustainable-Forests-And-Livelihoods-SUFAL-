@model PTSL.GENERIC.Web.Core.Model.EntityViewModels.SocialForestry.Nursery.NurseryDistributionVM
@{
    ViewBag.Title = "Create";
    var Message = ViewBag.Message;
    var nurseryRaisingSectorIdList = ViewBag.NurseryRaisingSectorId;
    var nurseryData = ViewBag.NurseryData;
    var b = ViewBag.ForestCircleId;
}

<script defer src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js"></script>

<style>

    .btn-remove {
        background-color: #fc544b !important;
        border-color: #fc544b !important;
        color: white;
    }

        .btn-remove:hover {
            color: white;
        }


    .btn-addMore:hover {
        background-color: green !important;
        color: white;
    }

    tr, td {
        border: 2px solid #d0d0d0 !important;
    }

    legend {
        font-weight: 500 !important;
        font-size: 20px !important;
    }
</style>
<div class="row">
    <div class="col-12">

        <div class="card">
            <div class="card-header">
                <h4>
                    <a href="/NurseryDistribution/Index/@nurseryData.Id" class="mr-1 back">
                        <svg width="20" height="20" viewBox="0 0 32 32">
                            <path fill="currentColor"
                                  d="m14 26l1.41-1.41L7.83 17H28v-2H7.83l7.58-7.59L14 6L4 16l10 10z" />
                        </svg>
                    </a>
                    Nursery Distribution
                </h4>
                <button class="ml-auto reset btn btn-sm" onclick="resetFromData('#NurseryInformationForm')">
                    <svg class="rotate180z" width="16" height="16" viewBox="0 0 32 32">
                        <path d="M25.95 7.65l.005-.004c-.092-.11-.197-.206-.293-.312c-.184-.205-.367-.41-.563-.603c-.139-.136-.286-.262-.43-.391c-.183-.165-.366-.329-.558-.482c-.16-.128-.325-.247-.49-.367c-.192-.14-.385-.277-.585-.406a13.513 13.513 0 0 0-.533-.324q-.308-.179-.625-.341c-.184-.094-.37-.185-.56-.27c-.222-.1-.449-.191-.678-.28c-.19-.072-.378-.145-.571-.208c-.246-.082-.498-.15-.75-.217c-.186-.049-.368-.102-.556-.143c-.29-.063-.587-.107-.883-.15c-.16-.023-.315-.056-.476-.073A12.933 12.933 0 0 0 6 7.703V4H4v8h8v-2H6.811A10.961 10.961 0 0 1 16 5a11.111 11.111 0 0 1 1.189.067c.136.015.268.042.403.061c.25.037.501.075.746.128c.16.035.315.08.472.121c.213.057.425.114.633.183c.164.054.325.116.486.178c.193.074.384.15.57.235c.162.072.32.15.477.23q.268.136.526.286c.153.09.305.18.453.276c.168.11.33.224.492.342c.14.102.282.203.417.312c.162.13.316.268.47.406c.123.11.248.217.365.332c.167.164.323.338.479.512A10.993 10.993 0 1 1 5 16H3a13 13 0 1 0 22.95-8.35z"
                              fill="currentColor" />
                    </svg>
                    Reset
                </button>
            </div>

            <div class="card-body ">

                <!form @@submit.prevent x-cloak x-data="new_nursary_distribution_information" class="mb-4" id="nurseryDistributionForm" style="border-radius: 5px;" >
                <div class="container-fluid m-0 p-0">
                    <div class="row custom green-card m-3" style="border-radius: 5px;">

                        <div class="col-12 p-1 ">
                            <fieldset class="p-2 col-12 mb-2">
                                <legend class="float-none w-auto">Nursary Information</legend>
                                <div class="row">
                                    <div class="col-3 pr-1">
                                        <label class="m-0"> Nursary <span style="color:red">*</span></label>

                                        <input value="@nurseryData.NurseryName" disabled />
                                    </div>
                                </div>
                                <label class=""> Avialable Seedling in Nursary</label>
                                    @if (nurseryData.Id > 0)
                                    {

                                    <div class="row">

                                            @if (nurseryData != null)
                                            {
                                                @foreach (var info in nurseryData.NurseryRaisedSeedlingInformation)
                                                {
                                                <div class="col-3 pr-1 my-auto">
                                                </div>
                                                <div class="col-9 pl-1">
                                                    <div class="row">
                                                        <div class="col-6">
                                                            <label class=""> Species Name</label>
                                                            <input hidden id="nurserySeedling_@info.Id" value="@info.SeedlingRaised" />
                                                            <input type="text" value="@info.SpeciesName" readonly />
                                                        </div>

                                                        <div class="col-6">
                                                            <label class=""> Avialable Number of Seedling</label>
                                                            <input type="number" name="SeedlingRaised" value="@info.SeedlingRaised" id="seedLingRaisdValue_@info.Id" readonly />
                                                        </div>
                                                    </div>
                                                </div>
                                                }
                                            }
                                    </div>
                                    }

                            </fieldset>
                        </div>
                    </div>

                    <div class="row custom green-card m-3" style="border-radius: 5px;">

                        <div class="col-12 p-1 ">
                            <fieldset class="p-2 col-12 mb-2">
                                <legend class="float-none w-auto">Ditribution Information</legend>

                                <div class="row">
                                    <div class="col-3 pr-1 my-auto">
                                        <label class=""> Distribution Date <span style="color:red;">*</span></label>
                                        <input x-model="new_nursery_distribution_information.DistributionDate" type="date" required id="DistributionDate" name="DistributionDate" />
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-3 pr-1 my-auto">
                                        <label class=""> Species Name<span style="color:red;">*</span></label>

                                        <select id="NurseryRaisedSeedlingId" name="NurseryRaisedSeedlingId" x-model="new_nursery_distribution_information.NurseryRaisedSeedlingId">
                                            <!option value="">Select Species </!option>
                                                @foreach (var item in nurseryData?.NurseryRaisedSeedlingInformation!)
                                                {
                                                <!option value="@item.Id">@item.SpeciesName</!option>
                                                }
                                        </select>


                                    </div>
                                    <div class="col-3 pr-1 my-auto">
                                        <label class=""> Number of Seedling to be Distributed <span style="color:red;">*</span></label>
                                        <input x-model="new_nursery_distribution_information.NumberofSeedlingTobeDistributed" type="number" id="NumberofSeedlingTobeDistributed" name="NumberofSeedlingTobeDistributed" />
                                        <small class="pl-3" x-show="invaliddistributionNumber" x-text="invaliddistributionNumber" style="color: red;"></small>

                                    </div>
                                    <div class="col-3 pr-1 my-auto">
                                        <label class=""> Distributed to (Benificiary Name)<span style="color:red;">*</span></label>
                                        <input x-model="new_nursery_distribution_information.DistributedTo" type="text" id="DistributedTo" name="DistributedTo" required />
                                    </div>
                                    <div class="col-3 pr-1 my-auto">
                                        <label class=""> NID<span style="color:red;">*</span></label>
                                        <input x-model="new_nursery_distribution_information.BeneficiaryNid" type="text" id="BeneficiaryNid" name="BeneficiaryNid" />
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-3 pr-1 my-auto mt-1">
                                        <label class=""> Mobile No<span style="color:red;">*</span></label>
                                        <input x-model="new_nursery_distribution_information.MobileNo" type="number" id="MobileNo" name="mobileNo" oninput="validatePhoneNumber()" />
                                        <small id="phoneNumberErrorLabel" hidden style="color:red">Phone Number should be 11 digit</small>
                                    </div>

                                    <div class="col-3 pr-1 my-auto">
                                        <label class=""> Address<span style="color:red;">*</span></label>
                                        <input x-model="new_nursery_distribution_information.Address" required id="Address" name="address" />
                                    </div>
                                    <div class="col-3 pr-1  mt-2">

                                        <button @@click="add_nursery_distribution_information"
                                                class="btn btn-sm btn-addMore mt-3"
                                                type="button"
                                                x-text="new_nursery_distribution_information.is_updating ? 'Update' : 'Add More'">
                                        </button>
                                    </div>
                                    <p class="pl-3" x-show="error_message" x-text="error_message"
                                       style="color: red;"></p>
                                </div>
                                <div class="row mt-3">
                                    <div class="col-md-12 pl-3">
                                        <p x-show="nursery_distribution_informations.length == 0">
                                            No details
                                            added yet
                                        </p>
                                        <table class="nursery_distribution_information_container table table-sm border border-2"
                                               x-show="nursery_distribution_informations.length > 0">
                                            <tr>
                                                <th>SL</th>
                                                <th>Species Name</th>
                                                <th>Number of Seedling Raised</th>
                                                <th>Distributed to</th>
                                                <th>Action</th>
                                            </tr>
                                            <tbody>
                                                <template x-for="(data, index) in nursery_distribution_informations"
                                                          :key="index">
                                                    <tr class="border border-2">
                                                        <td x-text="++index"></td>
                                                        <td x-text="data.NurseryRaisedSeedlingId"></td>
                                                        <td x-text="data.NumberofSeedlingTobeDistributed"></td>
                                                        <td x-text="data.DistributedTo"></td>
                                                        <td>
                                                            <button @@click="remove_nursery_distribution_information(data)"
                                                                    type="button"
                                                                    class="btn btn-sm btn-remove">
                                                                Remove
                                                            </button>
                                                            <button @@click="edit_nursery_distribution_information(data, index)"
                                                                    type="button"
                                                                    class="btn btn-sm btn-primary">
                                                                Edit
                                                            </button>
                                                        </td>
                                                    </tr>
                                                </template>
                                            </tbody>
                                        </table>
                                    </div>
                                </div>

                            </fieldset>
                        </div>
                    </div>


                </div>
                <div class="container-fluid m-0 p-0">
                    <div class="custom row m-3">
                        <div class="col-12 d-flex justify-content-end">
                            <button type="button" @* id="submit-btn" *@ x-on:click="submit()"
                                    class="btn btn-sm btn-green save">
                                Save
                            </button>
                        </div>
                    </div>
                </div>
                </!form>

            </div>
        </div>
    </div>
</div>


<script>
    function validatePhoneNumber() {
        const phoneNumberInput = $("#MobileNo").val();
        const phoneNumber = phoneNumberInput.toString();
        const phoneRegex = /^\d{11}$/;

        if (/[^0-9]/.test(phoneNumber)) {
            $("#phoneNumberErrorLabel").text("Phone number should be numeric");
            $("#phoneNumberErrorLabel").removeAttr('hidden');
        }

        if (phoneRegex.test(phoneNumber)) {
            $("#phoneNumberErrorLabel").attr('hidden', 'hidden');

        }
        else {
            $("#phoneNumberErrorLabel").removeAttr('hidden');
        }
    }

    const NurseryDistributionFormValidation = {
        DistributionDate: {
            required: true
        },
        NurseryRaisedSeedlingId: {
            required: true
        },
        NumberofSeedlingTobeDistributed: {
            required: true,
        },
        DistributedTo: {
            required: true,
        },
        BeneficiaryNid: {
            required: true,
        },
        address: {
            required: true,
        },
        mobileNo: {
            required: true,
        }
    };


    document.addEventListener('alpine:init', () => {
        Alpine.data('new_nursary_distribution_information', () => ({

            init() {

                this.new_nursery_distribution_information = { ...this.init_nursery_distribution_information };

            },

            invaliddistributionNumber: "",
            error_message: "",

            nursery_distribution_informations: [],
            init_nursery_distribution_information: {

                is_updating: false,
                updateIndex: null,
                NurseryInformationId: @nurseryData.Id,
                Address: "",
                MobileNo: "",
                SpeciesName: "",
                DistributedTo: "",
                BeneficiaryNid: "",
                DistributionDate: "",
                NurseryRaisedSeedlingId: "",
                NumberofSeedlingTobeDistributed: "",
                AvailableseedlingNumber: ""
            },

            new_nursery_distribution_information: { ...this.init_nursery_distribution_information },

            add_nursery_distribution_information() {
                let hasError = 0;
                for (const key of Object.keys(NurseryDistributionFormValidation)) {
                    const inputElement = $(`#nurseryDistributionForm input[name=${key}], #nurseryDistributionForm select[name=${key}]`);

                    if (!inputElement) ++hasError;
                    if (!inputElement.valid()) ++hasError;
                }
                if (hasError > 0) return;

                if (!this.new_nursery_distribution_information.is_updating) {
                    this.new_nursery_distribution_information.NurseryRaisedSeedlingId = $("#NurseryRaisedSeedlingId").val();
                    isValid = this.validateSeedlingNumber(this.new_nursery_distribution_information.NurseryRaisedSeedlingId, this.new_nursery_distribution_information.NumberofSeedlingTobeDistributed, false);
                    if (isValid) {
                        this.nursery_distribution_informations.push(this.new_nursery_distribution_information);

                    }
                    else {

                        this.invaliddistributionNumber = "Available Seedling is " + parseInt($(`#nurserySeedling_${this.new_nursery_distribution_information.NurseryRaisedSeedlingId}`).val());
                        this.remove_invaliddistributionNumber_message();
                        return;
                    }
                }
                else {
                    let currentObj = this.nursery_distribution_informations[this.new_nursery_distribution_information.updateIndex - 1];
                    let isValid = false;

                    this.new_nursery_distribution_information.NurseryRaisedSeedlingId = $("#NurseryRaisedSeedlingId").val();

                    if (parseInt(currentObj.NumberofSeedlingTobeDistributed) > parseInt(this.new_nursery_distribution_information.NumberofSeedlingTobeDistributed)) {
                        let netUpdate = parseInt(currentObj.NumberofSeedlingTobeDistributed) - parseInt(this.new_nursery_distribution_information.NumberofSeedlingTobeDistributed);

                        isValid = this.validateSeedlingNumber(this.new_nursery_distribution_information.NurseryRaisedSeedlingId, netUpdate, true);
                        if (isValid) {

                            this.nursery_distribution_informations[this.new_nursery_distribution_information.updateIndex - 1] = { ...this.new_nursery_distribution_information };

                        }
                    }
                    else if (parseInt(currentObj.NumberofSeedlingTobeDistributed) < parseInt(this.new_nursery_distribution_information.NumberofSeedlingTobeDistributed)) {
                        let netUpdate = parseInt(this.new_nursery_distribution_information.NumberofSeedlingTobeDistributed) - parseInt(currentObj.NumberofSeedlingTobeDistributed);

                        isValid = this.validateSeedlingNumber(this.new_nursery_distribution_information.NurseryRaisedSeedlingId, netUpdate, false);

                        if (isValid) {

                            this.nursery_distribution_informations[this.new_nursery_distribution_information.updateIndex - 1] = { ...this.new_nursery_distribution_information };

                        }
                    }
                    else {
                        this.nursery_distribution_informations[this.new_nursery_distribution_information.updateIndex - 1] = { ...this.new_nursery_distribution_information };
                    }

                }
                this.new_nursery_distribution_information = { ...this.init_nursery_distribution_information };

            },
            remove_nursery_distribution_information(data) {
                let currentObj = data;
                let netUpdate = parseInt(currentObj.NumberofSeedlingTobeDistributed);

                isValid = this.validateSeedlingNumber(currentObj.NurseryRaisedSeedlingId, netUpdate, true);
                if (isValid) {

                    this.nursery_distribution_informations.splice(this.nursery_distribution_informations.indexOf(data), 1);
                }
                else {
                    return swal(
                        'Failed',
                        'Failed To Remove',
                        'error')
                }
            },
            edit_nursery_distribution_information(data, index) {
                this.new_nursery_distribution_information = { ...data, is_updating: true, updateIndex: index };
            },



            validateSeedlingNumber(seedlingId, requestedseedlingNumber, IsAdd) {

                enteredSeedlingNumber = parseInt(requestedseedlingNumber);
                if (!isNaN(enteredSeedlingNumber)) {

                    let seedlingToBeDistributed = enteredSeedlingNumber;
                    let currentNumberofSeedling = parseInt($(`#seedLingRaisdValue_${seedlingId}`).val());

                    if (currentNumberofSeedling >= seedlingToBeDistributed) {

                        let obj = {
                            SeedlingId: seedlingId,
                            NurseryId: @nurseryData.Id,
                            SeedlingNumberToBeDistributed: enteredSeedlingNumber,
                            IsAdd: IsAdd
                        };


                        $.ajax({
                            type: "POST",
                            url: "/NurseryRaisedSeedlingInformation/UpdateSeedlingInfo",
                            data: obj,
                            dataType: 'json',
                            success: function (data) {
                                $(".loader").fadeOut("fast");

                                if (parseInt(data.ExecutionSate) !== 0) {

                                    let responseResult = data.Data;
                                    $(`#seedLingRaisdValue_${responseResult.Id}`).val(responseResult.SeedlingRaised);

                                } else {
                                    swal(
                                        'Failed',
                                        data.Message,
                                        'error'
                                    );
                                }
                            },
                            error: function (xhr, ajaxOptions, thrownError) {
                                $(".loader").fadeOut("fast");

                                swal(
                                    'Failed',
                                    'Unexpected Error Occured',
                                    'error'
                                );
                            }
                        });
                    }

                    return (parseInt($(`#nurserySeedling_${seedlingId}`).val()) >= enteredSeedlingNumber);
                }
            },


            remove_invaliddistributionNumber_message() {
                setTimeout(() => {
                    this.invaliddistributionNumber = "";
                }, 3000);
            },
            remove_error_message() {
                setTimeout(() => {
                    this.error_message = "";
                }, 3000);
            },
            submit() {
                if(this.nursery_distribution_informations.length<=0)
                {
                    return swal(
                        'Failed',
                        'Please Add Distribution Information',
                        'error'
                    );
                }
                let obj =
                {
                    NurseryDistributionList: this.nursery_distribution_informations
                };

                var formData = new FormData();

                objectToFormData(obj, formData);
                debugger;
                $.ajax({
                    type: "POST",
                    url: "/NurseryDistribution/Create/@nurseryData.Id",
                    data: formData,
                    cache: false,
                    contentType: false,
                    processData: false,
                    dataType: 'json',
                    success: function (data) {
                        $(".loader").fadeOut("fast");

                        if (data.RedirectUrl) {
                            window.location.href = data.RedirectUrl;
                            return;
                        }

                        if (data.Success) {
                            swal(
                                'Success',
                                data.Message,
                                'success'
                            );
                        } else {
                            swal(
                                'Failed',
                                data.Message,
                                'error'
                            );
                        }
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        $(".loader").fadeOut("fast");

                        swal(
                            'Failed',
                            'Unexpected Error Occured',
                            'error'
                        );
                    }
                });

            }

        }));
    });
    function objectToFormData(dataObject, formData, parentKey) {
        for (var key in dataObject) {
            if (dataObject.hasOwnProperty(key)) {
                var propName = parentKey ? `${parentKey}[${key}]` : key;

                if (typeof dataObject[key] === 'object' && !Array.isArray(dataObject[key])) {
                    // Nested object, recursively convert it
                    objectToFormData(dataObject[key], formData, propName);
                } else if (Array.isArray(dataObject[key])) {
                    // Array of objects, loop through and convert each item
                    dataObject[key].forEach(function (item, index) {
                        var arrayKey = `${propName}[${index}]`;
                        objectToFormData(item, formData, arrayKey);
                    });
                } else {
                    // Regular key-value pair
                    formData.append(propName, dataObject[key]);
                }
            }
        }
    }
</script>
<script>

    $("#nurseryDistributionForm").validate({
        rules: {
            ...NurseryDistributionFormValidation
        }
    });
</script>
