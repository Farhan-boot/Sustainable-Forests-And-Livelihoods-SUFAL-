@using PTSL.GENERIC.Web.Core.Controllers.AIG;
@model List<PTSL.GENERIC.Web.Core.Model.EntityViewModels.AccountManagement.AccountTransferVM>

@{
    ViewBag.Title = "Cash In List";
}

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <div class="col-md-10">
                    <h4>Cash In List</h4>
                </div>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-striped table-bordered table-hover" id="tableExport_filter" style="width:100%;">
                        <thead>
                            <tr>
                                <th>SL</th>
                                <th>From Account</th>
                                <th>To Account</th>
                                <th>Total Transfer<br />Amount</th>
                                <th>Transfer Date</th>
                                <th>Transfer Status</th>
                                <th>Approval Status</th>
                                <th class="not-export-col">Action</th>
                            </tr>
                        </thead> @{
                            int i = 1;
                        }
                        <tbody>
                            @if (Model != null)
                            {
                                foreach (var data in Model)
                                {
                                    <tr>
                                        <td>@i</td>
                                        <td>@data.FromAccount?.AccountNumber</td>
                                        <td>@data.ToAccount?.AccountNumber</td>
                                        <td>@data.TransferAmount.ToBDTCurrency()</td>
                                        <td>@data.TransferDate.ToUIDateString()</td>
                                        <td>@data.AccountTransferStatus.GetEnumDisplayName()</td>
                                        <td>@data.AccountTransferApprovalProcess.GetEnumDisplayName()</td>

                                        <td class="not-export-col">
                                            <button onclick="acceptOrCancelTransfer(@data.Id)" class="btn btn-sm btn-info">Accept</button>
                                            <button onclick="acceptOrCancelTransfer(@data.Id, true)" class="btn btn-sm btn-info">Cancel</button>
                                            <a href="/AccountTransfer/Details?id=@data.Id" class="btn btn-sm btn-info">Details</a>
                                        </td>
                                    </tr>
                                    i++;
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

@await Html.PartialAsync("~/Views/Shared/_DataTables.cshtml")

<script>
    $(document).ready(function () {
        $('#tableExport_filter').DataTable({
            pageLength: 5,
            dom: 'lBfrtip',
            buttons: [
                {
                    extend: 'csv',
                    title: 'Account Transfer List',
                    exportOptions: {
                        columns: [0, 1, 2, 3, 4]
                    }
                },
                {
                    extend: 'excel',
                    title: 'Account Transfer List',
                    exportOptions: {
                        columns: [0, 1, 2, 3, 4]
                    }
                },
                {
                    extend: 'pdf',
                    title: 'Account Transfer List',
                    exportOptions: {
                        columns: [0, 1, 2, 3, 4]
                    }
                },
                {
                    extend: 'print',
                    title: 'Account Transfer List',
                    exportOptions: {
                        columns: [0, 1, 2, 3, 4]
                    }
                }
            ]
        });
    });

    function acceptOrCancelTransfer(id, cancel = false) {
        if (cancel) {
            swal({
                title: "Are you sure?",
                text: "Cancel this transfer amount, you will not be able to redo this!",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Yes, accept",
                closeOnConfirm: false
            }, function () {
                $.ajax({
                    type: "GET",
                    url: `/AccountTransfer/CancelTransfer?accountTransferId=${id}`,
                    success: function (result) {
                        if (result.Success) {
                            window.location.reload();
                        } else {
                            swal(
                                'Error occurred',
                                result.Message,
                                'error'
                            );
                        }
                    },
                    error: function (xmlhttprequest, textstatus, errorthrown) {
                        swal(
                            'Error occurred',
                            'Unexpected error occurred',
                            'error'
                        );
                    }
                });
            });
        }
        else {
            swal({
                title: "Are you sure?",
                text: "Accept this transfer amount, you will not be able to redo this!",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Yes, accept",
                closeOnConfirm: false
            }, function () {
                $.ajax({
                    type: "GET",
                    url: `/AccountTransfer/AcceptTransfer?accountTransferId=${id}`,
                    success: function (result) {
                        if (result.Success) {
                            window.location.reload();
                        } else {
                            swal(
                                'Error occurred',
                                result.Message,
                                'error'
                            );
                        }
                    },
                    error: function (xmlhttprequest, textstatus, errorthrown) {
                        swal(
                            'Error occurred',
                            'Unexpected error occurred',
                            'error'
                        );
                    }
                });
            });
        }
    }
</script>

