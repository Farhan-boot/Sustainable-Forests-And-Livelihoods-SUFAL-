@model IEnumerable<PTSL.GENERIC.Web.Core.Model.EntityViewModels.BeneficiarySavingsAccount.SavingsAccountVM>

@{
    ViewBag.Title = "Savings Account List";
}

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <div class="col-md-10 p-0">
                    <h4>Savings Account List</h4>
                </div>
                <div class="col-md-2 text-right p-0">
                    <a href="/SavingsAccount/Create" class="badge badge-success badge-shadow">Create New</a>
                </div>
            </div>
            <div class="card-body">
                @* asp-action="IndexFilter" asp-controller="SavingsAccount" *@
                <div class="mb-4 green-card p-2" style="border-radius: 5px;">
                    <div class="row custom">
                        <div class="col-6 p-1">
                            @await Html.PartialAsync(
                                     "~/Views/Shared/_ForestAdministration.cshtml",
                                     (
                                     ViewBag.ForestCircleId as SelectList,
                                     ViewBag.ForestDivisionId as SelectList,
                                     ViewBag.ForestRangeId as SelectList,
                                     ViewBag.ForestBeatId as SelectList,
                                     ViewBag.ForestFcvVcfId as SelectList
                                     )
                                     )
                        </div>

                        <div class="col-6 p-1">
                            @* <fieldset class="p-2">
                            <legend class="float-none w-auto">Civil Administrative Unit</legend>
                            <div class="row">
                            <div class="col-6 pr-1">
                            <label class="m-0">Division</label>
                            @Html.DropDownList("DivisionId", null, "Select Division", htmlAttributes: new { @class = "" })
                            </div>
                            <div class="col-6 pl-1">
                            <label class="m-0">District</label>
                            @Html.DropDownList("DistrictId", null, "Select District", htmlAttributes: new { @class = "" })
                            </div>
                            </div>
                            <div class="row mt-2">
                            <div class="col-6 pr-1">
                            <label class="m-0">Upazilla</label>
                            @Html.DropDownList("UpazillaId", null, "Select Upazilla", htmlAttributes: new { @class = "" })
                            </div>
                            </div>
                            </fieldset>*@
                            @await Html.PartialAsync(
                                     "~/Views/Shared/_CivilAdministration.cshtml",
                                     (
                                     ViewBag.DivisionId as SelectList,
                                     ViewBag.DistrictId as SelectList,
                                     ViewBag.UpazillaId as SelectList,
                                     ViewBag.UnionId as SelectList
                                     )
                                     )
                        </div>
                    </div>

                    <!--Extra Filter-->
                    <div class="row custom">
                        <div class="col-12 p-1">
                            <fieldset class="p-2">
                                <legend class="float-none w-auto">Basic Information</legend>
                                <div class="row">
                                    <div class="col pr-1">
                                        <label class="m-0">NGO</label>
                                        @Html.DropDownList("NgoId", null, "Select NGO", htmlAttributes: new { })
                                    </div>
                                    <div class="col px-1">
                                        <label class="m-0">Mobile Number</label>
                                        <input type="text" id="PhoneNumber" value="@ViewBag.PhoneNumber" name="PhoneNumber" placeholder="Enter Beneficiary Mobile Number" />
                                    </div>
                                    <div class="col px-1">
                                        <label class="m-0">NID</label>
                                        <input type="text" id="NID" value="@ViewBag.NID" name="NID" placeholder="Enter Beneficiary NID (if any)" />
                                    </div>
                                    <div class="col pl-1">
                                        <label class="m-0">Gender</label>
                                        @Html.DropDownList("Gender", null, "Select Gender", htmlAttributes: new { })
                                    </div>
                                </div>
                            </fieldset>
                        </div>
                    </div>
                    <div class="d-flex justify-content-end mt-2">
                        <button id="submit" type="submit" class="btn btn-sm btn-green save">Search</button>
                    </div>
                </div>

                <div class="table-responsive">

                    @*  <table class="table table-striped table-bordered table-hover" id="tableExport_filter" style="width:100%;">
                    <thead>
                    <tr>
                    <th>SL</th>
                    <th>Beneficiary Name</th>
                    <th>NID</th>
                    <th>NGO Name</th>
                    <th>Total Savings Amount(Tk)</th>
                    <th>Total Withdrawal Amount(Tk)</th>
                    <th>Total Account Balance(TK)</th>

                    <th class="not-export-col" style="width: 235px;">Action</th>
                    </tr>
                    </thead> @{
                    int i = 1;
                    }
                    <tbody>
                    @if (Model != null)
                    {

                    foreach (var data in Model)
                    {
                    var saving = @data.SavingsAmountInformations?.Select(x => x.SavingsAmount).Sum();
                    var withdraw = @data.WithdrawAmountInformations?.Where(x => x.DfoStatusId != 3).Select(x => x.WithdrawAmount).Sum();
                    var totalAccountBalance = @saving - @withdraw;
                    <tr>
                    <td>@i</td>
                    <td>@data.Survey?.BeneficiaryName</td>
                    <td>@data.Survey?.BeneficiaryNid</td>
                    <td>@data.Ngos?.Name</td>
                    <td>@data.SavingsAmountInformations?.Sum(x=>x.SavingsAmount)</td>
                    <td>@data.WithdrawAmountInformations?.Where(x=>x.DfoStatusId != 3).Sum(x=>x.WithdrawAmount)</td>
                    <td>@totalAccountBalance</td>
                    <td class="not-export-col">
                    <a href="/SavingsAccount/Savings?id=@data.Id" class="btn btn-success btn-sm">Savings</a>
                    <a href="/SavingsAccount/Withdraw?id=@data.Id" class="btn btn-primary btn-sm">Withdraw</a>
                    <a href="/SavingsAccount/Details?id=@data.Id" class="btn btn-info btn-sm">Details</a>
                    </td>
                    </tr>
                    i++;
                    }
                    }
                    </tbody>
                    </table> *@

                    <table id="foodTable" class="display">
                        <thead class="table-content">
                            <tr class="table-row">
                                <th scope="col">SL</th>
                                <th scope="col">Beneficiary Name</th>
                                <th scope="col">NID</th>
                                <th scope="col">NGO Name</th>
                                <th scope="col">Total Savings Amount(Tk)</th>
                                <th scope="col">Total Withdrawal Amount(Tk)</th>
                                <th>Total Account Balance(TK)</th>
                                <th scope="col">Action</th>
                            </tr>
                        </thead>
                        <tbody class="table-content">
                        </tbody>
                    </table>



                </div>
            </div>
        </div>
    </div>
</div>

<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.12.1/css/jquery.dataTables.css">
<script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/1.12.1/js/jquery.dataTables.js"></script>
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/buttons/1.5.6/css/buttons.dataTables.min.css" />
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jszip/2.5.0/jszip.min.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/pdfmake.min.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/vfs_fonts.js"></script>
<script type="text/javascript" src="https://cdn.datatables.net/1.10.18/js/jquery.dataTables.min.js"></script>
<script type="text/javascript" src="https://cdn.datatables.net/buttons/1.5.6/js/dataTables.buttons.min.js"></script>
<script type="text/javascript" src="https://cdn.datatables.net/buttons/1.5.6/js/buttons.html5.min.js"></script>
<script type="text/javascript" src="https://cdn.datatables.net/buttons/1.5.6/js/buttons.print.min.js"></script>

<script>
    $(document).ready(function () {
        /*
        $('#tableExport_filter').DataTable({
            pageLength: 10,
            lengthMenu: [[10, 25, 50], [10, 25, 50]],
            dom: 'lBfrtip',
            buttons: [
                {
                    extend: 'csv',
                    title: 'Savings Account List',
                    exportOptions: {
                        columns: [0, 1, 2, 3, 4, 5]
                    }
                },
                {
                    extend: 'excel',
                    title: 'Savings Account List',
                    exportOptions: {
                        columns: [0, 1, 2, 3, 4, 5]
                    }
                },
                {
                    extend: 'pdf',
                    title: 'Savings Account List',
                    exportOptions: {
                        columns: [0, 1, 2, 3, 4, 5]
                    }
                },
                {
                    extend: 'print',
                    title: 'Savings Account List',
                    exportOptions: {
                        columns: [0, 1, 2, 3, 4, 5]
                    }
                }
            ]
        });
        */
    });
    function showDeleteConfirmMessage(id) {
        swal({
            title: "Are you sure?",
            text: "You will not be able to recover this item!",
            type: "warning",
            showCancelButton: true,
            confirmButtonColor: "#DD6B55",
            confirmButtonText: "Yes, delete it!",
            closeOnConfirm: false
        }, function () {
            var data = {
                'id': id
            };
            $.ajax({
                type: "GET",
                contentType: "application/json; charset=utf-8",
                url: "/SavingsAccount/Delete",
                data: data,
                datatype: "json",
                success: function (result) {
                    console.log(result);
                    var message = result.Message;
                    var executionState = result.executionState;
                    if (executionState != null) {
                        if (executionState != 10) {
                            swal("Deleted!", "Item has been deleted.", "success");
                        } else {
                            swal("Deleted Failed!", message, "success");
                        }
                        $(".confirm").on('click', function () {
                            window.location.reload();
                        });
                    }
                },
                error: function (xmlhttprequest, textstatus, errorthrown) {
                    swal("Not Deleted!", "Item has not been deleted.", "error");
                }
            });
        });
    }

    $(document).ready(function () {
        $('.buttons-copy').hide();
    });
</script>




<script>
    // var $j = jQuery.noConflict();
    $(document).ready(function () {
        $('#foodTable').DataTable({
            pageLength: 5,
            dom: 'lBfrtip',
            buttons: [
                {
                    extend: 'csv',
                    title: 'Labour Database Information List',
                    exportOptions: {
                        columns: [0, 1, 2, 3, 4, 5, 6, 7]
                    }
                },
                {
                    extend: 'excel',
                    title: 'Labour Database Information List',
                    exportOptions: {
                        columns: [0, 1, 2, 3, 4, 5, 6, 7]
                    }
                },
                {
                    extend: 'pdf',
                    title: 'Labour Database Information List',
                    exportOptions: {
                        columns: [0, 1, 2, 3, 4, 5, 6, 7]
                    }
                },
                {
                    extend: 'print',
                    title: 'Labour Database Information List',
                    exportOptions: {
                        columns: [0, 1, 2, 3, 4, 5, 6, 7]
                    }
                }
            ],

            "sAjaxSource": "/SavingsAccount/GetSavingsAccountListByPagination",
            "bDestroy": true,
            "bServerSide": true,
            "bProcessing": true,
            "bSearchable": true,
            "order": [[1, 'asc']],
            "language": {
                "emptyTable": "No record found.",
                "processing":
                    '<i class="fa fa-spinner fa-spin fa-3x fa-fw" style="color:#2a2b2b;"></i><span class="sr-only">Loading...</span> '
            },
            // "fnDrawCallback": function (oSettings) {
            //     alert(oSettings.aoData[1]._aData.Id);
            // },
            "columns": [
                {
                    title: 'Id',
                    data: null,
                    render: (data, type, row, meta) => meta.row + 1
                },
                {
                    "autoWidth": true,
                    "searchable": true,
                    render: (data, type, row, meta) => row.Survey?.BeneficiaryName || "",
                },
                {
                    "autoWidth": true,
                    "searchable": true,
                    render: (data, type, row, meta) => row.Survey?.BeneficiaryNid || "",
                },
                {
                    "autoWidth": true,
                    "searchable": true,
                    render: (data, type, row, meta) => row.Ngos?.Name || "",
                },
                {
                    "autoWidth": true,
                    "searchable": true,
                    render: (data, type, row, meta) => row.TotalSavingsAmount ? row.TotalSavingsAmount : 0,
                },
                {
                    "autoWidth": true,
                    "searchable": true,
                    render: (data, type, row, meta) => row.TotalWithdrawalAmount ? row.TotalWithdrawalAmount : 0,
                },
                {
                    "autoWidth": true,
                    "searchable": true,
                    render: (data, type, row, meta) => row.TotalAccountBalance ? row.TotalAccountBalance : 0,
                },
                {
                    render: (data, type, row, meta) => {

                        return "<a  href='/SavingsAccount/Savings?id=" + row.Id + " ' $ type='button' data-bs-toggle='modal' data-bs-target='#exampleModal' class='btn btn-success btn-sm m-1'> Savings </a> <a href='/SavingsAccount/Withdraw?id=" + row.Id + " ' class='btn btn-primary btn-sm m-1'>Withdraw</a>  <a href='/SavingsAccount/Details?id=" + row.Id + " ' class='btn btn-info btn-sm m-1'>Details</a>"
                    },
                },
            ]


        });


        // //Filter
        $("#submit").click(function () {
            var forestCircleId = Number($("#ForestCircleId").val());
            var forestDivisionId = Number($("#ForestDivisionId").val());
            var forestRangeId = Number($("#ForestRangeId").val());
            var forestBeatId = Number($("#ForestBeatId").val());
            //var fcvVcfType = Number($("#FcvVcfType").val());
            var forestFcvVcfId = Number($("#ForestFcvVcfId").val());
            var divisionId = Number($("#DivisionId").val());
            var districtId = Number($("#DistrictId").val());
            var upazillaId = Number($("#UpazillaId").val());
            var unionId = Number($("#UnionId").val());
            //alert(forestCircleId);
            var NgoId = Number($("#NgoId").val());
            var PhoneNumber = $("#PhoneNumber").val();
            var NID = $("#NID").val();
            var Gender = Number($("#Gender").val());


            var labourDatabaseFilterVM =
            {
                ForestCircleId: forestCircleId,
                ForestDivisionId: forestDivisionId,
                ForestRangeId: forestRangeId,
                ForestBeatId: forestBeatId,
                //FcvVcfType: fcvVcfType,
                ForestFcvVcfId: forestFcvVcfId,
                DivisionId: divisionId,
                DistrictId: districtId,
                UpazillaId: upazillaId,
                UnionId: unionId,
                NgoId: NgoId,
                PhoneNumber: PhoneNumber,
                NID: NID,
                Gender: Gender
            };

            $.ajax({
                type: "POST",
                url: "/SavingsAccount/IndexFilterSavingsAccountListByPagination",
                data: labourDatabaseFilterVM,
                cache: false,
                dataType: 'json',
                success: function (response) {
                    $('#foodTable').DataTable({
                        "bDestroy": true,

                        //"bServerSide": true,
                        //"bProcessing": true,
                        //"bSearchable": true,
                        //"order": [[1, 'asc']],
                        // "language": {
                        //     "emptyTable": "No record found.",
                        //     "processing":
                        //         '<i class="fa fa-spinner fa-spin fa-3x fa-fw" style="color:#2a2b2b;"></i><span class="sr-only">Loading...</span> '
                        // },
                        data: response.aaData,
                        "columns": [
                            {
                                title: 'Id',
                                data: null,
                                render: (data, type, row, meta) => meta.row + 1
                            },
                            {
                                "data": "Survey.BeneficiaryName",
                                "autoWidth": true,
                                "searchable": true
                            },
                            {
                                "data": "Survey.BeneficiaryNid",
                                "autoWidth": true,
                                "searchable": true
                            },
                            {
                                "data": "Ngos.Name",
                                "autoWidth": true,
                                "searchable": true
                            },
                            {
                                "data": "TotalSavingsAmount",
                                "autoWidth": true,
                                "searchable": true
                            },
                            {
                                "data": "TotalWithdrawalAmount",
                                "autoWidth": true,
                                "searchable": true
                            },
                            {
                                "data": "TotalAccountBalance",
                                "autoWidth": true,
                                "searchable": true
                            },
                            {
                                render: (data, type, row, meta) => {

                                    return "<a  href='/SavingsAccount/Savings?id=" + row.Id + " ' $ type='button' data-bs-toggle='modal' data-bs-target='#exampleModal' class='btn btn-success btn-sm m-1'> Savings </a> <a href='/SavingsAccount/Withdraw?id=" + row.Id + " ' class='btn btn-primary btn-sm m-1'>Withdraw</a>  <a href='/SavingsAccount/Details?id=" + row.Id + " ' class='btn btn-info btn-sm m-1'>Details</a>"
                                },
                            },
                        ]

                    });
                },
                error: function () {
                    $(".loader").fadeOut("slow");
                    swal(
                        'Unexpected',
                        'Unknown error occurred',
                        'error'
                    );
                }
            });

        });


    });
</script>