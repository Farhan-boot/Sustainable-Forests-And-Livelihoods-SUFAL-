@model IEnumerable<PTSL.GENERIC.Web.Core.Model.EntityViewModels.PatrollingSchedulingInformetion.PatrollingSchedulingVM>
@{
    ViewBag.Title = "Patrolling Scheduling List";
}

    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <div class="col-md-10">
                    <h4>Patrolling Scheduling List</h4>
                    </div>
                    <div class="col-md-2 text-right">
                    <a href="/PatrollingScheduling/Create" class="badge badge-success badge-shadow">Create New</a>
                    </div>
                </div>
                <div class="card-body">
                @* asp-action="IndexFilter" asp-controller="PatrollingScheduling" *@
                <div  class="mb-4 green-card p-2">
                        <div class="row custom" style="border-radius: 5px;">
                            <div class="col-6 p-1">
                                @await Html.PartialAsync(
                                "~/Views/Shared/_ForestAdministration.cshtml",
                                (
                                ViewBag.ForestCircleId as SelectList,
                                ViewBag.ForestDivisionId as SelectList,
                                ViewBag.ForestRangeId as SelectList,
                                ViewBag.ForestBeatId as SelectList,
                                ViewBag.ForestFcvVcfId as SelectList
                                )
                                )
                            </div>

                            <div class="col-6 p-1">
                                @await Html.PartialAsync(
                                "~/Views/Shared/_CivilAdministration.cshtml",
                                (
                                ViewBag.DivisionId as SelectList,
                                ViewBag.DistrictId as SelectList,
                                ViewBag.UpazillaId as SelectList,
                                ViewBag.UnionId as SelectList
                                )
                                )
                            </div>
                        </div>

                    <!--Extra Filter Start-->
                    <div class="row custom">
                        <div class="col-12 p-1">
                            <fieldset class="p-2">
                                <legend class="float-none w-auto">Basic Information</legend>
                                <div class="row">
                                    <div class="col-md-3 pr-1">
                                        <label class="m-0">NGO</label>
                                        @Html.DropDownList("NgoId", null, "Select NGO", htmlAttributes: new { })
                                    </div>
                                    @*<div class="col px-1">
                                        <label class="m-0">Mobile Number</label>
                                        <input type="text" id="PhoneNumber" value="@ViewBag.PhoneNumber" name="PhoneNumber" placeholder="Enter Beneficiary Mobile Number" />
                                    </div>
                                    <div class="col px-1">
                                        <label class="m-0">NID</label>
                                        <input type="text" id="NID" value="@ViewBag.NID" name="NID" placeholder="Enter Beneficiary NID (if any)" />
                                    </div>
                                    <div class="col pl-1">
                                        <label class="m-0">Gender</label>
                                        @Html.DropDownList("Gender", null, "Select Gender", htmlAttributes: new { })
                                    </div>*@
                                </div>
                            </fieldset>
                        </div>
                    </div>
                    <!--Extra Filter End-->


                        <div class="d-flex justify-content-end mt-2">
                        <button id="submit" type="submit" class="btn btn-sm btn-green save">Search</button>
                        </div>
                    </div>

                    <div class="table-responsive">

                    <table id="foodTableNew" class="display">
                        <thead class="table-content">
                            <tr class="table-row">
                                <th scope="col">SL</th>
                                <th scope="col">Patrolling Area</th>
                                <th scope="col">Date</th>
                                <th scope="col">Start Time</th>
                                <th scope="col">End Time</th>
                                <th scope="col">Allocated Amount Per Month</th>
                                <th scope="col">Action</th>
                            </tr>
                        </thead>
                        <tbody class="table-content">
                        </tbody>
                    </table>





                       @*  <table class="table table-striped table-bordered table-hover" id="tableExport_filter"
                            style="width:100%;">
                            <thead>
                                <tr>
                                    <th>SL</th>
                                    <th>Patrolling Area</th>
                                    <th>Date</th>
                                    <th>Start Time</th>
                                    <th>End Time</th>
                                <th>Allocated Amount Per Month</th>
                                    
                                    <th class="not-export-col">Action</th>
                                </tr>
                            </thead> @{ int i = 1; }
                            <tbody>
                                @if (Model != null)
                                {
                                foreach (var data in Model)
                                {
                                <tr>
                                    <td>@i</td>
                                    <td>@data.PatrollingArea</td>
                                    <td>@data.Date.Value.ToShortDateString()</td>
                                    <td>@data.StartTime.Value.ToShortTimeString()</td>
                                        <td>@data.EndTime.Value.ToShortTimeString()</td>
                                    <td>@data.AllocatedAmountMonth</td>
  
                                    <td class="not-export-col">
                                            <a href="/PatrollingScheduling/Edit?id=@data.Id"
                                            class="btn btn-primary btn-sm">Edit</a>
                                            <a href="/PatrollingScheduling/Details?id=@data.Id"
                                            class="btn btn-info btn-sm">Details</a>
                                        <button onclick="showDeleteConfirmMessage(@data.Id)"
                                            class="btn btn-danger btn-sm">Delete</button>
                                    </td>
                                </tr>
                                i++;
                                }
                                }
                            </tbody>
                        </table> *@


                    </div>
                </div>
            </div>
        </div>
    </div>

    @await Html.PartialAsync("~/Views/Shared/_DataTables.cshtml")



    <script>
        // $(document).ready(function () {
        //     $('#tableExport_filter').DataTable({
        //         pageLength: 5,
        //         dom: 'lBfrtip',
        //         buttons: [
        //             //'copy',
        //             {
        //                 extend: 'csv',
        //             title: 'Patrolling Scheduling List',
        //                 exportOptions: {
        //                 columns: [0, 1, 2, 3, 4, 5]
        //                 }
        //             },
        //             {
        //                 extend: 'excel',
        //                 title: 'Patrolling Scheduling List',
        //                 exportOptions: {
        //                 columns: [0, 1, 2, 3, 4, 5]
        //                 }
        //             },
        //             {
        //                 extend: 'pdf',
        //             title: 'Patrolling Scheduling List',
        //                 exportOptions: {
        //                 columns: [0, 1, 2, 3, 4, 5]
        //                 }
        //             },
        //             {
        //                 extend: 'print',
        //             title: 'Patrolling Scheduling List',
        //                 exportOptions: {
        //                 columns: [0, 1, 2, 3, 4, 5]
        //                 }
        //             }
        //         ]
        //     });
        // });






        function showDeleteConfirmMessage(id) {
            swal({
                title: "Are you sure?",
                text: "You will not be able to recover this item!",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Yes, delete it!",
                closeOnConfirm: false
            }, function () {
                var data = {
                    'id': id
                };
                $.ajax({
                    type: "GET",
                    contentType: "application/json; charset=utf-8",
                url: "/PatrollingScheduling/Delete",
                    data: data,
                    datatype: "json",
                    success: function (result) {
                        console.log(result);
                        var message = result.Message;
                        var executionState = result.executionState;
                        if (executionState != null) {
                            if (executionState != 10) {
                                swal("Deleted!", "Item has been deleted.", "success");
                            } else {
                                swal("Deleted Failed!", message, "success");
                            }
                            $(".confirm").on('click', function () {
                                window.location.reload();
                            });
                        }
                    },
                    error: function (xmlhttprequest, textstatus, errorthrown) {
                        swal("Not Deleted!", "Item has not been deleted.", "error");
                    }
                });
            });
        }
    </script>




<script>
    // var $j = jQuery.noConflict();
    $(document).ready(function () {
        var data;
        $("#foodTableNew").DataTable({
            "bDestroy": true,
            pageLength: 5,
            dom: 'lBfrtip',
            buttons: [
                {
                    extend: 'csv',
                    title: 'Patrolling Scheduling Information List',
                    exportOptions: {
                        columns: [0, 1, 2, 3, 4, 5]
                    }
                },
                {
                    extend: 'excel',
                    title: 'Patrolling Scheduling Information List',
                    exportOptions: {
                        columns: [0, 1, 2, 3, 4, 5]
                    }
                },
                {
                    extend: 'pdf',
                    title: 'Patrolling Scheduling Information List',
                    exportOptions: {
                        columns: [0, 1, 2, 3, 4, 5]
                    }
                },
                {
                    extend: 'print',
                    title: 'Patrolling Scheduling Information List',
                    exportOptions: {
                        columns: [0, 1, 2, 3, 4, 5]
                    }
                }
            ],

            "sAjaxSource": "/PatrollingScheduling/GetPatrollingSchedulingListByPagination",
            "bDestroy": true,
            "bServerSide": true,
            "bProcessing": true,
            "bSearchable": true,
            "order": [[1, 'asc']],
            "language": {
                "emptyTable": "No record found.",
                "processing":
                    '<i class="fa fa-spinner fa-spin fa-3x fa-fw" style="color:#2a2b2b;"></i><span class="sr-only">Loading...</span> '
            },
           
            "fnDrawCallback": function (oSettings) {
                //alert(oSettings.aoData[1]._aData.Id);
                data= oSettings.jqXHR.responseJSON.aaData;
            },

            aoColumns: [
                {
                  title: 'Id',
                  data: null,
                  render: (data, type, row, meta) => meta.row
                },
                // { mData: 'Id' },
                { mData: 'PatrollingArea' },
                { mData: 'Date' },
                {
                    render: (data, type, row, meta) => {
                        return moment(row.StartTime).format("DD-MM-YYYY");
                    },
                },
                {
                    render: (data, type, row, meta) => {
                        return moment(row.EndTime).format("DD-MM-YYYY");
                    },
                },
               
                { mData: 'AllocatedAmountMonth' },
                    {
                        render: (data, type, row, meta) => {

                        return "<a  href='/PatrollingScheduling/Edit?id=" + row.Id + " ' $ type='button' data-bs-toggle='modal' data-bs-target='#exampleModal' class='btn btn-sm btn-primary'> Edit </a> <a href='/PatrollingScheduling/Details?id=" + row.Id + " ' class='btn btn-sm btn-info'>Details</a>  <button onclick='showDeleteConfirmMessage(" + row.Id + ")' class='btn btn-sm btn-danger'>Delete</button>"
                        },
                    },
            ],
              



            // "columns": [
            //     // {
            //     //     title: 'Id',
            //     //     data: null,
            //     //     render: (data, type, row, meta) => meta.row
            //     // },
            //     // {
            //     //     "data": "Id",
            //     //     "autoWidth": true,
            //     //     "searchable": true
            //     // },

            //     {
            //         "aaData": "Id",
            //         "autoWidth": true,
            //         "searchable": true
            //     },
            //     // {
            //     //     "data": "GenderName",
            //     //     "autoWidth": true,
            //     //     "searchable": true
            //     // },
            //     // {
            //     //     "data": "NIDName",
            //     //     "autoWidth": true,
            //     //     "searchable": true
            //     // },
            //     // {
            //     //     "data": "PhoneNumberName",
            //     //     "autoWidth": true,
            //     //     "searchable": true
            //     // },
            //     // {
            //     //     "data": "UserTypeName",
            //     //     "autoWidth": true,
            //     //     "searchable": true
            //     // },
            //     // {
            //     //     "data": "CodeNo",
            //     //     "autoWidth": true,
            //     //     "searchable": true
            //     // },
            //     // {
            //     //     "data": "Address",
            //     //     "autoWidth": true,
            //     //     "searchable": true
            //     // },

            //     // {
            //     //     render: (data, type, row, meta) => {

            //     //         return "<a  href='/LabourDatabase/Edit?id=" + row.Id + " ' $ type='button' data-bs-toggle='modal' data-bs-target='#exampleModal' class='btn btn-sm btn-primary'> Edit </a> <a href='/LabourDatabase/Details?id=" + row.Id + " ' class='btn btn-sm btn-info'>Details</a>  <button onclick='showDeleteConfirmMessage(" + row.Id + ")' class='btn btn-sm btn-danger'>Delete</button>"
            //     //     },
            //     // },

            // ]
           


           
        });


        //Filter
        $("#submit").click(function () {
            var forestCircleId = Number($("#ForestCircleId").val());
            var forestDivisionId = Number($("#ForestDivisionId").val());
            var forestRangeId = Number($("#ForestRangeId").val());
            var forestBeatId = Number($("#ForestBeatId").val());
            //var fcvVcfType = Number($("#FcvVcfType").val());
            var forestFcvVcfId = Number($("#ForestFcvVcfId").val());
            var divisionId = Number($("#DivisionId").val());
            var districtId = Number($("#DistrictId").val());
            var upazillaId = Number($("#UpazillaId").val());
            var unionId = Number($("#UnionId").val());
            //alert(forestCircleId);

            var labourDatabaseFilterVM =
            {
                ForestCircleId: forestCircleId,
                ForestDivisionId: forestDivisionId,
                ForestRangeId: forestRangeId,
                ForestBeatId: forestBeatId,
                //FcvVcfType: fcvVcfType,
                ForestFcvVcfId: forestFcvVcfId,
                DivisionId: divisionId,
                DistrictId: districtId,
                UpazillaId: upazillaId,
                UnionId: unionId
            };

            $.ajax({
                type: "POST",
                url: "/PatrollingScheduling/IndexFilterPatrollingSchedulingListByPagination",
                data: labourDatabaseFilterVM,
                cache: false,
                dataType: 'json',
                success: function (response) {
                    $('#foodTable').DataTable({
                        "bDestroy": true,

                        //"bServerSide": true,
                        //"bProcessing": true,
                        //"bSearchable": true,
                        //"order": [[1, 'asc']],
                        // "language": {
                        //     "emptyTable": "No record found.",
                        //     "processing":
                        //         '<i class="fa fa-spinner fa-spin fa-3x fa-fw" style="color:#2a2b2b;"></i><span class="sr-only">Loading...</span> '
                        // },
                        data: response.aaData,
                        "columns": [
                            {
                                title: 'Id',
                                data: null,
                                render: (data, type, row, meta) => meta.row
                            },
                            // {
                            //     "data": "Id",
                            //     "autoWidth": true,
                            //     "searchable": true
                            // },

                            {
                                "data": "PatrollingArea",
                                "autoWidth": true,
                                "searchable": true
                            },
                            {
                                "data": "Date",
                                "autoWidth": true,
                                "searchable": true
                            },
                            {
                                render: (data, type, row, meta) => {
                                    return moment(row.StartTime).format("DD-MM-YYYY");
                                },
                            },
                            {
                                render: (data, type, row, meta) => {
                                    return moment(row.EndTime).format("DD-MM-YYYY");
                                },
                            },

                            {
                                "data": "AllocatedAmountMonth",
                                "autoWidth": true,
                                "searchable": true
                            },

                            {
                                render: (data, type, row, meta) => {

                                    return "<a  href='/PatrollingScheduling/Edit?id=" + row.Id + " ' $ type='button' data-bs-toggle='modal' data-bs-target='#exampleModal' class='btn btn-sm btn-primary'> Edit </a> <a href='/PatrollingScheduling/Details?id=" + row.Id + " ' class='btn btn-sm btn-info'>Details</a>  <button onclick='showDeleteConfirmMessage(" + row.Id + ")' class='btn btn-sm btn-danger'>Delete</button>"
                                },
                            },
                        ]

                    });
                },
                error: function () {
                    $(".loader").fadeOut("slow");
                    swal(
                        'Unexpected',
                        'Unknown error occurred',
                        'error'
                    );
                }
            });

        });


    });
</script>