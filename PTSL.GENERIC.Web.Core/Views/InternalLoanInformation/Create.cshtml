@model PTSL.GENERIC.Web.Core.Model.EntityViewModels.InternalLoan.InternalLoanInformationVM
@{
    ViewBag.Title = "Create New Internal Loan Information";
    var Message = ViewBag.Message;
}

<link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/css/select2.min.css" rel="stylesheet" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/js/select2.min.js"></script>

<style>
    label {
        margin-bottom: 0.2rem;
    }

    ._select2_option {
        line-height: 20px;
    }

        ._select2_option span {
            font-weight: 300;
        }

            ._select2_option span:first-child {
                font-weight: 500;
            }

    .flex-basis-content {
        flex-basis: content;
    }

    .gap-5 {
        gap: 5px;
    }

    .custom-input input {
        height: auto;
        padding: 0 !important;
        margin: 0 !important;
    }

    #SurveyId-error {
        display: block;
    }
</style>

<div class="card">
    <div class="card-header">
        <h4>
            <a href="/InternalLoanInformation/Index" class="mr-1 back">
                <svg width="20" height="20" viewBox="0 0 32 32">
                    <path fill="currentColor" d="m14 26l1.41-1.41L7.83 17H28v-2H7.83l7.58-7.59L14 6L4 16l10 10z" />
                </svg>
            </a>
            Create New Internal Loan Information
        </h4>
        <button class="ml-auto reset btn btn-sm" onclick="window.location.reload()">
            <svg class="rotate180z" width="16" height="16" viewBox="0 0 32 32">
                <path d="M25.95 7.65l.005-.004c-.092-.11-.197-.206-.293-.312c-.184-.205-.367-.41-.563-.603c-.139-.136-.286-.262-.43-.391c-.183-.165-.366-.329-.558-.482c-.16-.128-.325-.247-.49-.367c-.192-.14-.385-.277-.585-.406a13.513 13.513 0 0 0-.533-.324q-.308-.179-.625-.341c-.184-.094-.37-.185-.56-.27c-.222-.1-.449-.191-.678-.28c-.19-.072-.378-.145-.571-.208c-.246-.082-.498-.15-.75-.217c-.186-.049-.368-.102-.556-.143c-.29-.063-.587-.107-.883-.15c-.16-.023-.315-.056-.476-.073A12.933 12.933 0 0 0 6 7.703V4H4v8h8v-2H6.811A10.961 10.961 0 0 1 16 5a11.111 11.111 0 0 1 1.189.067c.136.015.268.042.403.061c.25.037.501.075.746.128c.16.035.315.08.472.121c.213.057.425.114.633.183c.164.054.325.116.486.178c.193.074.384.15.57.235c.162.072.32.15.477.23q.268.136.526.286c.153.09.305.18.453.276c.168.11.33.224.492.342c.14.102.282.203.417.312c.162.13.316.268.47.406c.123.11.248.217.365.332c.167.164.323.338.479.512A10.993 10.993 0 1 1 5 16H3a13 13 0 1 0 22.95-8.35z" fill="currentColor" />
            </svg>
            Reset
        </button>
    </div>

    <form id="Form" asp-controller="InternalLoanInformation" asp-action="Create" enctype="multipart/form-data" class="card-body mt-2">
        <div class="p-2 green-card" style="border-radius: 5px;">
            <div class="row custom forest-location">
                <div class="col-6 p-1">
                    @await Html.PartialAsync(
                    "~/Views/Shared/_ForestAdministration.cshtml",
                    (
                    ViewBag.ForestCircleId as SelectList,
                    ViewBag.ForestDivisionId as SelectList,
                    ViewBag.ForestRangeId as SelectList,
                    ViewBag.ForestBeatId as SelectList,
                    ViewBag.ForestFcvVcfId as SelectList
                    )
                    )
                </div>

                <div class="col-6 p-1">
                    @await Html.PartialAsync(
                    "~/Views/Shared/_CivilAdministration.cshtml",
                    (
                    ViewBag.DivisionId as SelectList,
                    ViewBag.DistrictId as SelectList,
                    ViewBag.UpazillaId as SelectList,
                    ViewBag.UnionId as SelectList
                    )
                    )
                </div>

                <div class="col-6 p-1">
                    <fieldset class="p-2">
                        <legend class="float-none w-auto">NGO Information</legend>
                        <div class="row">
                            <div class="col-6 pr-1">
                                <label class="m-0">NGO*</label>
                                @Html.DropDownList("NgoId", null, "Select NGO", htmlAttributes: new { @class = "" })
                            </div>
                        </div>
                    </fieldset>
                </div>

                <div class="col-6 p-1">
                    <fieldset class="p-2">
                        <legend class="float-none w-auto">Beneficiary</legend>
                        <div class="row">
                            <div class="col-6 pr-1 position-relative">
                                <label class="m-0">Beneficiary*</label>
                                @Html.DropDownList("SurveyId", null, "Select Beneficiary", htmlAttributes: new { @class = "" })
                            </div>
                        </div>
                    </fieldset>
                </div>
            </div>
        </div>

        <div class="p-2 custom green-card mt-2" style="border-radius: 5px;" id="LoanInfo">
            <fieldset class="p-2 col-12">
                <legend class="float-none w-auto">Loan Information</legend>
                <div class="row mb-2">
                    <div class="col-md-3 col-sm-12 pr-1">
                        Total Available Balance : <span id="totalAvailableBalance"></span>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-3 col-sm-12 pr-1">
                        <label>
                            Total allocated loan(TK)
                            <span style="color:red;">*</span>
                        </label>
                        <input type="number"
                               min="0"
                               name="@nameof(Model.TotalAllocatedLoanAmount)"
                               id="@nameof(Model.TotalAllocatedLoanAmount)"
                               placeholder="Enter loan amount (TK)"
                               required />
                    </div>
                    <div class="col-md-3 col-sm-12 px-1">
                        <label>
                            Start date
                            <span style="color:red;">*</span>
                        </label>
                        <input type="date"
                               name="@nameof(Model.StartDate)"
                               id="@nameof(Model.StartDate)"
                               value="@(Model.StartDate == default ? DateTime.Now.ToString("yyyy-MM-dd") : Model.StartDate.ToString("yyyy-MM-dd"))"
                               placeholder="Enter Start Date"
                               required />
                    </div>
                    <div class="col-md-3 col-sm-12 px-1">
                        <label>
                            End date
                            <span style="color:red;">*</span>
                        </label>
                        <input type="date"
                               name="@nameof(Model.EndDate)"
                               id="@nameof(Model.EndDate)"
                               placeholder="Enter End Date"
                               disabled />
                    </div>
                    <div class="col-md-3 col-sm-12 pl-1">
                        <label>
                            Months for total repayment
                            <span style="color:red;">*</span>
                        </label>
                        <input type="number"
                               name="@nameof(Model.MaximumRepaymentMonth)"
                               id="@nameof(Model.MaximumRepaymentMonth)"
                               value=""
                               placeholder="Enter months" />
                    </div>
                </div>

                <div class="row mt-3">
                    <div class="col-md-3 col-sm-12 pr-1">
                        <label>
                            Service charge (in percentage)
                            <span style="color:red;">*</span>
                        </label>
                        <input type="number"
                               min="0"
                               name="@nameof(Model.ServiceChargePercentage)"
                               id="@nameof(Model.ServiceChargePercentage)"
                               value="5"
                               placeholder="Enter service charge (%)" />
                    </div>
                    <div class="col-md-3 col-sm-12 px-1">
                        <label>
                            Security charge (in percentage)
                            <span style="color:red;">*</span>
                        </label>
                        <input type="number"
                               min="0"
                               name="@nameof(Model.SecurityChargePercentage)"
                               id="@nameof(Model.SecurityChargePercentage)"
                               value="1"
                               placeholder="Enter service charge (%)" />
                    </div>
                </div>

                <div class="row mt-2">
                    <div class="col-md-3 col-sm-12 pr-1">
                        <label>
                            Image Files
                        </label>
                        <input type="file" multiple name="InternalLoanInformationImageFiles[]" accept="image/png, image/gif, image/jpeg" />
                    </div>
                    <div class="col-md-3 col-sm-12 px-1">
                        <label>
                            Document Files
                        </label>
                        <input type="file" multiple name="InternalLoanInformationDocumentFiles[]" />
                    </div>
                </div>
            </fieldset>
        </div>

        <div class="d-flex justify-content-end py-2">
            <button type="submit" id="submit-btn" class="btn btn-sm btn-green save">
                Save
            </button>
        </div>
    </form>
</div>

<script>
    $("#Form").validate({
        rules: {
            ForestCircleId: {
                required: true
            },
            ForestDivisionId: {
                required: true
            },
            ForestRangeId: {
                required: true
            },
            ForestBeatId: {
                required: true
            },
            FcvVcfType: {
                required: true
            },
            ForestFcvVcfId: {
                required: true
            },
            DistrictId: {
                required: true
            },
            DivisionId: {
                required: true
            },
            UpazillaId: {
                required: true
            },
            UnionId: {
                required: true
            },
            SurveyId: {
                required: true
            },
            NgoId: {
                required: true
            },
            MaximumRepaymentMonth: {
                required: true
            },
        },
    });

    var availableBalance = 0;

    $("#submit-btn").on("click", function (event) {
        var allocatedLoanAmount = $("#TotalAllocatedLoanAmount").val();
        if (availableBalance <= allocatedLoanAmount) {
            swal({
                title: "Account information!",
                text: "Account balance is not sufficient!",
                icon: "error",
            });

            $("#TotalAllocatedLoanAmount").val(null);
            return;
        }

        event.preventDefault();
        if ($("#Form").valid() == false) return;

        $(".loader").fadeIn("fast");
        $("#Form").submit();
    });

    $('#ForestFcvVcfId').on("change", function () {
        var fcvVcfId = $("#ForestFcvVcfId").val();

        $.ajax({
            cache: false,
            type: "GET",
            url: "/InternalLoanInformation/GetInternalLoanAvailableAmount",
            data: { "fcvVcfId": fcvVcfId },
            success: function (data) {
                console.log("Datas", data);
                $('#totalAvailableBalance').html(data.TotalAvailableBalance);
                availableBalance = data.TotalAvailableBalance;
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert('Failed to retrieve data.');
            }
        });
    });
</script>

<script>
    $(document).on("change", "#StartDate, #EndDate", function () {
        var startDate = $("#StartDate").val();
        var endDate = $("#EndDate").val();

        if (!startDate || !endDate) return;

        var start = new Date(startDate);
        var end = new Date(endDate);
        const diffInMonths = (end.getFullYear() - start.getFullYear()) * 12 + (end.getMonth() - start.getMonth());

        $("#MaximumRepaymentMonth").val(diffInMonths);
        $("#MaximumRepaymentMonth").trigger("change");
    });

    $("#MaximumRepaymentMonth").on("change", function () {
        var val = $(this).val();
        if (!val) return $(this).val(0);

        var valNum = Number.parseInt(val);
        if (Number.isNaN(valNum)) return $(this).val(0);

        if (valNum < 0) return $(this).val(0);

        var startDate = $("#StartDate").val();
        if (!startDate) return $(this).val(0);

        var start = new Date(startDate);
        start.setMonth(start.getMonth() + valNum);
        $("#EndDate").val(start.toISOString().slice(0, 10));
    });
    $("#CheckAllLandmarks").on("click", function () {
        var isTrue = $(this).is(":checked");
        $("#AIGLandmarks").find("input:not(#CheckAllLandmarks)").each(function () {
            if (isTrue) $(this).prop('checked', true);
            else $(this).prop('checked', false);

            $('#AIGLandmarks input:not(#CheckAllLandmarks)').trigger("change");
        });
    })
    $('#AIGLandmarks input:not(#CheckAllLandmarks)').on('change', function () {
        $('#AIGLandmarks input:not(#CheckAllLandmarks)').each(function () {
            var v = $(this).is(":checked");
            if (v) $(this).val("true");
            else $(this).val("false");
        });

        const allSelected = $('#AIGLandmarks input:not(#CheckAllLandmarks)').filter(':checked').length === $('#AIGLandmarks input:not(#CheckAllLandmarks)').length;

        if (allSelected) {
            $("#LoanInfo").show();
            $("#submit-btn").show();
        } else {
            $("#LoanInfo").hide();
            $("#submit-btn").hide();
        }
    });
</script>

<script>
    $("#ForestFcvVcfId").on("change", function () {
        var filterData = {
            ForestCivilLocation: {
                ForestCircleId: $(".forest-location select[name=ForestCircleId]").val(),
                ForestDivisionId: $(".forest-location select[name=ForestDivisionId]").val(),
                ForestRangeId: $(".forest-location select[name=ForestRangeId]").val(),
                ForestBeatId: $(".forest-location select[name=ForestBeatId]").val(),
                ForestFcvVcfId: $(".forest-location select[name=ForestFcvVcfId]").val(),
            },
        };

        _getBeneficiaryFilterData(
            filterData,

            // Success
            function (response) {
                if (Array.isArray(response.Data)) {
                    var data = response.Data.map(x => {
                        return {
                            id: x.Id,
                            text: x.BeneficiaryName || x.BeneficiaryNameBn,
                            beneficiaryPhone: x.BeneficiaryPhone || x.BeneficiaryPhoneBn,
                            nid: x.BeneficiaryNid,
                        }
                    });
                    data = [{
                        id: "",
                        text: "Choose",
                    }, ...data];
                    $('#SurveyId').empty();

                    var optionTemplate = function (option) {
                        var beneficiaryPhone = option.beneficiaryPhone ? `<span>Mobile: ${option.beneficiaryPhone}</span>` : '<span>Mobile:</span>';
                        var nid = option.nid ? `<span>NID: ${option.nid}</span>` : '<span>NID:</span>';

                        return $(
                            `
                                        <div class="d-flex flex-column _select2_option">
                                            <span>${option.text}</span>
                                            ${beneficiaryPhone}
                                            ${nid}
                                        </div>
                                        `
                        );
                    };

                    var selectionTemplate = function (option) {
                        return $(
                            `<span>${option.text}</span>`
                        );
                    };

                    $('#SurveyId').select2({
                        data,
                        placeholder: 'Select Beneficiary',
                        templateResult: optionTemplate,
                        templateSelection: selectionTemplate
                    });
                }
            },

            // Error
            function () {
                $("#tableSelectedLocationBeneficiary tbody").empty();
            }
        );
    });

    $('#SurveyId').on("change", function () {
        $(this).valid();
    });
</script>

