<style>
    #tabs li[aria-selected=true] a {
        color: black;
    }
</style>

<div class="modal fade bd-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" style="max-width: calc(100vw - 100px);">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="myLargeModalLabel">Add Participant</h4>
                <button id="CloseModal" type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <div id="tabs">
                    <ul>
                        <li><a href="#OtherMember">Member</a></li>
                    </ul>
                    <form id="OtherMember">
                        <div class="form-row">
                            <div class="form-group col-md-6">
                                <label>
                                    Member Name
                                    <span style="color:red;">*</span>
                                </label>
                                <input type="text" class="form-control" name="MemberName" placeholder="Enter Member Name" />
                            </div>
                            <div class="form-group col-md-3">
                                <label>
                                    Member Email
                                    <span style="color:red;">*</span>
                                </label>
                                <input type="email" class="form-control" name="MemberEmail" placeholder="Enter Member Email" />
                            </div>
                            <div class="form-group col-md-3">
                                <label>
                                    Member Gender
                                    <span style="color:red;">*</span>
                                </label>
                                <select name="MemberGender" class="form-control">
                                    <option value="">Select..</option>
                                </select>
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="form-group col-md-6">
                                <label>
                                    Mobile Number
                                    <span style="color:red;">*</span>
                                </label>
                                <input type="text" class="form-control" name="MemberPhoneNumber" placeholder="Enter Member Phone Name" />
                            </div>
                            <div class="form-group col-md-6">
                                <label>
                                    Member NID
                                    <span style="color:red;">*</span>
                                </label>
                                <input type="text" class="form-control" name="MemberNID" placeholder="Enter Member NID" required />
                            </div>
                        </div>
						<div class="form-row">
                            <div class="form-group col-md-6">
                                <label>
                                    Member Designation
                                    <span style="color:red;">*</span>
                                </label>
                                <input type="text" class="form-control" name="MemberDesignation" placeholder="Enter Member Designation" />
                            </div>
                            <div class="form-group col-md-6">
                                <label>
                                    Member Organization
                                </label>
                                <input type="text" class="form-control" name="MemberOrganization" placeholder="Enter Member Organization" />
                            </div>
						</div>
						<div class="form-row">
                            <div class="form-group col-md-6">
                                <label>
									Ethnicity
                                </label>
								<select name="EthnicityId" class="form-control" asp-items="ViewBag.EthnicityId">
									<option selected value="">Choose..</option>
								</select>
                            </div>
                            <div class="form-group col-md-6">
                                <label>
                                    Member Address
                                </label>
								<input type="text" class="form-control" name="MemberAddress" placeholder="Enter Member Address" />
                            </div>
						</div>
                        <div class="form-row">
                            <div class="col text-right">
                                <button id="AddOtherMember" class="btn btn-primary btn-sm">Add</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    $("#tabs").tabs();

    var memberUiId = -1;
    var index = 1;

    $("#AddOtherMember").on("click", function (event) { // Add Member to UI table but don't save in DB yet
		event.preventDefault();

        $("#OtherMember").validate({
            rules: {
                MemberName: {
                    required: true,
                    minlength: 2,
                },
                MemberAge: "required",
                MemberEmail: {
                    required: true,
                    isEmail: true,
                },
                MemberGender: "required",
                MemberNID: {
                    required: true,
                    mustBeInteger: true,
                    minlength: 10,
                    maxlength: 17,
                },
                MemberDesignation: "required",
                MemberPhoneNumber: {
                    required: true,
                    mustBeInteger: true,
                    minlength: 11,
                    maxlength: 11,
                },
            }
        });

        var isFormValid = $("#OtherMember").valid();
        if (isFormValid == false) {
            return;
        }

        var newMember = {
            member: {
                Id: memberUiId,
				MemberName: $("#OtherMember input[name=MemberName]").val(),
				MemberEmail: $("#OtherMember input[name=MemberEmail]").val(),
				MemberGender: $("#OtherMember select[name=MemberGender]").val(),
				MemberPhoneNumber: $("#OtherMember input[name=MemberPhoneNumber]").val(),
				MemberNID: $("#OtherMember input[name=MemberNID]").val(),
				MemberDesignation: $("#OtherMember input[name=MemberDesignation]").val(),
				MemberOrganization: $("#OtherMember input[name=MemberOrganization]").val(),
				EthnicityId: $("#OtherMember input[name=EthnicityId]").val(),
				MemberAddress: $("#OtherMember input[name=MemberAddress]").val(),
            },
        };

        allParticipants.push(newMember);
        memberUiId--;

        resetOtherMemberForm();
        addParticipantToTable(newMember.member);

        var currentButton = $(this);
        currentButton.text("Added");

        var timeOut = setTimeout(function() {
            currentButton.text("Add");
            clearTimeout(timeOut);
        }, 1000);
    });

    function resetOtherMemberForm() {
		document.getElementById("OtherMember").reset();
    }

    function deleteOtherMember(id) {
        allParticipants = allParticipants.filter(x => x.member.Id != id);
        $("#participantMemberTable tbody").find(`tr[data-id=${id}]`).remove();
    }
    
    function addParticipantToTable(member) {
        //var genderName = genderList.find(x => x.Id == member.MemberGender);
        $("#participantMemberTable tbody").append(`
            <tr data-id=${member.Id}>
                <td class="text-center index">${index++}</td>
				<td>${member.MemberName}</td>
				<td>${member.MemberEmail}</td>
				<td>${member.MemberPhoneNumber}</td>
				<td>${member.MemberNID}</td>

                <td>
                    <button onclick="deleteOtherMember(${member.Id})" class="btn btn-sm btn-danger">Delete</button>
                </td>
            </tr>
        `);
        makeIndex();
    }
</script>

<script>
    // Load Gender
    var genderList = [];
    $.ajax({
        cache: false,
        type: "GET",
        url: "/Dropdown/GetGenderEnumList",
        success: function (data) {
            genderList = data;
            var Gender = $("#OtherMember select[name=MemberGender]");

            Gender.html('<option value="">Choose..</option>');
            $.each(data, function (id, option) {
                Gender.append($('<option></option>').val(option.Id).html(option.Name));
            });
        },
    });
    // Custom jQuery validation rules
    const isInteger = num => /^-?[0-9]+$/.test(num + '');
    const dateMustBePreviousFromNowFunc = date => {
        return (new Date(date)).toISOString() >= (new Date(new Date().toDateString())).toISOString();
    }
    const dateMustBeGreaterThanStartDateFunc = date => {
        var startDate = $("#StartDate").val();

        return (new Date(date)).toISOString() >= (new Date(startDate)).toISOString();
    }
    function isEmail(email) {
        return /^\w+@@[a-zA-Z_]+?\.[a-zA-Z]{2,3}$/.test(email);
    }
    function isEnglish(str) {
        return /^[\x20-\x7E]*$/.test(str);
    }
    const isBangla = (str) => {
        const lang = str.replace(/\s/g, '');

        for (var i = 0; i < lang.length; i++) {
            if (lang.charCodeAt(i) < 2432 || lang.charCodeAt(i) > 2558) {
                return false;
            }
        }
        return true;
    }

    $.validator.addMethod(
        'mustBeInteger',
        function (value, element, requiredValue) {
            return isInteger(value);
        },
        'Must be a valid number.'
    );
    $.validator.addMethod(
        'dateMustBePreviousFromNow',
        function (value, element, requiredValue) {
            return dateMustBePreviousFromNowFunc(value);
        },
        'Date must be greater or equal to current date.'
    );
    $.validator.addMethod(
        'dateMustBeGreaterThanStart',
        function (value, element, requiredValue) {
            return dateMustBeGreaterThanStartDateFunc(value);
        },
        'Date must be greater or equal to start date.'
    );
    $.validator.addMethod(
        'isEmail',
        function (value) {
            return isEmail(value);
        },
        'Invalid Email'
    );
    $.validator.addMethod(
        'isEnglish',
        function (value) {
            return isEnglish(value);
        },
        'Please enter English characters'
    );
    $.validator.addMethod(
        'isOptionalBangla',
        function (value) {
            if (!value) return true;
            return isBangla(value);
        },
        'Please enter Bangla characters'
    );
</script>
