@{ 
    ViewBag.Title = "Create Departmental Training";
    var Message = ViewBag.Message;
}

<style>
    /*.add-participant-container {
        display: flex;
        align-items: end;
        gap: 8px;
    }*/
    label.error {
        color: red;
    }
    .participantMemberTableContainer {
        display: none;
    }
        .participantMemberTableContainer:has(table tbody tr) {
            display: table;
        }

    .mybutton {
        color: blue;
        height: 34px;
        margin-top: 8px;
        width: 100%;
    }
</style>

<div class="card">
    <div class="card-header">
        <h4>
            <a href="/DepartmentalTraining/Index" class="mr-1 back">
                <svg width="20" height="20" viewBox="0 0 32 32">
                    <path fill="currentColor" d="m14 26l1.41-1.41L7.83 17H28v-2H7.83l7.58-7.59L14 6L4 16l10 10z" />
                </svg>
            </a>
            Create Departmental Training
        </h4>
        <!-- resetFromData('#DepartmentalTrainingForm') -->
        <button class="ml-auto reset btn btn-sm" onclick="window.location.reload()">
            <svg class="rotate180z" width="16" height="16" viewBox="0 0 32 32">
                <path d="M25.95 7.65l.005-.004c-.092-.11-.197-.206-.293-.312c-.184-.205-.367-.41-.563-.603c-.139-.136-.286-.262-.43-.391c-.183-.165-.366-.329-.558-.482c-.16-.128-.325-.247-.49-.367c-.192-.14-.385-.277-.585-.406a13.513 13.513 0 0 0-.533-.324q-.308-.179-.625-.341c-.184-.094-.37-.185-.56-.27c-.222-.1-.449-.191-.678-.28c-.19-.072-.378-.145-.571-.208c-.246-.082-.498-.15-.75-.217c-.186-.049-.368-.102-.556-.143c-.29-.063-.587-.107-.883-.15c-.16-.023-.315-.056-.476-.073A12.933 12.933 0 0 0 6 7.703V4H4v8h8v-2H6.811A10.961 10.961 0 0 1 16 5a11.111 11.111 0 0 1 1.189.067c.136.015.268.042.403.061c.25.037.501.075.746.128c.16.035.315.08.472.121c.213.057.425.114.633.183c.164.054.325.116.486.178c.193.074.384.15.57.235c.162.072.32.15.477.23q.268.136.526.286c.153.09.305.18.453.276c.168.11.33.224.492.342c.14.102.282.203.417.312c.162.13.316.268.47.406c.123.11.248.217.365.332c.167.164.323.338.479.512A10.993 10.993 0 1 1 5 16H3a13 13 0 1 0 22.95-8.35z" fill="currentColor" />
            </svg>
            Reset
        </button>
    </div>
    <form id="DepartmentalTrainingForm" class="card-body">
        <div class="row p-2 custom green-card" style="border-radius: 5px;">
            <fieldset class="p-2 col-12">
                <legend class="float-none w-auto">Training Information</legend>
                <div class="row">
                    <div class="col-6 pr-1">
                        <div class="row">
                            <div class="col-6 pr-1">
                                <label>
									Financial Year
                                    <span style="color:red;">*</span>
                                </label>
								@Html.DropDownList("FinancialYearId", null, "Choose..", htmlAttributes: new { @class = "", @required = "required" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row mt-3">
                    <div class="col-6 pr-1">
                        <div class="row">
                            <div class="col-6 pr-1">
                                <label>
                                    Training Title
                                    <span style="color:red;">*</span>
                                </label>
                                <input type="text" id="TrainingTitle" name="TrainingTitle" placeholder="Enter Training title" />
                            </div>
                            <div class="col-6 pl-1">
                                <label>
                                    Start Date
                                    <span style="color:red;">*</span>
                                </label>
                                <input type="date" id="StartDate" name="StartDate" placeholder="Start date" />
                            </div>
                        </div>
                    </div>
                    <div class="col-6 pl-1">
                        <div class="row">
                            <div class="col-6 pr-1">
                                <label>
                                    End Date
                                    <span style="color:red;">*</span>
                                </label>
                                <input type="date" id="EndDate" name="EndDate" placeholder="End date" />
                            </div>
                            <div class="col-6 pl-1">
                                <label>
                                    Training duration
                                    <span style="color:red;">*</span>
                                </label>
                                <input type="text" id="TrainingDuration" name="TrainingDuration" placeholder="Enter Training duration" disabled />
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row mt-3">
                    <div class="col-6 pr-1">
                        <div class="row">
                            <div class="col-6 pr-1">
                                <label>
                                    Trainer name
                                    <span style="color:red;">*</span>
                                </label>
                                <input type="text" id="TrainerName" name="TrainerName" placeholder="Enter Trainer name" />
                            </div>
                            <div class="col-6 pl-1">
                                <label>
                                    Location
                                    <span style="color:red;">*</span>
                                </label>
                                <input type="text" id="Location" name="Location" placeholder="Enter Location" />
                            </div>
                        </div>
                    </div>
                    <div class="col-6 pl-1">
                        <div class="row">
                            <div class="col-6 pr-1">
                                <label>
                                    Event Types
                                    <span style="color:red;">*</span>
                                </label>
                                <select id="EventTypeId" name="EventTypeId">
                                    <option value="">Select Event Types</option>
                                </select>
                            </div>
                            <div class="col-6 pl-1">
                                <label>Departmental Training Type</label>
                                <select id="DepartmentalTrainingTypeId" name="DepartmentalTrainingTypeId" disabled>
                                    <option value="">Select Departmental Training</option>
                                </select>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row mt-3">
                    <div class="col-3 pr-1">
                        <label>
                            Training Organizer
                            <span style="color:red;">*</span>
                        </label>
                        <select id="TrainingOrganizerId" name="TrainingOrganizerId">
                            <option value="">Select Training Organizer</option>
                        </select>
                    </div>
                    <div class="col-3 px-1" style="top:-7px;">
                        <br />
                        <button type="button" class="mybutton flex-grow-1 btn btn-sm" data-toggle="modal" data-target=".bd-example-modal-file">
                            Attach Files
                            <svg class="ml-1" width="15" height="15" viewBox="0 0 32 32">
                                <path fill="currentColor" d="m28.1 18.9l-15-15c-2.5-2.6-6.6-2.6-9.2-.1s-2.6 6.7 0 9.2l.1.1L6.8 16l1.4-1.4l-2.9-2.9c-1.7-1.7-1.7-4.6 0-6.3s4.6-1.8 6.3-.1l.1.1l14.9 14.9c1.8 1.7 1.8 4.6.1 6.3c-1.7 1.8-4.6 1.8-6.3.1l-.1-.1l-7.4-7.4c-1-1-.9-2.6 0-3.5c1-.9 2.5-.9 3.5 0l4.1 4.1l1.4-1.4l-4.2-4.2c-1.8-1.7-4.6-1.6-6.3.2c-1.6 1.7-1.6 4.4 0 6.2l7.5 7.5c2.5 2.6 6.6 2.6 9.2.1s2.6-6.7 0-9.3c0 .1 0 0 0 0z" />
                            </svg>
                        </button>
                    </div>
                    <div class="col-3 pl-1" style="top:-7px;">
                        <br />
                        <button type="button" class="mybutton flex-grow-1 btn btn-sm" data-toggle="modal" data-target=".bd-example-modal-lg">
                            Add Participants
                            <svg class="ml-1" width="15" height="15" viewBox="0 0 15 15"><path fill="none" stroke="currentColor" d="M7.5 1v13M1 7.5h13" /></svg>
                        </button>
                    </div>
                </div>
            </fieldset>
        </div>
    </form>

    <div id="table-show px-5" style="padding: 0 10px;" class="participantMemberTableContainer">
        <h6>Participants List</h6>

        <table class="table table-striped table-bordered table-hover" id="participantMemberTable" style="width:100%;">
            <thead>
                <tr>
                    <th class="text-center index">SL</th>
                    <th>Name</th>
                    <th>Email</th>
                    <th>Mobile Number</th>
                    <th>NID</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
            </tbody>
        </table>
    </div>

    <div class="d-flex justify-content-end pt-1 pb-2">
        <button type="submit" id="SaveTraining" class="btn btn-sm btn-green mr-2 save">
            Save
        </button>
    </div>

    @await Html.PartialAsync("_AddParticipant");
    @await Html.PartialAsync("_AddFiles", null);
</div>

<script>
    var allParticipants = [];

    $("#CloseModal").on("click", function () {
        // clean up
    });
    function makeIndex() {
        var index = 1;
        $("#participantMemberTable td.index").each(function () {
            $(this).text(index++);
        });
    }
</script>

<script>
    $("#SaveTraining").on("click", function () {
        $("#DepartmentalTrainingForm").validate({
            rules: {
                TrainingTitle: {
                    required: true,
                    isEnglish: true,
                },
                StartDate: {
                    required: true,
                    dateMustBePreviousFromNow: true,
                },
                EndDate: {
                    required: true,
                    dateMustBeGreaterThanStart: true,
                },
                Location: {
                    required: true,
                    isEnglish: true,
                },
                TrainingDuration: "required",
                TrainerName: "required",
                EventTypeId: "required",
                TrainingOrganizerId: "required",
				FinancialYearId: "required",
            }
        });

        var isFormValid = $("#DepartmentalTrainingForm").valid();
        if (isFormValid == false) {
            return;
        }

        if (Array.isArray(allParticipants) == false) {
            swal(
                'Invalid Form',
                'No Participants added.',
                'error'
            );
            return;
        }

        if (allParticipants.length < 1) {
            swal(
                'Invalid Form',
                'No Participants added.',
                'error'
            );
            return;
        }

        // Map all participants
        var participants = allParticipants.map(x => {
            return {
                DepartmentalTrainingMember: {
                    ...x.member,
                    Id: 0,
                }
            }
        });

        var communityTraining = {
            TrainingTitle: $("#TrainingTitle").val(),
            StartDate: $("#StartDate").val(),
            EndDate: $("#EndDate").val(),
            TrainingDuration: $("#TrainingDuration").val(),
            Location: $("#Location").val(),
            TrainerName: $("#TrainerName").val(),
			FinancialYearId: $("#FinancialYearId").val(),

            ForestCircleId: $(".create-member select[name=ForestCircleId]").val(),
            ForestDivisionId: $(".create-member select[name=ForestDivisionId]").val(),
            ForestRangeId: $(".create-member select[name=ForestRangeId]").val(),
            ForestBeatId: $(".create-member select[name=ForestBeatId]").val(),
            ForestFcvVcfId: $(".create-member select[name=ForestFcvVcfId]").val(),
            DivisionId: $(".create-member select[name=PresentDivisionId]").val(),
            DistrictId: $(".create-member select[name=PresentDistrictId]").val(),
            UpazillaId: $(".create-member select[name=PresentUpazillaId]").val(),

            EventTypeId: $("#EventTypeId").val(),
            DepartmentalTrainingTypeId: $("#DepartmentalTrainingTypeId").val(),
            TrainingOrganizerId: $("#TrainingOrganizerId").val(),
            DepartmentalTrainingParticipentsMapsJSON: participants,
        };

        var formData = new FormData();

        for (var key in communityTraining) {
            var value = communityTraining[key];

            if (Array.isArray(value)) {
                formData.append(key, JSON.stringify(value));
            } else {
                formData.append(key, value);
            }
        }

        $("#imagesList input[type=file]").each(function () {
            var current = $(this);

            if (current?.length && current.length > 0) {
                formData.append("DepartmentalTrainingImageFiles[]", current[0].files[0]);
            }
        });

        $("#documentsList input[type=file]").each(function () {
            var current = $(this);

            if (current?.length && current.length > 0) {
                formData.append("DepartmentalTrainingDocumentFiles[]", current[0].files[0]);
            }
        });

        $(".loader").fadeIn("slow");

        $.ajax({
            type: "POST",
            url: "/DepartmentalTraining/Create",
            data: formData,
            cache: false,
            contentType: false,
            processData: false,
            dataType: 'json',
            success: function (response) {
                $(".loader").fadeOut("slow");

                if (response.Success) {
					window.location.href = response.RedirectUrl;
					/*
                    swal(
                        'Success',
                        response.Message,
                        'success'
                    );
					*/
                } else {
                    swal(
                        'Error',
                        response.Message,
                        'error'
                    );
                }
            },
            error: function() {
                $(".loader").fadeOut("slow");

                swal(
                    'Unexpected',
                    'Unknown error occurred',
                    'error'
                );
            }
        });

        // Send data with Ajax
    });
</script>

<script>
    let eventTypes = [];

    $(document).ready(function () {
        $.ajax({
            cache: false,
            type: "GET",
            url: "/Dropdown/GetEventTypeList",
            success: function (data) {
                eventTypes = data;

                var EventTypeId = $("#EventTypeId");
                EventTypeId.html('<option value="">Choose..</option>');
                $.each(data, function (id, option) {
                    EventTypeId.append($('<option></option>').val(option.Id).html(option.Name));
                });
            },
            error: function (xhr, ajaxOptions, thrownError) {
				//
            }
        });

        $.ajax({
            cache: false,
            type: "GET",
            url: "/Dropdown/GetDepartmentalTrainingTypeList",
            success: function (data) {
                var DepartmentalTrainingTypeId = $("#DepartmentalTrainingTypeId");
                DepartmentalTrainingTypeId.html('<option value="">Choose..</option>');
                $.each(data, function (id, option) {
                    DepartmentalTrainingTypeId.append($('<option></option>').val(option.Id).html(option.Name));
                });
            },
            error: function (xhr, ajaxOptions, thrownError) {
				//
            }
        });

        $.ajax({
            cache: false,
            type: "GET",
            url: "/Dropdown/GetTrainingOrganizerList",
            success: function (data) {
                var TrainingOrganizerId = $("#TrainingOrganizerId");
                TrainingOrganizerId.html('<option value="">Choose..</option>');
                $.each(data, function (id, option) {
                    TrainingOrganizerId.append($('<option></option>').val(option.Id).html(option.Name));
                });
            },
            error: function (xhr, ajaxOptions, thrownError) {
				//
            }
        });
    });

    $("#EventTypeId").on("change", function () {
        const value = $(this).val();
        const found = eventTypes.find(x => x.Id == value);

        if (found && found.HasTrainingType) {
            $("#DepartmentalTrainingTypeId").removeAttr("disabled");
        } else {
            $("#DepartmentalTrainingTypeId").attr("disabled", "");
            $("#DepartmentalTrainingTypeId").val("");
        }
    });

	$(document).on("change", "#StartDate, #EndDate", function() {
		var startDate = $("#StartDate").val();
		var endDate = $("#EndDate").val();

		if (startDate && endDate) {
			var start = new Date(startDate);
			var end = new Date(endDate);

			var diff = start.getTime() - end.getTime();
			var differenceInDay = Math.abs(Math.ceil(diff / (1000 * 3600 * 24))) + 1;

			$("#TrainingDuration").val(`${differenceInDay} ${differenceInDay == 1 ? 'day' : 'days'}`);
		}
	});
</script>
