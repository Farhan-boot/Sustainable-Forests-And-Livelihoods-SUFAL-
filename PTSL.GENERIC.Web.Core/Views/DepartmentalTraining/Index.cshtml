@model IEnumerable<PTSL.GENERIC.Web.Core.Model.EntityViewModels.Capacity.DepartmentalTrainingVM>
@{ ViewBag.Title = "Index"; }

<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
	<div class="modal-dialog" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="exampleModalLabel">Modal title</h5>
				<button type="button" class="close" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>
			<div class="modal-body">
				<input type="file" accept=".xlx,.xlsx" />
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
				<button type="button" class="btn btn-primary">Submit</button>
			</div>
		</div>
	</div>
</div>

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <div class="col-md-10">
                    <h4>Departmental Training Lists</h4>
                </div>
                <div class="col-md-2 text-right">
                    <a href="/DepartmentalTraining/Create" class="badge badge-success badge-shadow">Create New</a>
                </div>
            </div>
            <div class="card-body">
				<!--
				<div class="d-flex justify-content-end mb-4">
					<button type="button" class="btn btn-sm btn-outline-primary" data-toggle="modal" data-target="#exampleModal">
						<i class="fa fa-file-upload"></i>
						Bulk Upload
					</button>
				</div>
				-->
               @*  asp-action="IndexFilter" asp-controller="DepartmentalTraining" *@
				<div  class="mb-4 green-card p-2" style="border-radius: 5px;">
					<div class="row custom">
						<div class="col-12 p-1">
							<fieldset class="p-2">
								<legend class="float-none w-auto">Basic Information</legend>
								<div class="row">
									<div class="col pr-1">
										<label class="m-0">Financial Year</label>
										@Html.DropDownList("FinancialYearId", null, "Select Financial Year", htmlAttributes: new { })
									</div>
									<div class="col px-1">
										<label class="m-0">Event Type</label>
										@Html.DropDownList("EventTypeId", null, "Select Event Type", htmlAttributes: new { })
									</div>
									<div class="col px-1">
										<label class="m-0">From Start Date</label>
										<input type="date" id="StartDate" value="@(ViewBag.StartDate is DateTime ? ((DateTime)ViewBag.StartDate).ToUIDateString() : null)" name="StartDate" placeholder="Enter start date" />
									</div>
									<div class="col pl-1">
										<label class="m-0">To End Date</label>
										<input type="date" id="EndDate" value="@(ViewBag.EndDate is DateTime ? ((DateTime)ViewBag.EndDate).ToUIDateString() : null)" name="EndDate" placeholder="Enter end date" />
									</div>
								</div>
							</fieldset>
						</div>
					</div>

					<div class="d-flex justify-content-end mt-2">
                        <button id="submit" type="submit" class="btn btn-sm btn-green save">Search</button>
					</div>
				</div>

				<div class="table-responsive">
                    @* <table class="table table-striped table-bordered table-hover" id="tableExport_filter" style="width:100%;">
                        <thead>
                            <tr>
                                <th>SL</th>
                                <th>Training Title</th>
                                <th>Financial Year</th>
                                <th>Start Date</th>
                                <th>End Date</th>
                                <th>Location</th>
                                <th class="not-export-col">Action</th>
                            </tr>
                        </thead> @{ int i = 1; }
                        <tbody>
                            @if (Model != null)
                            {
                                foreach (var data in Model)
                                {
                                    <tr>
                                        <td>@i</td>
                                        <td>@data.TrainingTitle</td>
										<td>@data.FinancialYear?.Name</td>
                                        <td>@data.StartDate.ToShortDateString()</td>
                                        <td>@data.EndDate.ToShortDateString()</td>
                                        <td>@data.Location</td>

                                        <td class="not-export-col">
                                            <a href="/DepartmentalTraining/Edit?id=@data.Id" class="btn btn-primary btn-sm">Edit</a>
                                            <a href="/DepartmentalTraining/Details?id=@data.Id" class="btn btn-info btn-sm">Details</a>
                                            <button onclick="showDeleteConfirmMessage(@data.Id)" class="btn btn-danger btn-sm">Delete</button>
                                        </td>
                                    </tr>
                                    i++;
                                }
                            }
                        </tbody>
                    </table> *@



                    <table id="foodTable" class="display">
                        <thead class="table-content">
                            <tr class="table-row">
                                <th scope="col">SL</th>
                                <th scope="col">Training Title</th>
                                <th scope="col">Financial Year</th>
                                <th scope="col">Start Date</th>
                                <th scope="col">End Date</th>
                                <th scope="col">Location</th>
                                <th scope="col">Action</th>
                            </tr>
                        </thead>
                        <tbody class="table-content">
                        </tbody>
                    </table>





                </div>
            </div>
        </div>
    </div>
</div>
@await Html.PartialAsync("~/Views/Shared/_DataTables.cshtml")

<script>

    $(document).ready(function () {
        $('#tableExport_filter').DataTable({
            pageLength: 5,
            dom: 'lBfrtip',
            buttons: [
                {
                    extend: 'csv',
                    title: 'Executive Committee List',
                    exportOptions: {
                        columns: [0, 1, 2, 3, 4, 5]
                    }
                },
                {
                    extend: 'excel',
                    title: 'Executive Committee List',
                    exportOptions: {
                        columns: [0, 1, 2, 3, 4, 5]
                    }
                },
                {
                    extend: 'pdf',
                    title: 'Executive Committee List',
                    exportOptions: {
                        columns: [0, 1, 2, 3, 4, 5]
                    }
                },
                {
                    extend: 'print',
                    title: 'Executive Committee List',
                    exportOptions: {
                        columns: [0, 1, 2, 3, 4, 5]
                    }
                }
            ]
        });
    });





    function showDeleteConfirmMessage(id) {
        swal({
            title: "Are you sure?",
            text: "You will not be able to recover this item!",
            type: "warning",
            showCancelButton: true,
            confirmButtonColor: "#DD6B55",
            confirmButtonText: "Yes, delete it!",
            closeOnConfirm: false
        }, function () {
            var data = {
                'id': id
            };
            $.ajax({
                type: "GET",
                contentType: "application/json; charset=utf-8",
                url: "/DepartmentalTraining/Delete",
                data: data,
                datatype: "json",
                success: function (result) {
                    console.log(result);
                    var message = result.Message;
                    var executionState = result.executionState;
                    if (executionState != null) {
                        if (executionState != 10) {
                            swal("Deleted!", "Item has been deleted.", "success");
                        } else {
                            swal("Deleted Failed!", message, "success");
                        }
                        $(".confirm").on('click', function () {
                            window.location.reload();
                        });
                    }
                },
                error: function (xmlhttprequest, textstatus, errorthrown) {
                    swal("Not Deleted!", "Item has not been deleted.", "error");
                }
            });
        });
    }
</script>




<script>
    // var $j = jQuery.noConflict();
    $(document).ready(function () {
        var data;
        $('#foodTable').DataTable({
            pageLength: 5,
            dom: 'lBfrtip',
            buttons: [
                {
                    extend: 'csv',
                    title: 'Departmental Training Information List',
                    exportOptions: {
                        columns: [0, 1, 2, 3, 4, 5]
                    }
                },
                {
                    extend: 'excel',
                    title: 'Departmental Training Information List',
                    exportOptions: {
                        columns: [0, 1, 2, 3, 4, 5]
                    }
                },
                {
                    extend: 'pdf',
                    title: 'Departmental Training Information List',
                    exportOptions: {
                        columns: [0, 1, 2, 3, 4, 5]
                    }
                },
                {
                    extend: 'print',
                    title: 'Departmental Training Information List',
                    exportOptions: {
                        columns: [0, 1, 2, 3, 4, 5]
                    }
                }
            ],

            "sAjaxSource": "/DepartmentalTraining/GetDepartmentalTrainingListByPagination",
            "bDestroy": true,
            "bServerSide": true,
            "bProcessing": true,
            "bSearchable": true,
            "order": [[1, 'asc']],
            "language": {
                "emptyTable": "No record found.",
                "processing":
                    '<i class="fa fa-spinner fa-spin fa-3x fa-fw" style="color:#2a2b2b;"></i><span class="sr-only">Loading...</span> '
            },
          
            "fnDrawCallback": function (oSettings) {
                //alert(oSettings.aoData[1]._aData.Id);
                data = oSettings.jqXHR.responseJSON.aaData;
            },

            aoColumns: [
                {
                    title: 'Id',
                    data: null,
                    render: (data, type, row, meta) => meta.row
                },
                { mData: 'TrainingTitle' },
                {
                    render: (data, type, row, meta) => {
                        return row.FinancialYear.Name;
                    },
                },
                {
                    render: (data, type, row, meta) => {
                        return moment(row.StartDate).format("DD-MM-YYYY");
                    },
                },
                {
                    render: (data, type, row, meta) => {
                        return moment(row.EndDate).format("DD-MM-YYYY");
                    },
                },

                { mData: 'Location' },
                {
                    render: (data, type, row, meta) => {

                        return "<a  href='/DepartmentalTraining/Edit?id=" + row.Id + " ' $ type='button' data-bs-toggle='modal' data-bs-target='#exampleModal' class='btn btn-sm btn-primary'> Edit </a> <a href='/DepartmentalTraining/Details?id=" + row.Id + " ' class='btn btn-sm btn-info'>Details</a>  <button onclick='showDeleteConfirmMessage(" + row.Id + ")' class='btn btn-sm btn-danger'>Delete</button>"
                    },
                },
            ],
        });



        //Filter
        $("#submit").click(function () {
            //Extra Filter;
            var FinancialYearId = Number($("#FinancialYearId").val());
            var EventTypeId = Number($("#EventTypeId").val());
            var StartDate = $("#StartDate").val();
            var EndDate = $("#EndDate").val();

            var labourDatabaseFilterVM =
            {
                FinancialYearId: FinancialYearId,
                EventTypeId: EventTypeId,
                StartDate: StartDate,
                EndDate: EndDate
            };

            $.ajax({
                type: "POST",
                url: "/DepartmentalTraining/IndexFilterDepartmentalTrainingListByPagination",
                data: labourDatabaseFilterVM,
                cache: false,
                dataType: 'json',
                success: function (response) {
                    $('#foodTable').DataTable({
                        "bDestroy": true,

                        //"bServerSide": true,
                        //"bProcessing": true,
                        //"bSearchable": true,
                        //"order": [[1, 'asc']],
                        // "language": {
                        //     "emptyTable": "No record found.",
                        //     "processing":
                        //         '<i class="fa fa-spinner fa-spin fa-3x fa-fw" style="color:#2a2b2b;"></i><span class="sr-only">Loading...</span> '
                        // },
                        data: response.aaData,

                        aoColumns: [
                            {
                                title: 'Id',
                                data: null,
                                render: (data, type, row, meta) => meta.row
                            },
                            { mData: 'TrainingTitle' },
                            {
                                render: (data, type, row, meta) => {
                                    return row.FinancialYear.Name;
                                },
                            },
                            {
                                render: (data, type, row, meta) => {
                                    return moment(row.StartDate).format("DD-MM-YYYY");
                                },
                            },
                            {
                                render: (data, type, row, meta) => {
                                    return moment(row.EndDate).format("DD-MM-YYYY");
                                },
                            },
                            { mData: 'Location' },
                            {
                                render: (data, type, row, meta) => {

                                    return "<a  href='/DepartmentalTraining/Edit?id=" + row.Id + " ' $ type='button' data-bs-toggle='modal' data-bs-target='#exampleModal' class='btn btn-sm btn-primary'> Edit </a> <a href='/DepartmentalTraining/Details?id=" + row.Id + " ' class='btn btn-sm btn-info'>Details</a>  <button onclick='showDeleteConfirmMessage(" + row.Id + ")' class='btn btn-sm btn-danger'>Delete</button>"
                                },
                            },
                        ],
                    });
                },
                error: function () {
                    $(".loader").fadeOut("slow");
                    swal(
                        'Unexpected',
                        'Unknown error occurred',
                        'error'
                    );
                }
            });

        });


    });
</script>

