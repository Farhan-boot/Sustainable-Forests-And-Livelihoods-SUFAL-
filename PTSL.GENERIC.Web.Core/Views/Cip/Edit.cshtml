@using PTSL.GENERIC.Web.Core.Helper.Enum;
@using PTSL.GENERIC.Web.Core.Model.EntityViewModels.Beneficiary;
@model PTSL.GENERIC.Web.Core.Model.EntityViewModels.Beneficiary.CipVM
@{
	ViewBag.Title = "Edit CIP Information";
	var Message = ViewBag.Message;
	var images = Model.CipFiles.Where(x => x.FileType == FileType.Image) ?? Enumerable.Empty<CipFileVM>();
	var documents = Model.CipFiles.Where(x => x.FileType == FileType.Document) ?? Enumerable.Empty<CipFileVM>();
}

<style>
	.file_container {
		position: relative;
	}
	.delete_file_button {
		position: absolute;
		top: 5px;
		right: 5px;
		z-index: 5;
		background: white;
		padding: 2px !important;
		border-radius: 50%;
		width: 25px;
		height: 25px;
		border: 1px solid gray;
		color: red;
	}
</style>

<div class="card">
    <div class="card-header">
        <h4>
			<a href="/Cip/Index" class="mr-1 back">
                <svg width="20" height="20" viewBox="0 0 32 32">
                    <path fill="currentColor" d="m14 26l1.41-1.41L7.83 17H28v-2H7.83l7.58-7.59L14 6L4 16l10 10z" />
                </svg>
            </a>
			Edit CIP Information
        </h4>
        <button class="ml-auto reset btn btn-sm" onclick="resetFromData('#Form')">
            <svg class="rotate180z" width="16" height="16" viewBox="0 0 32 32">
                <path d="M25.95 7.65l.005-.004c-.092-.11-.197-.206-.293-.312c-.184-.205-.367-.41-.563-.603c-.139-.136-.286-.262-.43-.391c-.183-.165-.366-.329-.558-.482c-.16-.128-.325-.247-.49-.367c-.192-.14-.385-.277-.585-.406a13.513 13.513 0 0 0-.533-.324q-.308-.179-.625-.341c-.184-.094-.37-.185-.56-.27c-.222-.1-.449-.191-.678-.28c-.19-.072-.378-.145-.571-.208c-.246-.082-.498-.15-.75-.217c-.186-.049-.368-.102-.556-.143c-.29-.063-.587-.107-.883-.15c-.16-.023-.315-.056-.476-.073A12.933 12.933 0 0 0 6 7.703V4H4v8h8v-2H6.811A10.961 10.961 0 0 1 16 5a11.111 11.111 0 0 1 1.189.067c.136.015.268.042.403.061c.25.037.501.075.746.128c.16.035.315.08.472.121c.213.057.425.114.633.183c.164.054.325.116.486.178c.193.074.384.15.57.235c.162.072.32.15.477.23q.268.136.526.286c.153.09.305.18.453.276c.168.11.33.224.492.342c.14.102.282.203.417.312c.162.13.316.268.47.406c.123.11.248.217.365.332c.167.164.323.338.479.512A10.993 10.993 0 1 1 5 16H3a13 13 0 1 0 22.95-8.35z" fill="currentColor" />
            </svg>
            Reset
        </button>
    </div>

	<form id="Form" asp-controller="Cip" asp-action="Edit" enctype="multipart/form-data" class="card-body mt-2">
		<input type="hidden" name="Id" value="@Model.Id" />

		<div class="p-2 green-card" style="border-radius: 5px;">
			<div class="row custom">
				<div class="col-6 p-1">
					@await Html.PartialAsync(
					"~/Views/Shared/_ForestAdministration.cshtml",
					(
					ViewBag.ForestCircleId as SelectList,
					ViewBag.ForestDivisionId as SelectList,
					ViewBag.ForestRangeId as SelectList,
					ViewBag.ForestBeatId as SelectList,
					ViewBag.ForestFcvVcfId as SelectList
					)
					)
				</div>

				<div class="col-6 p-1">
					@await Html.PartialAsync(
					"~/Views/Shared/_CivilAdministration.cshtml",
					(
					ViewBag.DivisionId as SelectList,
					ViewBag.DistrictId as SelectList,
					ViewBag.UpazillaId as SelectList,
					ViewBag.UnionId as SelectList
					)
					)
				</div>
			</div>
		</div>

		<div class="p-2 custom green-card mt-2" style="border-radius: 5px;" id="">
			<fieldset class="p-2 col-12">
				<legend class="float-none w-auto">Basic Information</legend>
				<div class="row">
					<div class="col-md-3 col-sm-12 pr-1">
						<label>
							Beneficiary Name
							<span style="color:red;">*</span>
						</label>
						<input type="text"
							   name="@nameof(Model.BeneficiaryName)"
							   placeholder="Enter full name"
							   value="@Model.BeneficiaryName"
							   required />
					</div>
					<div class="col-md-3 col-sm-12 px-1">
						<label>
							Village Name
							<span style="color:red;">*</span>
						</label>
						<input type="text"
							   name="@nameof(Model.ForestVillageName)"
							   placeholder="Enter village name"
							   value="@Model.ForestVillageName"
							   required />
					</div>
					<div class="col-md-3 col-sm-12 px-1">
						<label>
							Household serial No
							<span style="color:red;">*</span>
						</label>
						<input type="text"
							   name="@nameof(Model.HouseholdSerialNo)"
							   placeholder="Enter Household serial No"
							   value="@Model.HouseholdSerialNo"
							   required />
					</div>
					<div class="col-md-3 col-sm-12 pl-1">
						<label>
							CIP Household Id
							<span style="color:red;">*</span>
						</label>
						<input type="text"
							   id="CIPHouseholdId"
							   placeholder="CIP Household Id"
							   value="@Model.CipGeneratedId"
							   disabled />
					</div>
				</div>

				<div class="row mt-2">
					<div class="col-md-3 col-sm-12 pr-1">
						<label>
							Gender
							<span style="color:red;">*</span>
						</label>
						@Html.DropDownList("Gender", null, "Select Gender", htmlAttributes: new { @required = "required" })
					</div>
					<div class="col-md-3 col-sm-12 px-1">
						<label>
							Father / Spouse Name
							<span style="color:red;">*</span>
						</label>
						<input type="text"
							   name="@nameof(Model.FatherOrSpouseName)"
							   placeholder="Enter father or spouse name"
							   value="@Model.FatherOrSpouseName"
							   required />
					</div>
					<div class="col-md-3 col-sm-12 px-1">
						<label>
							Ethnicity
							<span style="color:red;">*</span>
						</label>
						@Html.DropDownList("EthnicityId", null, "Select Ethnicity", htmlAttributes: new { @required = "required" })
					</div>
					<div class="col-md-3 col-sm-12 pl-1">
						<label>
							NID
							<span style="color:red;"></span>
						</label>
						<input type="text"
							   name="@nameof(Model.NID)"
							   placeholder="Enter NID"
							   value="@Model.NID"
							    />
					</div>
				</div>

				<div class="row mt-2">
					<div class="col-md-3 col-sm-12 pr-1">
						<label>
							Mobile Number
							<span style="color:red;">*</span>
						</label>
						<input type="text"
							   name="@nameof(Model.MobileNumber)"
							   placeholder="Enter mobile number"
							   value="@Model.MobileNumber"
							   required />
					</div>
					<div class="col-md-3 col-sm-12 px-1">
						<label>
							House Type
							<span style="color:red;">*</span>
						</label>
                        @Html.DropDownList("TypeOfHouseNewId", null, "Select House Type", htmlAttributes: new { @required = "required" })
					</div>
					<div class="col-md-3 col-sm-12 px-1">
						<label>
							Wealth
							<span style="color:red;">*</span>
						</label>
						@Html.DropDownList("CipWealth", null, "Select Wealth", htmlAttributes: new { @required = "required" })
					</div>
				</div>

				<div class="row mt-2">
					<div class="col-md-3 col-sm-12 pr-1">
						<label>
							Image Files
						</label>
						<input type="file" multiple name="CIPImageFiles[]" accept=".png,.jpg,.jpeg,.gif,.avif,.webp" />
					</div>
					<div class="col-md-3 col-sm-12 px-1">
						<label>
							Document Files
						</label>
						<input type="file" multiple name="CIPDocumentFiles[]" accept=".doc,.docx,.xls,.xlsx,.pdf,.txt" />
					</div>
				</div>

				<div class="row mt-4">
					<div class="col-md-6" style="@(images.Count() == 0 ? "display: none;" : "")">
						<h6>Current Images</h6>

						<div class="image-grid">
							@foreach (var file in images)
							{
								<div class="file_container" data-fileid="@file.Id">
									<img src="@file.FileNameUrl" class="responsive-image" />
									<button type="button" onclick="deleteFile(@file.Id)" class="delete_file_button">X</button>
								</div>
							}
						</div>
					</div>
					<div class="col-md-6" style="@(documents.Count() == 0 ? "display: none;" : "")">
						<h6>Current Documents</h6>

						<div class="d-flex flex-wrap" style="flex-direction: column;gap: 5px;">
							@foreach (var file in documents)
							{
								<div data-fileid="@file.Id">
									<a href="@file.FileNameUrl">@file.FileName</a>
									<button type="button" onclick="deleteFile(@file.Id)" class="btn btn-sm btn-danger" style="background: red;">X</button>
								</div>
							}
						</div>
					</div>
				</div>
			</fieldset>
		</div>

		<div class="d-flex justify-content-end py-2">
			<button type="submit" id="submit-btn" class="btn btn-sm btn-green save">
				Update
			</button>
		</div>
	</form>
</div>

<script>
	$(document).ready(() => addRequiredFieldInPage());

    $(".submit-btn").on("click", function () {
        if ($("#Form").valid()) {
            $(".loader").fadeIn("slow");
        }
    });
    $("#Form").validate({
        rules: {
			ForestCircleId: {
				required: true
			},
			ForestDivisionId: {
				required: true
			},
			ForestRangeId: {
				required: true
			},
			ForestBeatId: {
				required: true
			},
			FcvVcfType: {
				required: true
			},
			ForestFcvVcfId: {
				required: true
			},
			DistrictId: {
				required: true
			},
			DivisionId: {
				required: true
			},
			UpazillaId: {
				required: true
			},
			UnionId: {
				required: true
			},
			BeneficiaryName: {
				required: true,
				minlength: 3,
				maxlength: 60,
			},
			HouseholdSerialNo: {
				required: true,
				'_mustBeInteger': true,
				minlength: 3,
				maxlength: 3,
			},
			//NID: {
			//	required: true,
			//	'_mustBeInteger': true,
			//	minlength: 10,
			//	maxlength: 17,
			//},
			MobileNumber: {
				required: true,
				'_mustBeInteger': true,
				minlength: 11,
				maxlength: 11,
			}
        },
    });
</script>

<script>
    $("#ForestFcvVcfId").on("change", function () {
        var filterData = {
            ForestCivilLocation: {
                ForestCircleId: $("#ForestCircleId").val(),
                ForestDivisionId: $("#ForestDivisionId").val(),
                ForestRangeId: $("#ForestRangeId").val(),
                ForestBeatId: $("#ForestBeatId").val(),
                ForestFcvVcfId: $("#ForestFcvVcfId").val(),
            },
        };

        _getBeneficiaryFilterData(
            filterData,

            // Success
            function (response) {
                if (Array.isArray(response.Data)) {
                    var data = response.Data.map(x => {
                        return {
                            id: x.Id,
                            text: x.BeneficiaryName || x.BeneficiaryNameBn,
                            beneficiaryPhone: x.BeneficiaryPhone || x.BeneficiaryPhoneBn,
                            nid: x.BeneficiaryNid,
                        }
                    });
					data = [{
						id: "",
						text: "Choose",
					}, ...data];
					$('#SurveyId').empty();

                    var optionTemplate = function (option) {
                        var beneficiaryPhone = option.beneficiaryPhone ? `<span>Mobile No: ${option.beneficiaryPhone}</span>` : '';
                        var nid = option.nid ? `<span>NID: ${option.nid}</span>` : '';

                        return $(
                            `
                            <div class="d-flex flex-column _select2_option">
                                <span>${option.text}</span>
                                ${beneficiaryPhone}
                                ${nid}
                            </div>
                            `
                        );
                    };

                    var selectionTemplate = function (option) {
                        return $(
                            `<span>${option.text}</span>`
                        );
                    };

                    $('#SurveyId').select2({
                        data,
                        placeholder: 'Select Beneficiary',
                        templateResult: optionTemplate,
                        templateSelection: selectionTemplate
                    });
                }
            },

            // Error
            function () {
                $("#tableSelectedLocationBeneficiary tbody").empty();
            }
        );
    });

	$("#ForestDivisionId, #ForestRangeId, #ForestBeatId, #ForestFcvVcfId, #HouseholdSerialNo").on("change", function () {
        const forestDivisionId = $("#ForestDivisionId").val();
        const forestRangeId = $("#ForestRangeId").val();
        const forestBeatId = $("#ForestBeatId").val();
        const forestFcvVcfId = $("#ForestFcvVcfId").val();
		const HouseholdSerialNo = $("#HouseholdSerialNo").val();
		const CIPHouseholdId = $("#CIPHouseholdId");

		var generatedId = [forestDivisionId, forestRangeId, forestBeatId, forestFcvVcfId, HouseholdSerialNo]
            .filter(Boolean)
            .join("-");

		CIPHouseholdId.val(generatedId);
    });

	function deleteFile(id) {
		swal({
			title: "Are you sure?",
			text: "You will not be able to recover this item!",
			type: "warning",
			showCancelButton: true,
			confirmButtonColor: "#DD6B55",
			confirmButtonText: "Yes, delete it!",
			closeOnConfirm: false
		}, function () {
			$.ajax({
				method: "GET",
				url: `/Cip/DeleteImageOrDocument/${id}`,
			})
				.done(function (data) {
					if (data.Success) {
						swal("Deleted!", "Item has been deleted.", "success");
						$(`[data-fileid=${id}]`).remove();
					} else {
						swal("Deleted Failed!", data.Message, "error");
					}
				});
		});
	}
</script>
