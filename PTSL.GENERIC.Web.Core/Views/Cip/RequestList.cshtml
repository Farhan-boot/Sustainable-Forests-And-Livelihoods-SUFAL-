@model IEnumerable<PTSL.GENERIC.Web.Core.Model.EntityViewModels.Beneficiary.CipVM>
@{
    ViewBag.Title = "Index";
}

<style>
    .btn-warning:hover,
    .btn-warning:focus,
    .btn-warning:active,
    .btn-warning.disabled:hover,
    .btn-warning.disabled:focus,
    .btn-warning.disabled:active :hover {
        background-color: white !important;
        color: red !important;
    }
</style>

<!-- Modal Start-->
<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Permission Settings</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <input type="text" value="" id="cipTeamId" hidden />
                <div class="row  custom">
                    <div class="col-12 p-1">
                        <fieldset class="p-2">
                            <legend class="float-none w-auto">Map To User</legend>
                            <div class="col-6" style="padding-left: 0px;float:left">
                                <label class="m-0">User Role Name <span style="color: red;">*</span></label>
                                @Html.DropDownList("UserRoleId", null, "Choose User Role Name", htmlAttributes: new { @class = "form-control col-md-12", @required = "required" })
                            </div>
                            <div class="col-6" style="padding-left: 0px;float:left">
                                <label class="m-0">Receiver Name <span style="color: red;">*</span></label>
                                @Html.DropDownList("ReceiverId", null, "Choose Receiver Name", htmlAttributes: new { @class = "form-control col-md-12", @required = "required" })
                            </div>
                            <div class="col-6" style="padding-left: 0px;float:left">
                                <label class="m-0">Sending Date <span style="color: red;">*</span></label>
                                <input type="date" id="SendingDateId" name="SendingDateId" placeholder="Enter Sending Date" required="">
                            </div>
                        </fieldset>
                    </div>
                </div>
                <div class="row custom">
                    <div class="col-12 p-1">
                        <fieldset class="p-2">

                            <div class="col-6" style="padding-left: 0px">
                                <label class="m-0">Sending Time <span style="color: red;">*</span></label>
                                <input class="form-control" type="time" id="SendingTimeId" name="SendingTimeId" placeholder="Enter Sending Time" required="">
                            </div>
                            <div class="col-12" style="padding-left: 0px">
                                <label class="m-0">Remark <span style="color: red;">*</span></label>
                                <input class="form-control" type="text" id="RemarkId" name="RemarkId" placeholder="Enter Remark" required="">
                            </div>
                        </fieldset>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                @*<button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>*@
                <button onclick="SaveMapToUser()" type="button" class="btn btn-primary">Save</button>
            </div>
        </div>
    </div>
</div>
<!-- Modal End-->

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <div class="col-md-10 p-0">
                    <h4>Cip Team Management List</h4>
                </div>
                @* <div class="col-md-2 text-right p-0">
                <a href="/CipTeam/Create" class="badge badge-success badge-shadow">Create New</a>
                </div>*@
            </div>
            <div class="card-body">

                <form asp-action="IndexFilter" asp-controller="Cip" class="mb-4 green-card p-2" style="border-radius: 5px;">
                    <div class="row custom">
                        <div class="col-6 p-1">
                            @await Html.PartialAsync(
                            "~/Views/Shared/_ForestAdministration.cshtml",
                            (
                            ViewBag.ForestCircleId as SelectList,
                            ViewBag.ForestDivisionId as SelectList,
                            ViewBag.ForestRangeId as SelectList,
                            ViewBag.ForestBeatId as SelectList,
                            ViewBag.ForestFcvVcfId as SelectList
                            )
                            )
                        </div>

                        <div class="col-6 p-1">
                            @await Html.PartialAsync(
                            "~/Views/Shared/_CivilAdministration.cshtml",
                            (
                            ViewBag.DivisionId as SelectList,
                            ViewBag.DistrictId as SelectList,
                            ViewBag.UpazillaId as SelectList,
                            ViewBag.UnionId as SelectList
                            )
                            )

                        </div>
                    </div>



                    <div class="d-flex justify-content-end mt-2">
                        <button type="submit" class="btn btn-sm btn-green save">Search</button>
                    </div>
                </form>


                <div class="table-responsive">
                    <table class="table table-striped table-bordered table-hover" id="tableExport_filter" style="width:100%;">
                        <thead>
                            <tr>
                                <th>Sl No.</th>
                                <th>Beneficiary Name</th>
                                <th>Gender</th>
                                <th>Mobile Number</th>
                                <th>NID</th>
                                <th>Wealth</th>
                                <th>Approval Status</th>
                                <th class="not-export-col">Action</th>
                            </tr>
                        </thead> @{
                            int i = 1;
                        }
                        <tbody>
                            @if (Model != null)
                            {
                                foreach (var data in Model.Where(x => x.ApprovalStatus != 2))
                                {
                                    <tr style="">
                                        @*<td>@data.Id</td>*@
                                        <td>@i</td>
                                        <td>@data.BeneficiaryName</td>
                                        <td>@data.Gender.GetEnumDisplayName()</td>
                                        <td>@data.MobileNumber</td>
                                        <td>@data.NID</td>
                                        <td>@data.CipWealth.GetEnumDisplayName()</td>

                                        @if (data?.ApprovalStatus == null)
                                        {
                                            <td>---</td>
                                        }
                                        @if (data?.ApprovalStatus == 0)
                                        {
                                            <td>Pending</td>
                                        }
                                        @if (data?.ApprovalStatus == 1)
                                        {
                                            <td>Pending</td>
                                        }
                                        @if (data?.ApprovalStatus == 2)
                                        {
                                            <td>Approve</td>
                                        }
                                        @if (data?.ApprovalStatus == 3)
                                        {
                                            <td>Rejected</td>
                                        }
                                        @*
                                <td class="not-export-col">
                                <a href="/CipTeam/AcceptedById?id=@data.Id" class="btn btn-warning btn-sm btnExpired">Accept</a>
                                <a href="/CipTeam/RejectedById?id=@data.Id" class="btn btn-danger btn-sm btnExpired">Reject</a>
                                <a href="/CipTeam/Edit?id=@data.Id" class="btn btn-primary btn-sm">Edit</a>
                                <a href="/CipTeam/Details?id=@data.Id" class="btn btn-info btn-sm">Details</a>
                                <button onclick="showDeleteConfirmMessage(@data.Id)" class="btn btn-danger btn-sm">Delete</button>
                                </td>*@

                                        <td class="not-export-col">
                                            <button data-toggle="modal" data-target="#exampleModal" class="btn btn-primary btn-sm" onclick="SendRequestModal(@data?.Id)" style="width: 100%;margin-top: 2px;margin-top: 2px;">Send for Approval</button>

                                            @{
                                                bool checkIsVisavaleAcceptButton = ViewBag.CheckIsVisavaleAcceptButton;
                                            }
                                            @if (checkIsVisavaleAcceptButton == true)
                                            {
                                                <a href="/Cip/AcceptedById?id=@data?.Id" class="btn btn-success btn-sm" style="width: 100%;margin-top: 2px;margin-top: 2px;">Accept</a>
                                            }
                                        </td>
                                    </tr>
                                    i++;

                                }

                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.12.1/css/jquery.dataTables.css">
<script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/1.12.1/js/jquery.dataTables.js"></script>
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/buttons/1.5.6/css/buttons.dataTables.min.css" />
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jszip/2.5.0/jszip.min.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/pdfmake.min.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/vfs_fonts.js"></script>
<script type="text/javascript" src="https://cdn.datatables.net/1.10.18/js/jquery.dataTables.min.js"></script>
<script type="text/javascript" src="https://cdn.datatables.net/buttons/1.5.6/js/dataTables.buttons.min.js"></script>
<script type="text/javascript" src="https://cdn.datatables.net/buttons/1.5.6/js/buttons.html5.min.js"></script>
<script type="text/javascript" src="https://cdn.datatables.net/buttons/1.5.6/js/buttons.print.min.js"></script>


<script>

    $("#UserRoleId").change(function () {
        var selectedItem = $(this).val();
        var forestFcvVcfList = $("#ForestFcvVcfId");
        if (selectedItem == "" || selectedItem == null) {
            return true;
        }
        var receiverId = $("#ReceiverId");


        $.ajax({
            cache: false,
            type: "GET",
            url: "/CipTeam/GetUserInfoByRoleId",
            data: { "id": selectedItem },
            success: function (data) {
                $("#ReceiverId > option").remove();
                receiverId.html('<option value="">Select User Name</option>');
                $.each(data.Data, function (id, option) {
                    receiverId.append($('<option></option>').val(option.Id).html(option.UserName));
                });
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert('Failed to retrieve data.');
            }
        });
    });


    function SendRequestModal(id) {
        var myId = parseInt(id);
        $("#cipTeamId").val(myId);
        var receiverId = $("#ReceiverId");


        //$.ajax({
        //$.ajax({
        //    cache: false,
        //    type: "GET",
        //    url: "/CipTeam/GetModalDataExtra",
        //    data: { "id": myId },
        //    success: function (data) {
        //        $("#ReceiverId > option").remove();
        //        receiverId.html('<option value="">Select User Name</option>');
        //        $.each(data.Data, function (id, option) {
        //            receiverId.append($('<option></option>').val(option.Id).html(option.UserName));
        //        });
        //        //forestDivisonList.prop("disabled", false);
        //    },
        //    error: function (xhr, ajaxOptions, thrownError) {
        //        alert('Failed to retrieve data.');
        //    }
        //});
        //alert(id);
    }


    function SaveMapToUser() {
        var receiverId = parseInt($("#ReceiverId").val());
        var sendingDateId = $("#SendingDateId").val();
        var sendingTimeId = $("#SendingTimeId").val();
        var remarkId = $("#RemarkId").val();
        var teamId = $("#cipTeamId").val();
        var receiverRoleId = parseInt($("#UserRoleId").val());

        var ApprovalLogForCfmVM = {
            "SenderId": 0,
            "SenderRoleId": 0,
            "ReceiverId": receiverId,
            "ReceiverRoleId": receiverRoleId,
            "SendingDate": sendingDateId,
            "SendingTime": sendingTimeId,
            "CipId": teamId,
            "Remark": remarkId
        }

        $.ajax({
            type: "POST",
            url: "/Cip/SaveMapToUser",
            data: ApprovalLogForCfmVM,
            cache: false,
            dataType: 'json',
            success: function (response) {
                alert("success");
                window.location.href = "/Cip/RequestList";
                //committeeDesignationId.append($('<option></option>').val("").html("Select Designation"));
                //$.each(response.Entity, function (id, option) {
                //    committeeDesignationId.append($('<option></option>').val(option.Id).html(option.Name));
                //});
            },
            error: function () {
                $(".loader").fadeOut("slow");
                swal(
                    'Unexpected',
                    'Unknown error occurred',
                    'error'
                );
            }
        });

        //alert(id);
    }

</script>



<script>
    $(document).ready(function () {
        $('#tableExport_filter').DataTable({
            pageLength: 5,
            dom: 'lBfrtip',

            buttons: [
                'copy',
                {
                    extend: 'csv',
                    title: 'Cip Team Management List',
                    exportOptions: {
                        columns: [0, 1, 2, 3, 4, 5, 6, 7]
                    }
                },
                {
                    extend: 'excel',
                    title: 'Cip Team Management List',
                    exportOptions: {
                        columns: [0, 1, 2, 3, 4, 5, 6, 7]
                    }
                },
                {
                    extend: 'pdf',
                    title: 'Cip Team Management List',
                    exportOptions: {
                        columns: [0, 1, 2, 3, 4, 5, 6, 7]
                    }
                },
                {
                    extend: 'print',
                    title: 'Cip Team Management List',
                    exportOptions: {
                        columns: [0, 1, 2, 3, 4, 5, 6, 7]
                    }
                }
            ]
        });
    });



    $(document).ready(function () {
        $('.buttons-copy').hide();
    });


    function showDeleteConfirmMessage(id) {
        swal({
            title: "Are you sure?",
            text: "You will not be able to recover this item!",
            type: "warning",
            showCancelButton: true,
            confirmButtonColor: "#DD6B55",
            confirmButtonText: "Yes, delete it!",
            closeOnConfirm: false
        }, function () {
            var data = {
                'id': id
            };
            $.ajax({
                type: "GET",
                contentType: "application/json; charset=utf-8",
                url: "/CipTeam/Delete",
                data: data,
                datatype: "json",
                success: function (result) {
                    console.log(result);
                    var message = result.Message;
                    var executionState = result.executionState;
                    if (executionState != null) {
                        if (executionState != 10) {
                            swal("Deleted!", "Item has been deleted.", "success");
                        } else {
                            swal("Deleted Failed!", message, "success");
                        }
                        $(".confirm").on('click', function () {
                            window.location.reload();
                        });
                    }
                },
                error: function (xmlhttprequest, textstatus, errorthrown) {
                    swal("Not Deleted!", "Item has not been deleted.", "error");
                }
            });
        });
    }
</script>

<script>
    $("#ForestCircleId").change(function () {
        var selectedItem = $(this).val();
        var forestDivisonList = $("#ForestDivisionId");
        if (selectedItem == "" || selectedItem == null) {
            return true;
        }

        $.ajax({
            cache: false,
            type: "GET",
            url: "/Dropdown/ListForestDivisionByForestCircle",
            data: { "id": selectedItem },
            success: function (data) {
                forestDivisonList.html('<option value="">Choose Forest Divison</option>');
                $.each(data, function (id, option) {
                    forestDivisonList.append($('<option></option>').val(option.Id).html(option.Name));
                });
                forestDivisonList.prop("disabled", false);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert('Failed to retrieve data.');
            }
        });
    });

    $("#ForestDivisionId").change(function () {
        var selectedItem = $(this).val();
        var forestRangeList = $("#ForestRangeId");
        if (selectedItem == "" || selectedItem == null) {
            return true;
        }

        $.ajax({
            cache: false,
            type: "GET",
            url: "/Dropdown/ListForestRangeByForestDivision",
            data: { "id": selectedItem },
            success: function (data) {
                forestRangeList.html('<option value="">Choose  Forest Range</option>');
                $.each(data, function (id, option) {
                    forestRangeList.append($('<option></option>').val(option.Id).html(option.Name));
                });
                forestRangeList.prop("disabled", false);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert('Failed to retrieve data.');
            }
        });
    });

    $("#ForestRangeId").change(function () {
        var selectedItem = $(this).val();
        var forestBeatList = $("#ForestBeatId");
        if (selectedItem == "" || selectedItem == null) {
            return true;
        }

        $.ajax({
            cache: false,
            type: "GET",
            url: "/Dropdown/ListForestBeatByForestRange",
            data: { "id": selectedItem },
            success: function (data) {
                forestBeatList.html('<option value="">Choose Forest Beat</option>');
                $.each(data, function (id, option) {
                    forestBeatList.append($('<option></option>').val(option.Id).html(option.Name));
                });
                forestBeatList.prop("disabled", false);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert('Failed to retrieve data.');
            }
        });
    });

    $("#ForestBeatId").change(function () {
        var selectedItem = $(this).val();
        var forestFcvVcfList = $("#ForestFcvVcfId");
        if (selectedItem == "" || selectedItem == null) {
            return true;
        }

        $.ajax({
            cache: false,
            type: "GET",
            url: "/Dropdown/ListForestFcvVcfByForestBeat",
            data: { "id": selectedItem },
            success: function (data) {
                forestFcvVcfList.html('<option value="">Choose FCV/VCF</option>');
                $.each(data, function (id, option) {
                    forestFcvVcfList.append($('<option></option>').val(option.Id).html(option.Name));
                });
                forestFcvVcfList.prop("disabled", false);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert('Failed to retrieve data.');
            }
        });
    });

    $("#DivisionId").change(function () {
        var selectedItem = $(this).val();
        var PresentDistrictId = $("#DistrictId");
        if (selectedItem == "" || selectedItem == null) {
            return true;
        }

        $.ajax({
            cache: false,
            type: "GET",
            url: "/Dropdown/ListDistrictByDivision",
            data: { "id": selectedItem },
            success: function (data) {
                PresentDistrictId.html('<option value="">Choose District</option>');
                $.each(data, function (id, option) {
                    PresentDistrictId.append($('<option></option>').val(option.Id).html(option.Name));
                });
                PresentDistrictId.prop("disabled", false);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert('Failed to retrieve data.');
            }
        });
    });

    $("#DistrictId").change(function () {
        var selectedItem = $(this).val();
        var PresentUpazillaId = $("#UpazillaId");
        if (selectedItem == "" || selectedItem == null) {
            return true;
        }

        $.ajax({
            cache: false,
            type: "GET",
            url: "/Dropdown/ListUpazillaByDistrict",
            data: { "id": selectedItem },
            success: function (data) {
                PresentUpazillaId.html('<option value="">Choose Upazilla</option>');
                $.each(data, function (id, option) {
                    PresentUpazillaId.append($('<option></option>').val(option.Id).html(option.Name));
                });
                PresentUpazillaId.prop("disabled", false);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert('Failed to retrieve data.');
            }
        });
    });
</script>
