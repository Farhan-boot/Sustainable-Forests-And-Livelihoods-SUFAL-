@* @using PTSL.GENERIC.Web.Core.Model.EntityViewModels.TransactionMangement;
@model PTSL.GENERIC.Web.Core.Model.EntityViewModels.TransactionMangement.TransactionVM
@{ 
    ViewBag.Title = "Edit Transaction";
    var Message = ViewBag.Message;
}

@section Styles {
    <link rel="stylesheet" href="~/multiselect/jquery.multiselect.css">
}
@section Scripts {
    <script src="~/multiselect/jquery.multiselect.js" defer></script>
}

<style>
    select[multiple] + div div.ms-options li label input {
        margin-right: 8px !important;
        margin-top: 5px !important;
    }
</style>

<div class="card">
    <div class="card-header">
        <h4>
            <a href="/Transaction/Index" class="mr-1 back">
                <svg width="20" height="20" viewBox="0 0 32 32">
                    <path fill="currentColor" d="m14 26l1.41-1.41L7.83 17H28v-2H7.83l7.58-7.59L14 6L4 16l10 10z" />
                </svg>
            </a>
            Edit Transaction
        </h4>
        <button class="ml-auto reset btn btn-sm" onclick="resetFromData('#Form')">
            <svg class="rotate180z" width="16" height="16" viewBox="0 0 32 32">
                <path d="M25.95 7.65l.005-.004c-.092-.11-.197-.206-.293-.312c-.184-.205-.367-.41-.563-.603c-.139-.136-.286-.262-.43-.391c-.183-.165-.366-.329-.558-.482c-.16-.128-.325-.247-.49-.367c-.192-.14-.385-.277-.585-.406a13.513 13.513 0 0 0-.533-.324q-.308-.179-.625-.341c-.184-.094-.37-.185-.56-.27c-.222-.1-.449-.191-.678-.28c-.19-.072-.378-.145-.571-.208c-.246-.082-.498-.15-.75-.217c-.186-.049-.368-.102-.556-.143c-.29-.063-.587-.107-.883-.15c-.16-.023-.315-.056-.476-.073A12.933 12.933 0 0 0 6 7.703V4H4v8h8v-2H6.811A10.961 10.961 0 0 1 16 5a11.111 11.111 0 0 1 1.189.067c.136.015.268.042.403.061c.25.037.501.075.746.128c.16.035.315.08.472.121c.213.057.425.114.633.183c.164.054.325.116.486.178c.193.074.384.15.57.235c.162.072.32.15.477.23q.268.136.526.286c.153.09.305.18.453.276c.168.11.33.224.492.342c.14.102.282.203.417.312c.162.13.316.268.47.406c.123.11.248.217.365.332c.167.164.323.338.479.512A10.993 10.993 0 1 1 5 16H3a13 13 0 1 0 22.95-8.35z" fill="currentColor" />
            </svg>
            Reset
        </button>
    </div>
    <div class="card-body">
        @using (Html.BeginForm("Edit", "Transaction", FormMethod.Post, new { id = "Form" }))
        {
            <input type="hidden" value="@Model.Id" name="Id" id="EditId" />

            <div class="row">
                <div class="form-group col-md-3">
                    <label>
                        Forect Circle
                        <span style="color:red;">*</span>
                    </label>
                    @Html.DropDownList("ForestCircleId", null, "Choose..", htmlAttributes: new { @class = "form-control", @required = "required" })
                </div>
                <div class="form-group col-md-3">
                    <label>
                        Forest Division
                        <span style="color:red;">*</span>
                    </label>
                    @Html.DropDownList("ForestDivisionId", null, "Choose..", htmlAttributes: new { @class = "form-control", @required = "required" })
                </div>
                <div class="form-group col-md-3">
                    <label>
                        Fund Type
                        <span style="color:red;">*</span>
                    </label>
                    <select multiple class="form-control" name="FundTypeId" id="FundTypeId" disabled>
                        @foreach (var item in ViewBag.FundTypeId)
                        {
                            <!option value="@item.Id" @(Model?.TransactionDetails?.Any(x => x.FundTypeId == item.Id) == true ? "selected" : "")>@item.Name</!option>
                        }
                    </select>
                </div>
                <div class="form-group col-md-3">
                    <label>
                        Financial Year
                        <span style="color:red;">*</span>
                    </label>
                    @Html.DropDownList("FinancialYearId", null, "Choose..", htmlAttributes: new { @class = "form-control", @required = "required" })
                </div>
            </div>

            <div class="row">
                <div class="form-group col-md-3">
                    <label>
                        From Date
                        <span style="color:red;">*</span>
                    </label>
                    <input type="date" class="form-control" id="@nameof(Model.FromDate)" name="@nameof(Model.FromDate)" value="@Model.FromDate.ToString("yyyy-MM-dd")" placeholder="Enter from date" />
                </div>
                <div class="form-group col-md-3">
                    <label>
                        To Date
                        <span style="color:red;">*</span>
                    </label>
                    <input type="date" class="form-control" id="@nameof(Model.ToDate)" name="@nameof(Model.ToDate)" value="@Model.ToDate.ToString("yyyy-MM-dd")" placeholder="Enter to date" />
                </div>
            </div>

			<div class="d-flex justify-content-end py-2">
				<button type="button" class="btn btn-sm btn-green save submit-btn">Update</button>
            </div>

            <h6 class="mt-4">Fund target amount</h6>
            <div id="FundTarget">
				@foreach (var details in Model.TransactionDetails ?? Enumerable.Empty<TransactionDetailsVM>())
				{
					<div class="row mt-2 fund-target-child" data-id="@details.FundTypeId">
						<div class="col-md-2 col-sm-3 fund-name">
							@details.FundType?.Name
						</div>
						<div class="d-flex justify-content-center col-md-3 col-sm-9">
							<input type="number" min="0" class="form-control fund-target" placeholder="Fund Target" value="@details.TargetAmount" />
							<input type="hidden" value="@details.FundTypeId" class="fund-type-id" />
							<input type="hidden" value="@details.Id" class="details-id" />
							<input type="hidden" value="@Model.Id" class="transaction-id" />
							<button type="button" class="SaveTransactionDetails btn btn-primary btn-sm ml-2 align-self-center">Save</button>
						</div>
					</div>
				}
			</div>
        }
    </div>
</div>

<script>
    $(".submit-btn").on("click", function (e) {
        e.preventDefault();

        if ($("#Form").valid()) {
            $(".loader").fadeIn("slow");

            /*
            var TransactionDetails = [];
            $(".fund-target-child").each(function() {
                var FundTypeId = $(this).data("id");
                var TargetAmount = $(this).find(".fund-target").val();
                var transactionId = $(this).find(".transaction-id").val();
                var detailsId = $(this).find(".details-id").val();

                TransactionDetails.push({
                    Id: detailsId,
                    TransactionId: transactionId,
                    FundTypeId,
                    TargetAmount,
                });
            });
            */

            var postData = {
                Id: $("#EditId").val(),
                ForestCircleId: $("#ForestCircleId").val(),
                ForestDivisionId: $("#ForestDivisionId").val(),
                FinancialYearId: $("#FinancialYearId").val(),
                FromDate: $("#FromDate").val(),
                ToDate: $("#ToDate").val(),
            };

            $.ajax({
                type: "POST",
                url: "/Transaction/Edit",
                data: postData,
                success: function (data) {
                    $(".loader").fadeOut("fast");

                    if (data.Success) {
                        if (data.RedirectUrl) {
                            window.location.href = data.RedirectUrl;
                            return;
                        }

                        swal(
                            'Success',
                            data.Message,
                            'success'
                        );
                    } else {
                        swal(
                            'Failed',
                            data.Message,
                            'error'
                        );
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    $(".loader").fadeOut("fast");

                    swal(
                        'Failed',
                        data.Message,
                        'error'
                    );
                }
            });
        }
    });
    $("#Form").validate({
        rules: {
            ForestCircleId: {
                required: true,
            },
            ForestDivisionId: {
                required: true,
            },
            FundTypeId: {
                required: true,
            },
            FinancialYearId: {
                required: true,
            },
            FromDate: {
                required: true,
            },
            ToDate: {
                required: true,
            },
        },
    });
</script>

<script>
    $(document).ready(function() {
        $("#FundTypeId").multiselect({
            search: true,
            selectAll: true
        });
    });
    $(".SaveTransactionDetails").on("click", function(event) {
        event.preventDefault();

        var parent = $(this).parent();
        var transactionId = parent.find(".transaction-id").val();
        var fundTarget = parent.find(".fund-target").val();
        var fundTypeId = parent.find(".fund-type-id").val();
        var detailsId = parent.find(".details-id").val();

        var data = {
            Id: detailsId,
            TransactionId: transactionId,
            FundTypeId: fundTypeId,
            TargetAmount: fundTarget
        }

        $.ajax({
            cache: false,
			type: "POST",
            url: "/Transaction/SaveTransactionDetails",
			data: data,
			success: function (result) {
                debugger;
                if (result.Success) {
                    swal(
                        'Success',
                        result.Message,
                        'success'
                    );
                } else {
                    swal(
                        'Failed',
                        result.Message,
                        'error'
                    );
                }

                //setTimeout(() => window.location.reload(), 2000);
			},
			error: function (xhr, ajaxOptions, thrownError) {
			}
		});
    });
</script>

<script>
    $("#ForestCircleId").change(function () {
        var selectedItem = $(this).val();
        var forestDivisonList = $("#ForestDivisionId");
        if (selectedItem == "" || selectedItem == null) {
            return true;
        }

        $.ajax({
            cache: false,
            type: "GET",
            url: "/Dropdown/ListForestDivisionByForestCircle",
            data: { "id": selectedItem },
            success: function (data) {
                forestDivisonList.html('<option value="">Choose..</option>');
                $.each(data, function (id, option) {
                    forestDivisonList.append($('<option></option>').val(option.Id).html(option.Name));
                });
                forestDivisonList.prop("disabled", false);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                //
            }
        });
    });
</script>
 *@