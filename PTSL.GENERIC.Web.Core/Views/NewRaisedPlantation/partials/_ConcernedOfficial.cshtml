<fieldset class="p-2 col-12">
    <legend class="float-none w-auto">Concerned Officials</legend>

    <div>
        <div class="row">
            <div class="col-md-3 pr-1">
                <label>
                    Name of the official
                    <span style="color:red;">*</span>
                </label>
                <input x-model="NewConcernedOfficialMap.ConcernedOfficial.OfficialName"
                       name="Concerned_OfficialName"
                       placeholder="Enter name of the official"
                       required />
            </div>
            <div class="col-md-3 px-1">
                <label>
                    Designation
                    <span style="color:red;">*</span>
                </label>
                <select name="Concerned_Designation"
                        x-model="NewConcernedOfficialMap.ConcernedOfficial.DesignationId"
                        x-on:change="SetConcernedOfficialMapDisplay"
                        required>
                    <!option value="">Select Designation</!option>
                    <template x-for="data in ConcernedOfficialMapDropdowns.Designation">
                        <!option :selected="data.Id == NewConcernedOfficialMap.ConcernedOfficial.DesignationId" :value="data.Id" x-text="data.Name"></!option>
                    </template>
                </select>
            </div>
            <div class="col-md-3 px-1">
                <label>
                    Mobile number
                    <span style="color:red;">*</span>
                </label>
                <input x-model="NewConcernedOfficialMap.ConcernedOfficial.MobileNo"
                       placeholder="Enter mobile number"
                       name="Concerned_MobileNumber"
                       type="number"
                       required />
            </div>
            <div class="col-md-3 pl-1">
                <label>
                    Email
                </label>
                <input x-model="NewConcernedOfficialMap.ConcernedOfficial.EmailAddress"
                       placeholder="Enter email"
                       name="Concerned_Email"
                       required />
            </div>
        </div>

        <div class="mt-2 text-right">
            <button @@click="AddConcernedOfficialMap" x-text="NewConcernedOfficialMap.ConcernedOfficial.IsUpdating ? 'Update' : 'Add Information'" type="button" class="btn btn-sm"></button>
        </div>
    </div>

    <p class="mt-3 border-btm">Concerned official details</p>
    <p x-show="ConcernedOfficialMap.filter(x => x.IsDeleted != true).length == 0">No details added yet</p>
    <table class="table table-sm" x-show="ConcernedOfficialMap.filter(x => x.IsDeleted != true).length > 0">
        <tr>
            <th>SL</th>
            <th>Name</th>
            <th>Designation</th>
            <th>Mobile Number</th>
            <th>Email</th>
            <th>Action</th>
        </tr>
        <tbody>
            <template x-for="(data, index) in ConcernedOfficialMap.filter(x => x.IsDeleted != true)" :key="index">
                <tr class="">
                    <td x-text="++index"></td>
                    <td x-text="data.ConcernedOfficial.OfficialName"></td>
                    <td x-text="data.ConcernedOfficial.DesignationDisplay || data.ConcernedOfficial.Designation.Name || 'None'"></td>
                    <td x-text="data.ConcernedOfficial.MobileNo"></td>
                    <td x-text="data.ConcernedOfficial.EmailAddress"></td>
                    <td>
                        <button @@click="RemoveConcernedOfficialMap(data)" type="button" class="btn btn-sm btn-remove">Remove</button>
                        <button @@click="EditConcernedOfficialMap(data)" type="button" class="btn btn-sm btn-primary">Edit</button>
                    </td>
                </tr>
            </template>
        </tbody>
    </table>
</fieldset>

<script>
    function addConcernedOfficial() {
        return {
            // Concerned officials
            ConcernedOfficialMap: [],
            InitialConcernedOfficial: {
                Id: 0,
                IsUpdating: false,
                UpdateIndex: null,

                OfficialName: "",
                DesignationId: "",
                EmailAddress: "",
                MobileNo: "",

                // Display
                DesignationDisplay: "",
            },

            InititalConcernedOfficialMap: {
                IsDeleted: false,
                ConcernedOfficial: {}
            },
            NewConcernedOfficialMap: {},
            ConcernedOfficialMapDropdowns: {
                Designation: [],
            },

            SetConcernedOfficialMapDisplay(event) {
                const value = event.target.value;
                const data = this.ConcernedOfficialMapDropdowns.Designation.find(x => x.Id == value);
                const display = data?.Name ?? "";

                this.NewConcernedOfficialMap.ConcernedOfficial.DesignationDisplay = display;
            },
            InitializeConcernedOfficialMap() {
                this.NewConcernedOfficialMap = { ...this.InititalConcernedOfficialMap, ConcernedOfficial: { ...this.InitialConcernedOfficial } };
            },

            AddConcernedOfficialMap() {
                let hasError = 0;

                for (const key of Object.keys(ConcernedOfficialFormValidation)) {
                    const inputElement = $(`#Form input[name=${key}], #Form select[name=${key}]`);

                    if (!inputElement) ++hasError;
                    if (!inputElement.valid()) ++hasError;
                }

                if (hasError > 0) return;

                if (this.NewConcernedOfficialMap.ConcernedOfficial.IsUpdating) {
                    this.ConcernedOfficialMap[this.NewConcernedOfficialMap.ConcernedOfficial.UpdateIndex] = { ...this.NewConcernedOfficialMap };
                    this.NewConcernedOfficialMap.ConcernedOfficial.IsUpdating = false;
                } else {
                    this.ConcernedOfficialMap.push(this.NewConcernedOfficialMap);
                }

                this.InitializeConcernedOfficialMap();
            },
            RemoveConcernedOfficialMap(data) {
                this.ConcernedOfficialMap.splice(this.ConcernedOfficialMap.indexOf(data), 1);
            },
            EditConcernedOfficialMap(data) {
                const index = this.ConcernedOfficialMap.indexOf(data);

                this.NewConcernedOfficialMap = data;
                this.NewConcernedOfficialMap.ConcernedOfficial.IsUpdating = true;
                this.NewConcernedOfficialMap.ConcernedOfficial.UpdateIndex = index;
            },
        };
    }
</script>
