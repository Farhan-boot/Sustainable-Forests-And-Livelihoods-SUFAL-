@model PTSL.GENERIC.Web.Core.Model.UserVM
@{
    ViewBag.Title = "User Map To Account";
}
<link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/css/select2.min.css" rel="stylesheet" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/js/select2.min.js"></script>


<div class="card">
    <div class="card-header">
        <h4>
            <a href="/Account/UserLists" class="mr-1 back">
                <svg width="20" height="20" viewBox="0 0 32 32">
                    <path fill="currentColor" d="m14 26l1.41-1.41L7.83 17H28v-2H7.83l7.58-7.59L14 6L4 16l10 10z" />
                </svg>
            </a>
            User Map To Account
        </h4>
        <button class="ml-auto reset btn btn-sm" onclick="resetFromData('#AccountForm')">
            <svg class="rotate180z" width="16" height="16" viewBox="0 0 32 32">
                <path d="M25.95 7.65l.005-.004c-.092-.11-.197-.206-.293-.312c-.184-.205-.367-.41-.563-.603c-.139-.136-.286-.262-.43-.391c-.183-.165-.366-.329-.558-.482c-.16-.128-.325-.247-.49-.367c-.192-.14-.385-.277-.585-.406a13.513 13.513 0 0 0-.533-.324q-.308-.179-.625-.341c-.184-.094-.37-.185-.56-.27c-.222-.1-.449-.191-.678-.28c-.19-.072-.378-.145-.571-.208c-.246-.082-.498-.15-.75-.217c-.186-.049-.368-.102-.556-.143c-.29-.063-.587-.107-.883-.15c-.16-.023-.315-.056-.476-.073A12.933 12.933 0 0 0 6 7.703V4H4v8h8v-2H6.811A10.961 10.961 0 0 1 16 5a11.111 11.111 0 0 1 1.189.067c.136.015.268.042.403.061c.25.037.501.075.746.128c.16.035.315.08.472.121c.213.057.425.114.633.183c.164.054.325.116.486.178c.193.074.384.15.57.235c.162.072.32.15.477.23q.268.136.526.286c.153.09.305.18.453.276c.168.11.33.224.492.342c.14.102.282.203.417.312c.162.13.316.268.47.406c.123.11.248.217.365.332c.167.164.323.338.479.512A10.993 10.993 0 1 1 5 16H3a13 13 0 1 0 22.95-8.35z"
                      fill="currentColor" />
            </svg>
            Reset
        </button>
    </div>

    <form id="AccountForm" asp-controller="" asp-action="" class="card-body mt-2">
        <input id="Id" type="hidden" name="Id" value="@Model.Id" />
        <input type="hidden" id="@nameof(Model.UserPassword)" name="@nameof(Model.UserPassword)" value="@Model.UserPassword">

        <div class="p-2 green-card" style="border-radius: 5px;">
            <div class="row custom forest-location">
                <div class="col-6 p-1">
                    @await Html.PartialAsync(
                    "~/Views/Shared/_ForestAdministration.cshtml",
                    (
                    ViewBag.ForestCircleId as SelectList,
                    ViewBag.ForestDivisionId as SelectList,
                    ViewBag.ForestRangeId as SelectList,
                    ViewBag.ForestBeatId as SelectList,
                    ViewBag.ForestFcvVcfId as SelectList
                    )
                    )
                </div>

                <div class="col-6 p-1">
                    @await Html.PartialAsync(
                    "~/Views/Shared/_CivilAdministration.cshtml",
                    (
                    ViewBag.DivisionId as SelectList,
                    ViewBag.DistrictId as SelectList,
                    ViewBag.UpazillaId as SelectList,
                    ViewBag.UnionId as SelectList
                    )
                    )
                </div>
            </div>
        </div>

        <div class="p-2 custom green-card mt-2" style="border-radius: 5px;">
            <fieldset class="p-2 col-12">
                <legend class="float-none w-auto">User Information</legend>
                <div class="row">
                    <div class="col-md-3 col-sm-12 pr-1">
                        <label>
                            User Role
                            <span style="color:red;">*</span>
                        </label>
                        @Html.DropDownList("UserRoleId", null, "Choose..", new { @class = "", @required = "required" })
                    </div>
                    <div class="col-md-3 col-sm-12 px-1">
                        <label for="inputRank">
                            User Full Name
                            <span style="color:red;">*</span>
                        </label>
                        <input type="text" id="UserName" name="UserName" value="@Model.UserName"
                               placeholder="Enter User Name" required>
                    </div>
                    <div class="col-md-3 col-sm-12 px-1">
                        <label>
                            Email
                            <span style="color:red;">*</span>
                        </label>
                        <input type="email" id="UserEmail" name="UserEmail" value="@Model.UserEmail"
                               placeholder="Enter User Email" required>
                    </div>
                    <div class="col-md-3 col-sm-12 pl-1">
                        <label>
                            Account Information
                            <span style="color:red;">*</span>
                        </label>
                        @Html.DropDownList("AccountsId", null, "Choose Account Information", htmlAttributes: new { @class = "form-control col-md-12", @required = "required" })
                    </div>
                </div>
            </fieldset>
        </div>

        <div class="p-2 custom green-card mt-2" style="border-radius: 5px;">
            <fieldset class="p-2 col-12">
                <legend class="float-none w-auto">Accounts Information</legend>
                <div class="row">
                    <div class="col-md-12">
                        <table class="reportTable" id="grid" role="grid" aria-describedby="tableExport_filter_info" style="width: 1018px;">
                            <thead>
                                <tr role="row">
                                    <th class="sorting_asc" tabindex="0" aria-controls="tableExport_filter" rowspan="1" colspan="1" aria-sort="ascending" aria-label="SL: activate to sort column descending" style="min-width: 50px;">SL NO</th>
                                    <th class="sorting" tabindex="0" aria-controls="tableExport_filter" aria-label="Forest Department: activate to sort column ascending" style="min-width: 80px;">Account Number</th>
                                    <th class="sorting" tabindex="0" aria-controls="tableExport_filter" aria-label="Forest Range: activate to sort column ascending" style="min-width: 100px;">Bank Account Name</th>
                                    <th class="sorting" tabindex="0" aria-controls="tableExport_filter" aria-label="Forest Beat: activate to sort column ascending" style="min-width: 95px;">Bank Name</th>
                                    <th class="sorting" tabindex="0" aria-controls="tableExport_filter" aria-label="Name Of FCV: activate to sort column ascending" style="min-width: 100px;">Branch Name</th>
                                    <th class="sorting" tabindex="0" aria-controls="tableExport_filter" aria-label="Total Scheme: activate to sort column ascending" style="min-width: 60px">Account Opening Date</th>
                                    <th class="sorting" tabindex="0" aria-controls="tableExport_filter" aria-label="Name Of Approveld Project / Sub Project: activate to sort column ascending" style="min-width: 50px;">Remarks</th>
                                    <th class="sorting" tabindex="0" aria-controls="tableExport_filter" aria-label="Name Of Approveld Project / Sub Project: activate to sort column ascending" style="min-width: 50px;">Action</th>

                                </tr>
                            </thead>
                            <tbody id="tbodyForAccountsInfo">
                            </tbody>
                        </table>
                    </div>
                </div>
            </fieldset>
        </div>

        <div class="d-flex justify-content-end py-2">
            <button type="button" onclick="submitFormData()" id="userRegister" class="btn btn-sm btn-green save">
                Save
            </button>
        </div>
    </form>
</div>

<script>
    var itemDetails = [];

    $("#userRegister").on("click", function () {
        if ($("#AccountForm").valid()) {
            $(".loader").fadeIn("slow");
        }
    });

    $("#AccountForm").validate({
        // Specify validation rules
        rules: {
            GroupId: "required",
            UserPassword: "required",
            UserName: "required",
            ConfirmPassword: "required",
            UserEmail: "required"
        },
    });
</script>

<script>
    var count = 0;
    $("#AccountsId").on("change", function () {
        var accountsId = $("#AccountsId").val();

        const checkUserId = new URLSearchParams(window.location.search);
        var checkMyUserId = checkUserId.get('id');

        //check member Validetion
        var isUserExist = itemDetails.find(x => x.AccountId == accountsId && x.UserId == checkMyUserId);
        if (count > 1) {
            if (isUserExist !== undefined) {
                alert("Alredy Same User And Account Added!");
                return;
            }
        }

        $.ajax({
            cache: false,
            type: "GET",
            url: "/Account/GetAccountInfoByAccountId",
            data: { "id": accountsId },
            success: function (data) {
                $(".loader").fadeOut("slow");
                var tbodyforAccountsInfo = $("#tbodyForAccountsInfo");
                count++;
                tbodyforAccountsInfo.append(`
                                                                 <tr role="row" class="trClass" data-id="${count}">
                                                                        <td class="Id">${count}</td>
                                                                                <td class="DesignationId">${data.Data.AccountNumber}</td>
                                                                                    <td>${data.Data.BankAccountName}</td>
                                                                                    <td>${data.Data.BankName}</td>
                                                                                    <td>${data.Data.BranchName}</td>
                                                                                    <td>${data.Data.AccountOpeningDate}</td>
                                                                                    <td>${data.Data.Remarks}</td>
                                                                                    <td>
                                                                                        <div>
                                                                                           <button style="background-color:red" class="btn btn-danger btn-sm" onclick="removeItem(${count})">Remove</button>
                                                                                        </div>
                                                                                    </td>
                                                            </tr>
                                                       `);

                //});

                const userId = new URLSearchParams(window.location.search);
                var myUserId = userId.get('id');


                itemDetails.push({
                    //Id: id,
                    Count: count,
                    UserId: myUserId,
                    AccountId: data.Data.Id
                });

            },
            error: function (xhr, ajaxOptions, thrownError) {
                //alert('Failed to retrieve data.');
            }
        });


    });
</script>

<script>
    $(document).ready(function () {
        //disabled start
        document.getElementById("ForestCircleId").disabled = true;
        document.getElementById("ForestDivisionId").disabled = true;
        document.getElementById("ForestRangeId").disabled = true;
        document.getElementById("ForestBeatId").disabled = true;
        document.getElementById("FcvVcfType").disabled = true;
        document.getElementById("ForestFcvVcfId").disabled = true;

        document.getElementById("DivisionId").disabled = true;
        document.getElementById("DistrictId").disabled = true;
        document.getElementById("UpazillaId").disabled = true;
        document.getElementById("UnionId").disabled = true;

        document.getElementById("UserRoleId").disabled = true;
        document.getElementById("UserName").disabled = true;
        document.getElementById("UserEmail").disabled = true;
        //disabled end

        const searchParams = new URLSearchParams(window.location.search);
        var myId = searchParams.get('id');

        $.ajax({
            cache: false,
            type: "GET",
            url: "/Account/GetAccountInformationByFilter",
            data: { "id": myId },
            success: function (data) {

                if (Array.isArray(data.Data)) {
                    var data = data.Data.map(x => {
                        return {
                            id: x.Id,
                            text: x.AccountNumber || x.AccountNumber,
                            branchName: x.BranchName || x.BranchName,
                            bankName: x.BankName,
                        }
                    });
                    data = [{
                        id: "",
                        text: "Choose",
                    }, ...data];
                    $('#AccountsId').empty();

                    var optionTemplate = function (option) {
                        var branchName = option.branchName ? `<span>Branch Name: ${option.branchName}</span>` : '<span>Branch Name:</span>';
                        var bankName = option.bankName ? `<span>Bank Name: ${option.bankName}</span>` : '<span>Bank Name:</span>';

                        return $(
                            `
                                                    <div class="d-flex flex-column _select2_option">
                                                                    <span>Account Number: ${option.text}</span>
                                                                     ${bankName}
                                                                     ${branchName}
                                                    </div>
                                                    `
                        );
                    };

                    var selectionTemplate = function (option) {
                        return $(
                            `<span>Account Number: ${option.text}</span>`
                        );
                    };

                    $('#AccountsId').select2({
                        data,
                        placeholder: 'Select Account Information',
                        templateResult: optionTemplate,
                        templateSelection: selectionTemplate
                    });
                }
            },
            error: function (xhr, ajaxOptions, thrownError) {
            }
        });

        $.ajax({
            cache: false,
            type: "GET",
            url: "/Account/GetBankAccountsInformationByUserId",
            data: { "userId": myId },
            success: function (response) {
                var count = 0;
                var tbodyforAccountsInfo = $("#tbodyForAccountsInfo");

                $("#tbodyForAccountsInfo > tr").remove();
                $.each(response.Data, function (id, option) {
                    count++;
                    tbodyforAccountsInfo.append(`
                                                             <tr role="row" class="trClass" data-id="${option.Id}">
                                                                <td class="Id">${count}</td>
                                                                            <td class="DesignationId">${option.Account.AccountNumber}</td>
                                                                            <td>${option.Account.BankAccountName}</td>
                                                                            <td>${option.Account.BankName}</td>
                                                                            <td>${option.Account.BranchName}</td>
                                                                            <td>${option.Account.AccountOpeningDate}</td>
                                                                            <td>${option.Account.Remarks}</td>
                                                                            <td>
                                                                               <div>
                                                                                      <button style="background-color:red" class="btn btn-danger btn-sm" onclick="deleteItem(${option.Id})">Remove</button>
                                                                                </div>
                                                                            </td>
                                                            </tr>
                                               `);
                });


            },
            error: function (xhr, ajaxOptions, thrownError) {
            }
        });
    });

    function removeItem(id) {
        for (var i = 0; i < itemDetails.length; i++) {
            if (itemDetails[i].Count === id) {
                itemDetails.splice(i, 1);
                //break;
            }
        }
        $(`[data-id=${id}]`).remove();
    }
</script>

<script>
    function submitFormData(event) {

        // Validate
        $("#AccountForm").validate({
            rules: {
                ForestCircleId: "required",
                ForestDivisionId: "required",
                ForestRangeId: "required",
                ForestBeatId: "required",
                ForestFcvVcfId: "required",
                DivisionId: "required",
                DistrictId: "required",
                UpazillaId: "required",
                UnionId: "required",
                FcvVcfType: "required",
                //CommitteeEndDate: {
                //    dateMustBeGreaterThanStart: true
                //},
            }
        });

        var isFormValid = $("#AccountForm").valid();
        if (isFormValid == false) {
            return;
        }

        var formData = new FormData();

        formData.append('Id', $("#Id").val());
        formData.append('ForestCircleId', $("#ForestCircleId").val());
        formData.append('ForestDivisionId', $("#ForestDivisionId").val());
        formData.append('ForestRangeId', $("#ForestRangeId").val());
        formData.append('ForestBeatId', $("#ForestBeatId").val());
        formData.append('ForestFcvVcfId', $("#ForestFcvVcfId").val());
        formData.append('DivisionId', $("#DivisionId").val());
        formData.append('DistrictId', $("#DistrictId").val());
        formData.append('UpazillaId', $("#UpazillaId").val());
        formData.append('UnionId', $("#UnionId").val());
        formData.append('FcvVcfType', $("#FcvVcfType").val());
        formData.append('UserRoleId', $("#UserRoleId").val());
        formData.append('UserName', $("#UserName").val());
        formData.append('UserEmail', $("#UserEmail").val());
        formData.append('UserPassword', $("#UserPassword").val());

        var AccountsInformations = itemDetails.filter(Boolean);
        formData.append('AccountsInformationsJson', JSON.stringify(AccountsInformations));

        $.ajax({
            type: "POST",
            url: "/Account/UserMapToAccount",
            data: formData,
            cache: false,
            contentType: false,
            processData: false,
            dataType: 'json',
            success: function (response) {
                $(".loader").fadeOut("slow");
                debugger;

                if (response.Success)
                {
                    window.location.href = "/Account/UserLists";
                    return;
                }

                swal(
                    'Error occurred',
                    response.Message,
                    'error'
                );
            }
        });
    }
</script>

<script>
    function deleteItem(id) {
        $.ajax({
            cache: false,
            type: "GET",
            url: "/Account/DeleteByBankAccountsInformationId",
            data: { "id": id },
            success: function (data) {
                $("#grid tbody").find(`tr[data-id=${data.Data.Id}]`).remove();
                alert("Successfully Deleted!");
            },
            error: function (xhr, ajaxOptions, thrownError) {

            }
        });
    }
</script>