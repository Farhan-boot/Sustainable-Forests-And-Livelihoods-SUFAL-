// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PTSL.GENERIC.Common.Entity;

namespace PTSL.GENERIC.Api.Migrations
{
    [DbContext(typeof(GENERICWriteOnlyCtx))]
    [Migration("20221219062942_communitytrainningupdated")]
    partial class communitytrainningupdated
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.AccessMapper", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("AccessList")
                        .IsRequired()
                        .HasColumnName("AccessList")
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<byte>("IsVisible")
                        .HasColumnName("IsVisible")
                        .HasColumnType("smallint");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<byte>("RoleStatus")
                        .HasColumnName("RoleStatus")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.ToTable("AccessMapper","System");
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Accesslist", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<byte>("AccessStatus")
                        .HasColumnName("AccessStatus")
                        .HasColumnType("smallint");

                    b.Property<string>("ActionName")
                        .IsRequired()
                        .HasColumnName("ActionName")
                        .HasColumnType("varchar(500)");

                    b.Property<int>("BaseModule")
                        .HasColumnName("BaseModule")
                        .HasColumnType("int");

                    b.Property<int?>("BaseModuleIndex")
                        .HasColumnName("BaseModuleIndex")
                        .HasColumnType("int");

                    b.Property<string>("ControllerName")
                        .IsRequired()
                        .HasColumnName("ControllerName")
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("IconClass")
                        .IsRequired()
                        .HasColumnName("IconClass")
                        .HasColumnType("varchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<byte>("IsVisible")
                        .HasColumnName("IsVisible")
                        .HasColumnType("smallint");

                    b.Property<string>("Mask")
                        .IsRequired()
                        .HasColumnName("Mask")
                        .HasColumnType("varchar(500)");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.ToTable("Accesslist","System");
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Beneficiary.AnnualHouseholdExpenditure", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<double>("ExpenditureCost")
                        .HasColumnType("double precision");

                    b.Property<string>("ExpenditureRemarks")
                        .HasColumnType("varchar(500)");

                    b.Property<long?>("ExpenditureTypeId")
                        .HasColumnType("bigint");

                    b.Property<string>("ExpenditureTypeTxt")
                        .HasColumnType("varchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("SurveyId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.HasIndex("ExpenditureTypeId");

                    b.HasIndex("SurveyId");

                    b.ToTable("AnnualHouseholdExpenditures","BEN");
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Beneficiary.Asset", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<double>("AssetQuantity")
                        .HasColumnType("double precision");

                    b.Property<long>("AssetTypeId")
                        .HasColumnType("bigint");

                    b.Property<string>("AssetTypeTxt")
                        .HasColumnType("varchar(500)");

                    b.Property<double>("AssetsCost")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("SurveyId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.HasIndex("AssetTypeId");

                    b.HasIndex("SurveyId");

                    b.ToTable("Assets","BEN");
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Beneficiary.AssetType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("NameBn")
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.ToTable("AssetTypes","BEN");
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Beneficiary.BFDAssociation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("NameBn")
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.ToTable("BFDAssociations","BEN");
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Beneficiary.BFDAssociationHouseholdMembersMap", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long>("BFDAssociationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("HouseholdMemberId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.HasIndex("BFDAssociationId");

                    b.HasIndex("HouseholdMemberId");

                    b.ToTable("BFDAssociationHouseholdMembersMaps","BEN");
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Beneficiary.Business", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<double>("BusinessGrossValueOfSales")
                        .HasColumnType("double precision");

                    b.Property<long?>("BusinessIncomeSourceTypeId")
                        .HasColumnType("bigint");

                    b.Property<string>("BusinessIncomeSourceTypeTxt")
                        .HasColumnType("varchar(500)");

                    b.Property<double>("BusinessTotalCashCosts")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("SurveyId")
                        .HasColumnType("bigint");

                    b.Property<double>("TotalNetIncome")
                        .HasColumnType("double precision");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.HasIndex("BusinessIncomeSourceTypeId");

                    b.HasIndex("SurveyId");

                    b.ToTable("Businesss","BEN");
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Beneficiary.BusinessIncomeSourceType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("NameBn")
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.ToTable("BusinessIncomeSourceTypes","BEN");
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Beneficiary.DisabilityType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("NameBn")
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.ToTable("DisabilityTypes","BEN");
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Beneficiary.DisabilityTypeHouseholdMembersMap", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("DisabilityTypeId")
                        .HasColumnType("bigint");

                    b.Property<long>("HouseholdMemberId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.HasIndex("DisabilityTypeId");

                    b.HasIndex("HouseholdMemberId");

                    b.ToTable("DisabilityTypeHouseholdMembersMaps","BEN");
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Beneficiary.EnergyType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("NameBn")
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.ToTable("EnergyTypes","BEN");
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Beneficiary.EnergyUse", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("EnergyTypeId")
                        .HasColumnType("bigint");

                    b.Property<string>("EnergyUseTypeTxt")
                        .HasColumnType("varchar(500)");

                    b.Property<double>("EnergyUsesMonthly")
                        .HasColumnType("double precision");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("SurveyId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.HasIndex("EnergyTypeId");

                    b.HasIndex("SurveyId");

                    b.ToTable("EnergyUses","BEN");
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Beneficiary.Ethnicity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("NameBn")
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.ToTable("Ethnicitys","BEN");
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Beneficiary.ExistingSkill", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Remarks")
                        .HasColumnType("varchar(500)");

                    b.Property<short?>("SkillLevelEnum")
                        .HasColumnType("smallint");

                    b.Property<string>("SkillName")
                        .HasColumnType("varchar(500)");

                    b.Property<long>("SurveyId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.HasIndex("SurveyId");

                    b.ToTable("ExistingSkills","BEN");
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Beneficiary.ExpenditureType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("NameBn")
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.ToTable("ExpenditureTypes","BEN");
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Beneficiary.FoodItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("NameBn")
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.ToTable("FoodItems","BEN");
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Beneficiary.FoodSecurityItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<double>("FoodAvilableMonthInYear")
                        .HasColumnType("double precision");

                    b.Property<long>("FoodItemId")
                        .HasColumnType("bigint");

                    b.Property<string>("FoodItemTxt")
                        .HasColumnType("varchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Remarks")
                        .HasColumnType("varchar(500)");

                    b.Property<long>("SurveyId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.HasIndex("FoodItemId");

                    b.HasIndex("SurveyId");

                    b.ToTable("FoodSecurityItems","BEN");
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Beneficiary.ForestBeat", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("ForestRangeId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("NameBn")
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.HasIndex("ForestRangeId");

                    b.ToTable("ForestBeats","BEN");
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Beneficiary.ForestCircle", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("NameBn")
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.ToTable("ForestCircles","BEN");
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Beneficiary.ForestDivision", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("ForestCircleId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("NameBn")
                        .HasColumnType("varchar(500)");

                    b.Property<long?>("NgoId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.HasIndex("ForestCircleId");

                    b.HasIndex("NgoId");

                    b.ToTable("ForestDivisions","BEN");
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Beneficiary.ForestFcvVcf", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("ForestBeatId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("NameBn")
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.HasIndex("ForestBeatId");

                    b.ToTable("ForestFcvVcfs","BEN");
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Beneficiary.ForestRange", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("ForestDivisionId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("NameBn")
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.HasIndex("ForestDivisionId");

                    b.ToTable("ForestRanges","BEN");
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Beneficiary.GrossMarginIncomeAndCostStatus", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<double>("LandArea")
                        .HasColumnType("double precision");

                    b.Property<string>("MeasurementOfProduct")
                        .HasColumnType("varchar(500)");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("ProductName")
                        .HasColumnType("varchar(500)");

                    b.Property<double>("ProductionValueSoldPerQuantity")
                        .HasColumnType("double precision");

                    b.Property<double>("QuantitySold")
                        .HasColumnType("double precision");

                    b.Property<long>("SurveyId")
                        .HasColumnType("bigint");

                    b.Property<double>("TotalConsumption")
                        .HasColumnType("double precision");

                    b.Property<double>("TotalCostOfProduction")
                        .HasColumnType("double precision");

                    b.Property<double>("TotalNetIncome")
                        .HasColumnType("double precision");

                    b.Property<double>("TotalProductionHousehold")
                        .HasColumnType("double precision");

                    b.Property<double>("TotalValueSold")
                        .HasColumnType("double precision");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.Property<double>("ValueSoldPerQuantity")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("SurveyId");

                    b.ToTable("GrossMarginIncomeAndCostStatuses","BEN");
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Beneficiary.HouseholdMember", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Age")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("AgeBn")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("BFDAssociationTxt")
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<short>("EducationLevel")
                        .HasColumnType("smallint");

                    b.Property<string>("FullName")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("FullNameBn")
                        .HasColumnType("varchar(500)");

                    b.Property<short>("Gender")
                        .HasColumnType("smallint");

                    b.Property<bool>("HasDisability")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long>("MainOccupationId")
                        .HasColumnType("bigint");

                    b.Property<string>("MainOccupationTxt")
                        .HasColumnType("varchar(500)");

                    b.Property<short>("MaritalSatus")
                        .HasColumnType("smallint");

                    b.Property<string>("MaritalSatusTxt")
                        .HasColumnType("varchar(100)");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Notes")
                        .HasColumnType("varchar(500)");

                    b.Property<long>("RelationWithHeadHouseHoldTypeId")
                        .HasColumnType("bigint");

                    b.Property<string>("RelationWithHeadHouseHoldTypeTxt")
                        .HasColumnType("varchar(500)");

                    b.Property<long>("SafetyNetTypeId")
                        .HasColumnType("bigint");

                    b.Property<string>("SafetyNetTypeTxt")
                        .HasColumnType("text");

                    b.Property<string>("SecondOccupationTxt")
                        .HasColumnType("varchar(500)");

                    b.Property<long>("SecondaryOccupationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("SubmissionTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("SubmittedBy")
                        .HasColumnType("varchar(500)");

                    b.Property<long>("SurveyId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.HasIndex("MainOccupationId");

                    b.HasIndex("RelationWithHeadHouseHoldTypeId");

                    b.HasIndex("SafetyNetTypeId");

                    b.HasIndex("SecondaryOccupationId");

                    b.HasIndex("SurveyId");

                    b.ToTable("HouseholdMembers","BEN");
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Beneficiary.ImmovableAsset", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<double>("ImmovableAnnualReturn")
                        .HasColumnType("double precision");

                    b.Property<long>("ImmovableAssetTypeId")
                        .HasColumnType("bigint");

                    b.Property<string>("ImmovableAssetsTypeTxt")
                        .HasColumnType("varchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("SurveyId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.HasIndex("ImmovableAssetTypeId");

                    b.HasIndex("SurveyId");

                    b.ToTable("ImmovableAssets","BEN");
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Beneficiary.ImmovableAssetType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("NameBn")
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.ToTable("ImmovableAssetTypes","BEN");
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Beneficiary.LandOccupancy", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<double>("FallowLand")
                        .HasColumnType("double precision");

                    b.Property<double>("FallowWetland")
                        .HasColumnType("double precision");

                    b.Property<double>("Homesteads")
                        .HasColumnType("double precision");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<short>("LandClassificationEnum")
                        .HasColumnType("smallint");

                    b.Property<string>("LandClassificationTxt")
                        .HasColumnType("varchar(500)");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Notes")
                        .HasColumnType("varchar(500)");

                    b.Property<double>("OthersLand")
                        .HasColumnType("double precision");

                    b.Property<double>("ProductiveLand")
                        .HasColumnType("double precision");

                    b.Property<double>("ProductiveWetland")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("SubmissionTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("SurveyId")
                        .HasColumnType("bigint");

                    b.Property<double>("TotalLand")
                        .HasColumnType("double precision");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.HasIndex("SurveyId");

                    b.ToTable("LandOccupancies","BEN");
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Beneficiary.LiveStock", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<double>("LiveStockQuantity")
                        .HasColumnType("double precision");

                    b.Property<long>("LiveStockTypeId")
                        .HasColumnType("bigint");

                    b.Property<double>("LivestockCost")
                        .HasColumnType("double precision");

                    b.Property<string>("LivestockTypeTxt")
                        .HasColumnType("varchar(500)");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("SurveyId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.HasIndex("LiveStockTypeId");

                    b.HasIndex("SurveyId");

                    b.ToTable("LiveStocks","BEN");
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Beneficiary.LiveStockType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("NameBn")
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.ToTable("LiveStockTypes","BEN");
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Beneficiary.ManualIncomeSourceType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("NameBn")
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.ToTable("ManualIncomeSourceTypes","BEN");
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Beneficiary.ManualPhysicalWork", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<double>("AvgDailyIncome")
                        .HasColumnType("double precision");

                    b.Property<int>("AvgNoPersonActivePerMonth")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("ManualIncomeSourceTypeId")
                        .HasColumnType("bigint");

                    b.Property<string>("ManualIncomeSourceTypeTxt")
                        .HasColumnType("varchar(500)");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<int>("NoOfActiveMonth")
                        .HasColumnType("integer");

                    b.Property<int>("NoOfFemale")
                        .HasColumnType("integer");

                    b.Property<int>("NoOfMale")
                        .HasColumnType("integer");

                    b.Property<long>("SurveyId")
                        .HasColumnType("bigint");

                    b.Property<double>("TotalAnnualIncome")
                        .HasColumnType("double precision");

                    b.Property<double>("TotalPerson")
                        .HasColumnType("double precision");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.HasIndex("ManualIncomeSourceTypeId");

                    b.HasIndex("SurveyId");

                    b.ToTable("ManualPhysicalWorks","BEN");
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Beneficiary.Marketing", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<long?>("DistrictId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DivisionId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("MarketingName")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("MarketingNameBn")
                        .HasColumnType("varchar(500)");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.HasIndex("DivisionId");

                    b.ToTable("Marketings","Marketing");
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Beneficiary.NaturalIncomeSourceType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("NameBn")
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.ToTable("NaturalIncomeSourceTypes","BEN");
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Beneficiary.NaturalResourcesIncomeAndCostStatus", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<double>("ActivityPerValueSold")
                        .HasColumnType("double precision");

                    b.Property<double>("AvgNoPersonActivePerMonth")
                        .HasColumnType("double precision");

                    b.Property<double>("CostOfActivity")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<long?>("NaturalIncomeSourceTypeId")
                        .HasColumnType("bigint");

                    b.Property<int>("NoOfActiveMonth")
                        .HasColumnType("integer");

                    b.Property<int>("NoOfFemale")
                        .HasColumnType("integer");

                    b.Property<int>("NoOfMale")
                        .HasColumnType("integer");

                    b.Property<double>("ProducedValueSoldActivity")
                        .HasColumnType("double precision");

                    b.Property<double>("QuantitySold")
                        .HasColumnType("double precision");

                    b.Property<long>("SurveyId")
                        .HasColumnType("bigint");

                    b.Property<double>("TotalConsumption")
                        .HasColumnType("double precision");

                    b.Property<double>("TotalManDaysForCollection")
                        .HasColumnType("double precision");

                    b.Property<double>("TotalNetIncome")
                        .HasColumnType("double precision");

                    b.Property<double>("TotalProduced")
                        .HasColumnType("double precision");

                    b.Property<string>("Unit")
                        .HasColumnType("varchar(80)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.Property<double>("ValueProduceSold")
                        .HasColumnType("double precision");

                    b.Property<double>("ValueSoldPerActivity")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("NaturalIncomeSourceTypeId");

                    b.HasIndex("SurveyId");

                    b.ToTable("NaturalResourcesIncomeAndCostStatuses","BEN");
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Beneficiary.Ngo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("NameBn")
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.ToTable("Ngos","BEN");
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Beneficiary.Occupation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("NameBn")
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.ToTable("Occupations","BEN");
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Beneficiary.OtherIncomeSource", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<double>("GrossValueOfSales")
                        .HasColumnType("double precision");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<long?>("OtherIncomeSourceTypeId")
                        .HasColumnType("bigint");

                    b.Property<string>("OtherIncomeSourceTypeTxt")
                        .HasColumnType("varchar(500)");

                    b.Property<long>("SurveyId")
                        .HasColumnType("bigint");

                    b.Property<double>("TotalCashCosts")
                        .HasColumnType("double precision");

                    b.Property<double>("TotalNetIncome")
                        .HasColumnType("double precision");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.HasIndex("OtherIncomeSourceTypeId");

                    b.HasIndex("SurveyId");

                    b.ToTable("OtherIncomeSources","BEN");
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Beneficiary.OtherIncomeSourceType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("NameBn")
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.ToTable("OtherIncomeSourceTypes","BEN");
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Beneficiary.RelationWithHeadHouseHoldType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("NameBn")
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.ToTable("RelationWithHeadHouseHoldTypes","BEN");
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Beneficiary.SafetyNet", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("NameBn")
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.ToTable("SafetyNets","BEN");
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Beneficiary.Survey", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<short>("AccessorToCreditGender")
                        .HasColumnType("smallint");

                    b.Property<string>("BeneficiaryAge")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("BeneficiaryAgeBn")
                        .HasColumnType("varchar(100)");

                    b.Property<double?>("BeneficiaryAltitude")
                        .HasColumnType("double precision");

                    b.Property<int>("BeneficiaryApproveStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(1);

                    b.Property<long?>("BeneficiaryEthnicityId")
                        .HasColumnType("bigint");

                    b.Property<string>("BeneficiaryEthnicityTxt")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("BeneficiaryFatherName")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("BeneficiaryFatherNameBn")
                        .HasColumnType("varchar(500)");

                    b.Property<short>("BeneficiaryGender")
                        .HasColumnType("smallint");

                    b.Property<string>("BeneficiaryHouseFrontImage")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("BeneficiaryHouseFrontImageURL")
                        .HasColumnType("varchar(500)");

                    b.Property<int>("BeneficiaryHouseType")
                        .HasColumnType("integer");

                    b.Property<string>("BeneficiaryHouseholdSerialNo")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("BeneficiaryId")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<double?>("BeneficiaryLatitude")
                        .HasColumnType("double precision");

                    b.Property<double?>("BeneficiaryLongitude")
                        .HasColumnType("double precision");

                    b.Property<string>("BeneficiaryMotherName")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("BeneficiaryMotherNameBn")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("BeneficiaryName")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("BeneficiaryNameBn")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("BeneficiaryNid")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("BeneficiaryPhone")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("BeneficiaryPhoneBn")
                        .HasColumnType("varchar(100)");

                    b.Property<double?>("BeneficiaryPrecision")
                        .HasColumnType("double precision");

                    b.Property<string>("BeneficiarySpouseName")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("BeneficiarySpouseNameBn")
                        .HasColumnType("varchar(500)");

                    b.Property<double>("BorrowedFromBank")
                        .HasColumnType("double precision");

                    b.Property<double>("BorrowedFromCoOperatives")
                        .HasColumnType("double precision");

                    b.Property<double>("BorrowedFromNGO")
                        .HasColumnType("double precision");

                    b.Property<double>("BorrowedFromNonRelatives")
                        .HasColumnType("double precision");

                    b.Property<double>("BorrowedFromRelatives")
                        .HasColumnType("double precision");

                    b.Property<bool?>("CanAccessLegalSupportForGbv")
                        .HasColumnType("boolean");

                    b.Property<bool?>("CanUnsufructsRights")
                        .HasColumnType("boolean");

                    b.Property<string>("CellPhoneNumber")
                        .HasColumnType("varchar(100)");

                    b.Property<short>("ControllerOfCreditGender")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<short>("CropTypeDecisionGender")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("DataCollectionDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<short>("DecisionToTransferAssetsGender")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("DetailsInfo")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Deviceid")
                        .HasColumnType("varchar(500)");

                    b.Property<short>("DicisionTakerEnum")
                        .HasColumnType("smallint");

                    b.Property<short>("EducationalInstituteAccessibilityEnum")
                        .HasColumnType("smallint");

                    b.Property<double>("EducationalInstituteDistance")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool?>("FaceLiveAndLivelihoodChallanges")
                        .HasColumnType("boolean");

                    b.Property<short>("FamilyNeedsDeciderGender")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("FoodCrisisMonth")
                        .HasColumnType("timestamp without time zone");

                    b.Property<short?>("FoodyPersonInFoodCrisis")
                        .HasColumnType("smallint");

                    b.Property<long>("ForestBeatId")
                        .HasColumnType("bigint");

                    b.Property<long>("ForestCircleId")
                        .HasColumnType("bigint");

                    b.Property<short>("ForestDependencyEnum")
                        .HasColumnType("smallint");

                    b.Property<long>("ForestDivisionId")
                        .HasColumnType("bigint");

                    b.Property<long>("ForestFcvVcfId")
                        .HasColumnType("bigint");

                    b.Property<short>("ForestMngmtEffectivenessEnum")
                        .HasColumnType("smallint");

                    b.Property<short>("ForestMngmtSatisfactionEnum")
                        .HasColumnType("smallint");

                    b.Property<long>("ForestRangeId")
                        .HasColumnType("bigint");

                    b.Property<string>("ForestVillageName")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("ForestVillageNameBn")
                        .HasColumnType("varchar(500)");

                    b.Property<double>("GrandTotalAnnualPhysicalIncome")
                        .HasColumnType("double precision");

                    b.Property<double>("GrandTotalAssetsCost")
                        .HasColumnType("double precision");

                    b.Property<double>("GrandTotalBusinessIncome")
                        .HasColumnType("double precision");

                    b.Property<double>("GrandTotalEnergyUsesMonthly")
                        .HasColumnType("double precision");

                    b.Property<double>("GrandTotalGrossMarginAgriculture")
                        .HasColumnType("double precision");

                    b.Property<double>("GrandTotalHouseholdExpenditure")
                        .HasColumnType("double precision");

                    b.Property<double>("GrandTotalImmovableAnnualReturn")
                        .HasColumnType("double precision");

                    b.Property<double>("GrandTotalLandArea")
                        .HasColumnType("double precision");

                    b.Property<double>("GrandTotalLandOccupancy")
                        .HasColumnType("double precision");

                    b.Property<double>("GrandTotalLivestockCost")
                        .HasColumnType("double precision");

                    b.Property<double>("GrandTotalNetIncomeAgriculture")
                        .HasColumnType("double precision");

                    b.Property<double>("GrandTotalOtherIncome")
                        .HasColumnType("double precision");

                    b.Property<double>("GrandTotalWildResourceIncome")
                        .HasColumnType("double precision");

                    b.Property<double>("GrantsFromGob")
                        .HasColumnType("double precision");

                    b.Property<double>("GrantsFromNGO")
                        .HasColumnType("double precision");

                    b.Property<bool>("HasEducationalInstituteNearby")
                        .HasColumnType("boolean");

                    b.Property<bool?>("HasLlfmInterest")
                        .HasColumnType("boolean");

                    b.Property<short?>("HeadOfHouseholdGender")
                        .HasColumnType("smallint");

                    b.Property<string>("HeadOfHouseholdName")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("HeadOfHouseholdNameBn")
                        .HasColumnType("varchar(500)");

                    b.Property<double>("HouseShareInSavings")
                        .HasColumnType("double precision");

                    b.Property<short?>("HouseholdFoodCondition")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHearedAboutCfm")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsParticipatedInCfm")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPermanentSameAsPresent")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsProblemToAccessDrinkingWater")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsProblemToAccessEducation")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsProblemToAccessHealthService")
                        .HasColumnType("boolean");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<short>("MorePaymentGetterGender")
                        .HasColumnType("smallint");

                    b.Property<string>("NameOfTheEnumerator")
                        .HasColumnType("varchar(500)");

                    b.Property<double>("NearestDrinkingWaterDistance")
                        .HasColumnType("double precision");

                    b.Property<string>("NearestGrowthCenter")
                        .HasColumnType("varchar(500)");

                    b.Property<double>("NearestGrowthCenterDistance")
                        .HasColumnType("double precision");

                    b.Property<double>("NearestHealthServiceDistance")
                        .HasColumnType("double precision");

                    b.Property<string>("NearestHealthServiceLocation")
                        .HasColumnType("varchar(500)");

                    b.Property<int>("NoOfFemaleInsideCountry")
                        .HasColumnType("integer");

                    b.Property<int>("NoOfFemaleOutsideCountry")
                        .HasColumnType("integer");

                    b.Property<int>("NoOfMaleInsideCountry")
                        .HasColumnType("integer");

                    b.Property<int>("NoOfMaleOutsideCountry")
                        .HasColumnType("integer");

                    b.Property<string>("NotesImage")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("NotesImageUrl")
                        .HasColumnType("varchar(500)");

                    b.Property<short>("OfficeBearerGender")
                        .HasColumnType("smallint");

                    b.Property<double>("OtherFinanceAmount")
                        .HasColumnType("double precision");

                    b.Property<string>("OtherFinanceName")
                        .HasColumnType("varchar(500)");

                    b.Property<long?>("PermanentDistrictId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PermanentDivisionId")
                        .HasColumnType("bigint");

                    b.Property<string>("PermanentPostOfficeName")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("PermanentPostOfficeNameBn")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("PermanentUnion")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("PermanentUnionBn")
                        .HasColumnType("varchar(500)");

                    b.Property<long?>("PermanentUpazillaId")
                        .HasColumnType("bigint");

                    b.Property<string>("PermanentVillageName")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("PermanentVillageNameBn")
                        .HasColumnType("varchar(500)");

                    b.Property<double>("PersonalSavingsOfAllMembers")
                        .HasColumnType("double precision");

                    b.Property<string>("Phonenumber")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PotentialSkillName1")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("PotentialSkillName2")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("PotentialSkillName3")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("PotentialSkillsRemarks")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("PotentialSpecialSkill")
                        .HasColumnType("varchar(500)");

                    b.Property<long>("PresentDistrictId")
                        .HasColumnType("bigint");

                    b.Property<long>("PresentDivisionId")
                        .HasColumnType("bigint");

                    b.Property<string>("PresentPostOfficeName")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("PresentPostOfficeNameBn")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("PresentUnion")
                        .HasColumnType("varchar(500)");

                    b.Property<long>("PresentUpazillaId")
                        .HasColumnType("bigint");

                    b.Property<string>("PresentVillageName")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("PresentVillageNameBn")
                        .HasColumnType("varchar(500)");

                    b.Property<short>("ProductiveAssetsOwnerGender")
                        .HasColumnType("smallint");

                    b.Property<double>("SaleOfProducts")
                        .HasColumnType("double precision");

                    b.Property<short>("SanitationFacilitiesEnum")
                        .HasColumnType("smallint");

                    b.Property<double>("SentIncomeOfFemaleInYearInsideCountry")
                        .HasColumnType("double precision");

                    b.Property<double>("SentIncomeOfFemaleInYearOutsideCountry")
                        .HasColumnType("double precision");

                    b.Property<double>("SentIncomeOfMaleInYearInsideCountry")
                        .HasColumnType("double precision");

                    b.Property<double>("SentIncomeOfMaleInYearOutsideCountry")
                        .HasColumnType("double precision");

                    b.Property<string>("Simserial")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("SourceofDrySeasonWaterEnumList")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("SourceofDrySeasonWaterTxt")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("SourceofWetSeasonWaterEnumList")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("SourceofWetSeasonWaterTxt")
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Subscriberid")
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("SurveyDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.Property<bool>("WillCfmImproveForestMngmnt")
                        .HasColumnType("boolean");

                    b.Property<bool>("WillCfmImproveWellBeing")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("BeneficiaryEthnicityId");

                    b.HasIndex("ForestBeatId");

                    b.HasIndex("ForestCircleId");

                    b.HasIndex("ForestDivisionId");

                    b.HasIndex("ForestFcvVcfId");

                    b.HasIndex("ForestRangeId");

                    b.HasIndex("PermanentDistrictId");

                    b.HasIndex("PermanentDivisionId");

                    b.HasIndex("PermanentUpazillaId");

                    b.HasIndex("PresentDistrictId");

                    b.HasIndex("PresentDivisionId");

                    b.HasIndex("PresentUpazillaId");

                    b.ToTable("Surveys","BEN");
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Beneficiary.VulnerabilitySituation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("EventName")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("HowDidRecover")
                        .HasColumnType("varchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<double?>("MonetaryLoss")
                        .HasColumnType("double precision");

                    b.Property<string>("Remarks")
                        .HasColumnType("varchar(500)");

                    b.Property<long>("SurveyId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.Property<long?>("VulnerabilitySituationTypeId")
                        .HasColumnType("bigint");

                    b.Property<string>("VulnerabilitySituationTypeTxt")
                        .HasColumnType("varchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("SurveyId");

                    b.HasIndex("VulnerabilitySituationTypeId");

                    b.ToTable("VulnerabilitySituations","BEN");
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Beneficiary.VulnerabilitySituationType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("NameBn")
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.ToTable("VulnerabilitySituationTypes","BEN");
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Capacity.CommunityTraining", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long?>("CommunityTrainingTypeId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("DistrictId")
                        .HasColumnType("bigint");

                    b.Property<long>("DivisionId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("EventTypeId")
                        .HasColumnType("bigint");

                    b.Property<long>("ForestBeatId")
                        .HasColumnType("bigint");

                    b.Property<long>("ForestCircleId")
                        .HasColumnType("bigint");

                    b.Property<long>("ForestDivisionId")
                        .HasColumnType("bigint");

                    b.Property<long>("ForestFcvVcfId")
                        .HasColumnType("bigint");

                    b.Property<long>("ForestRangeId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Location")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("LocationBn")
                        .HasColumnType("varchar(500)");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("TrainerName")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("TrainingDuration")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<long>("TrainingOrganizerId")
                        .HasColumnType("bigint");

                    b.Property<string>("TrainingTitle")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("TrainingTitleBn")
                        .HasColumnType("varchar(500)");

                    b.Property<long>("UpazillaId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.HasIndex("CommunityTrainingTypeId");

                    b.HasIndex("DistrictId");

                    b.HasIndex("DivisionId");

                    b.HasIndex("EventTypeId");

                    b.HasIndex("ForestBeatId");

                    b.HasIndex("ForestCircleId");

                    b.HasIndex("ForestDivisionId");

                    b.HasIndex("ForestFcvVcfId");

                    b.HasIndex("ForestRangeId");

                    b.HasIndex("TrainingOrganizerId");

                    b.HasIndex("UpazillaId");

                    b.ToTable("CommunityTrainings","Capacity");
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Capacity.CommunityTrainingFile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long>("CommunityTrainingId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("FileName")
                        .HasColumnType("text");

                    b.Property<string>("FileNameUrl")
                        .HasColumnType("text");

                    b.Property<int>("FileType")
                        .HasColumnType("integer");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.HasIndex("CommunityTrainingId");

                    b.ToTable("CommunityTrainingFiles","Capacity");
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Capacity.CommunityTrainingMember", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("MemberAddress")
                        .HasColumnType("varchar(800)");

                    b.Property<int>("MemberAge")
                        .HasColumnType("integer");

                    b.Property<int>("MemberGender")
                        .HasColumnType("integer");

                    b.Property<string>("MemberName")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<string>("MemberPhoneNumber")
                        .HasColumnType("varchar(30)");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.ToTable("CommunityTrainingMembers","Capacity");
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Capacity.CommunityTrainingParticipentsMap", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long>("CommunityTrainingId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CommunityTrainingMemberId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<int>("ParticipentType")
                        .HasColumnType("integer");

                    b.Property<long?>("SurveyId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.HasIndex("CommunityTrainingId");

                    b.HasIndex("CommunityTrainingMemberId");

                    b.HasIndex("SurveyId");

                    b.ToTable("CommunityTrainingParticipentsMaps","Capacity");
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Capacity.CommunityTrainingType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("NameBn")
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.ToTable("CommunityTrainingTypes","Capacity");
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Capacity.DepartmentalTraining", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<long?>("DepartmentalTrainingTypeId")
                        .HasColumnType("bigint");

                    b.Property<long>("DistrictId")
                        .HasColumnType("bigint");

                    b.Property<long>("DivisionId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("EventTypeId")
                        .HasColumnType("bigint");

                    b.Property<long>("ForestBeatId")
                        .HasColumnType("bigint");

                    b.Property<long>("ForestCircleId")
                        .HasColumnType("bigint");

                    b.Property<long>("ForestDivisionId")
                        .HasColumnType("bigint");

                    b.Property<long>("ForestFcvVcfId")
                        .HasColumnType("bigint");

                    b.Property<long>("ForestRangeId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Location")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("LocationBn")
                        .HasColumnType("varchar(500)");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("TrainerName")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("TrainingDuration")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<long>("TrainingOrganizerId")
                        .HasColumnType("bigint");

                    b.Property<string>("TrainingTitle")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("TrainingTitleBn")
                        .HasColumnType("varchar(500)");

                    b.Property<long>("UpazillaId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentalTrainingTypeId");

                    b.HasIndex("DistrictId");

                    b.HasIndex("DivisionId");

                    b.HasIndex("EventTypeId");

                    b.HasIndex("ForestBeatId");

                    b.HasIndex("ForestCircleId");

                    b.HasIndex("ForestDivisionId");

                    b.HasIndex("ForestFcvVcfId");

                    b.HasIndex("ForestRangeId");

                    b.HasIndex("TrainingOrganizerId");

                    b.HasIndex("UpazillaId");

                    b.ToTable("DepartmentalTrainings","Capacity");
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Capacity.DepartmentalTrainingFile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("DepartmentalTrainingId")
                        .HasColumnType("bigint");

                    b.Property<string>("FileName")
                        .HasColumnType("text");

                    b.Property<string>("FileNameUrl")
                        .HasColumnType("text");

                    b.Property<int>("FileType")
                        .HasColumnType("integer");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentalTrainingId");

                    b.ToTable("DepartmentalTrainingFiles","Capacity");
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Capacity.DepartmentalTrainingMember", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("MemberDesignation")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("MemberEmail")
                        .HasColumnType("varchar(200)");

                    b.Property<int>("MemberGender")
                        .HasColumnType("integer");

                    b.Property<string>("MemberNID")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("MemberName")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<string>("MemberOrganization")
                        .HasColumnType("varchar(800)");

                    b.Property<string>("MemberPhoneNumber")
                        .HasColumnType("varchar(30)");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.ToTable("DepartmentalTrainingMembers","Capacity");
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Capacity.DepartmentalTrainingParticipentsMap", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("DepartmentalTrainingId")
                        .HasColumnType("bigint");

                    b.Property<long>("DepartmentalTrainingMemberId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentalTrainingId");

                    b.HasIndex("DepartmentalTrainingMemberId");

                    b.ToTable("DepartmentalTrainingParticipentsMaps","Capacity");
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Capacity.DepartmentalTrainingType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("NameBn")
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.ToTable("DepartmentalTrainingTypes","Capacity");
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Capacity.EventType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("HasTrainingType")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("NameBn")
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.ToTable("EventTypes","Capacity");
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Capacity.TrainingOrganizer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("NameBn")
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.ToTable("TrainingOrganizers","Capacity");
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.GeneralSetup.Category", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnName("CategoryName")
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.ToTable("Category","GS");
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.GeneralSetup.Color", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ColorName")
                        .IsRequired()
                        .HasColumnName("ColorName")
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.ToTable("Color","GS");
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.GeneralSetup.District", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("DivisionId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<string>("NameBn")
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.HasIndex("DivisionId");

                    b.ToTable("District","GS");
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.GeneralSetup.Division", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("DivisionName")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("NameBn")
                        .HasColumnName("DivisionNameBangla")
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.ToTable("Division","GS");
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.GeneralSetup.Union", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("NameBn")
                        .HasColumnType("varchar(500)");

                    b.Property<long>("UpazillaId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.HasIndex("UpazillaId");

                    b.ToTable("Union","GS");
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.GeneralSetup.Upazilla", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("DistrictId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("NameBn")
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.ToTable("Upazilla","GS");
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Module", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<byte>("IsVisible")
                        .HasColumnType("smallint");

                    b.Property<int?>("MenueOrder")
                        .IsRequired()
                        .HasColumnName("MenueOrder")
                        .HasColumnType("int");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("ModuleIcon")
                        .IsRequired()
                        .HasColumnName("ModuleIcon")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("ModuleName")
                        .IsRequired()
                        .HasColumnName("ModuleName")
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.ToTable("Module","System");
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.PmsGroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("GroupDescription")
                        .IsRequired()
                        .HasColumnName("GroupDescription")
                        .HasColumnType("varchar(250)");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnName("GroupName")
                        .HasColumnType("varchar(40)");

                    b.Property<byte>("GroupStatus")
                        .HasColumnName("GroupStatus")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<byte>("IsVisible")
                        .HasColumnName("IsVisible")
                        .HasColumnType("smallint");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.ToTable("PmsGroup","System");
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long?>("GroupID")
                        .HasColumnName("GroupID")
                        .HasColumnType("bigint");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("PmsGroupID")
                        .HasColumnType("bigint");

                    b.Property<string>("RoleName")
                        .HasColumnName("RoleName")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnName("UserEmail")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("UserGroup")
                        .HasColumnName("UserGroup")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnName("UserName")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasColumnName("UserPassword")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("UserPhone")
                        .HasColumnName("UserPhone")
                        .HasColumnType("varchar(100)");

                    b.Property<long?>("UserRolesId")
                        .HasColumnType("bigint");

                    b.Property<int>("UserStatus")
                        .HasColumnName("UserStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GroupID");

                    b.HasIndex("PmsGroupID");

                    b.HasIndex("UserRolesId");

                    b.ToTable("User","System");
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.UserGroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnName("GroupName")
                        .HasColumnType("varchar(40)");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("boolean");

                    b.Property<byte>("IsDefault")
                        .HasColumnName("IsDefault")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<byte>("IsUsed")
                        .HasColumnName("IsUsed")
                        .HasColumnType("smallint");

                    b.Property<byte>("IsVisible")
                        .HasColumnName("IsVisible")
                        .HasColumnType("smallint");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("ModuleActionNames")
                        .IsRequired()
                        .HasColumnName("ModuleActionNames")
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.ToTable("UserGroup","System");
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.UserRoles", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("timestamp");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnName("RoleName")
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.ToTable("UserRoles","System");
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Beneficiary.AnnualHouseholdExpenditure", b =>
                {
                    b.HasOne("PTSL.GENERIC.Common.Entity.Beneficiary.ExpenditureType", "ExpenditureType")
                        .WithMany("AnnualHouseholdExpenditures")
                        .HasForeignKey("ExpenditureTypeId");

                    b.HasOne("PTSL.GENERIC.Common.Entity.Beneficiary.Survey", "Survey")
                        .WithMany("AnnualHouseholdExpenditures")
                        .HasForeignKey("SurveyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Beneficiary.Asset", b =>
                {
                    b.HasOne("PTSL.GENERIC.Common.Entity.Beneficiary.AssetType", "AssetType")
                        .WithMany("Assets")
                        .HasForeignKey("AssetTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PTSL.GENERIC.Common.Entity.Beneficiary.Survey", "Survey")
                        .WithMany("Assets")
                        .HasForeignKey("SurveyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Beneficiary.BFDAssociationHouseholdMembersMap", b =>
                {
                    b.HasOne("PTSL.GENERIC.Common.Entity.Beneficiary.BFDAssociation", "BFDAssociation")
                        .WithMany("BFDAssociationHouseholdMembers")
                        .HasForeignKey("BFDAssociationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PTSL.GENERIC.Common.Entity.Beneficiary.HouseholdMember", "HouseholdMember")
                        .WithMany("BFDAssociationHouseholdMembers")
                        .HasForeignKey("HouseholdMemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Beneficiary.Business", b =>
                {
                    b.HasOne("PTSL.GENERIC.Common.Entity.Beneficiary.BusinessIncomeSourceType", "BusinessIncomeSourceType")
                        .WithMany("Businesses")
                        .HasForeignKey("BusinessIncomeSourceTypeId");

                    b.HasOne("PTSL.GENERIC.Common.Entity.Beneficiary.Survey", "Survey")
                        .WithMany("Businesses")
                        .HasForeignKey("SurveyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Beneficiary.DisabilityTypeHouseholdMembersMap", b =>
                {
                    b.HasOne("PTSL.GENERIC.Common.Entity.Beneficiary.DisabilityType", "DisabilityType")
                        .WithMany("DisabilityTypeHouseholdMembers")
                        .HasForeignKey("DisabilityTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PTSL.GENERIC.Common.Entity.Beneficiary.HouseholdMember", "HouseholdMember")
                        .WithMany("DisabilityTypeHouseholdMembers")
                        .HasForeignKey("HouseholdMemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Beneficiary.EnergyUse", b =>
                {
                    b.HasOne("PTSL.GENERIC.Common.Entity.Beneficiary.EnergyType", "EnergyType")
                        .WithMany("EnergyUses")
                        .HasForeignKey("EnergyTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PTSL.GENERIC.Common.Entity.Beneficiary.Survey", "Survey")
                        .WithMany("EnergyUses")
                        .HasForeignKey("SurveyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Beneficiary.ExistingSkill", b =>
                {
                    b.HasOne("PTSL.GENERIC.Common.Entity.Beneficiary.Survey", "Survey")
                        .WithMany("ExistingSkills")
                        .HasForeignKey("SurveyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Beneficiary.FoodSecurityItem", b =>
                {
                    b.HasOne("PTSL.GENERIC.Common.Entity.Beneficiary.FoodItem", "FoodItem")
                        .WithMany("FoodSecurityItems")
                        .HasForeignKey("FoodItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PTSL.GENERIC.Common.Entity.Beneficiary.Survey", "Survey")
                        .WithMany("FoodSecurityItems")
                        .HasForeignKey("SurveyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Beneficiary.ForestBeat", b =>
                {
                    b.HasOne("PTSL.GENERIC.Common.Entity.Beneficiary.ForestRange", "ForestRange")
                        .WithMany("ForestBeats")
                        .HasForeignKey("ForestRangeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Beneficiary.ForestDivision", b =>
                {
                    b.HasOne("PTSL.GENERIC.Common.Entity.Beneficiary.ForestCircle", "ForestCircle")
                        .WithMany("ForestDivisions")
                        .HasForeignKey("ForestCircleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PTSL.GENERIC.Common.Entity.Beneficiary.Ngo", "Ngo")
                        .WithMany("ForestDivisions")
                        .HasForeignKey("NgoId");
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Beneficiary.ForestFcvVcf", b =>
                {
                    b.HasOne("PTSL.GENERIC.Common.Entity.Beneficiary.ForestBeat", "ForestBeat")
                        .WithMany("ForestFcvVcfs")
                        .HasForeignKey("ForestBeatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Beneficiary.ForestRange", b =>
                {
                    b.HasOne("PTSL.GENERIC.Common.Entity.Beneficiary.ForestDivision", "ForestDivision")
                        .WithMany("ForestRanges")
                        .HasForeignKey("ForestDivisionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Beneficiary.GrossMarginIncomeAndCostStatus", b =>
                {
                    b.HasOne("PTSL.GENERIC.Common.Entity.Beneficiary.Survey", "Survey")
                        .WithMany("GrossMarginIncomeAndCostStatuses")
                        .HasForeignKey("SurveyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Beneficiary.HouseholdMember", b =>
                {
                    b.HasOne("PTSL.GENERIC.Common.Entity.Beneficiary.Occupation", "MainOccupation")
                        .WithMany("HouseholdMembersMain")
                        .HasForeignKey("MainOccupationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PTSL.GENERIC.Common.Entity.Beneficiary.RelationWithHeadHouseHoldType", "RelationWithHeadHouseHoldType")
                        .WithMany("HouseholdMembers")
                        .HasForeignKey("RelationWithHeadHouseHoldTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PTSL.GENERIC.Common.Entity.Beneficiary.SafetyNet", "SafetyNetType")
                        .WithMany("HouseholdMembers")
                        .HasForeignKey("SafetyNetTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PTSL.GENERIC.Common.Entity.Beneficiary.Occupation", "SecondaryOccupation")
                        .WithMany("HouseholdMembersSecondary")
                        .HasForeignKey("SecondaryOccupationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PTSL.GENERIC.Common.Entity.Beneficiary.Survey", "Survey")
                        .WithMany("HouseholdMembers")
                        .HasForeignKey("SurveyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Beneficiary.ImmovableAsset", b =>
                {
                    b.HasOne("PTSL.GENERIC.Common.Entity.Beneficiary.ImmovableAssetType", "ImmovableAssetType")
                        .WithMany("ImmovableAssets")
                        .HasForeignKey("ImmovableAssetTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PTSL.GENERIC.Common.Entity.Beneficiary.Survey", "Survey")
                        .WithMany("ImmovableAssets")
                        .HasForeignKey("SurveyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Beneficiary.LandOccupancy", b =>
                {
                    b.HasOne("PTSL.GENERIC.Common.Entity.Beneficiary.Survey", "Survey")
                        .WithMany("LandOccupancy")
                        .HasForeignKey("SurveyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Beneficiary.LiveStock", b =>
                {
                    b.HasOne("PTSL.GENERIC.Common.Entity.Beneficiary.LiveStockType", "LiveStockType")
                        .WithMany("LiveStocks")
                        .HasForeignKey("LiveStockTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PTSL.GENERIC.Common.Entity.Beneficiary.Survey", "Survey")
                        .WithMany("LiveStocks")
                        .HasForeignKey("SurveyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Beneficiary.ManualPhysicalWork", b =>
                {
                    b.HasOne("PTSL.GENERIC.Common.Entity.Beneficiary.ManualIncomeSourceType", "ManualIncomeSourceType")
                        .WithMany("ManualPhysicalWorks")
                        .HasForeignKey("ManualIncomeSourceTypeId");

                    b.HasOne("PTSL.GENERIC.Common.Entity.Beneficiary.Survey", "Survey")
                        .WithMany("ManualPhysicalWorks")
                        .HasForeignKey("SurveyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Beneficiary.Marketing", b =>
                {
                    b.HasOne("PTSL.GENERIC.Common.Entity.GeneralSetup.District", "District")
                        .WithMany("Marketings")
                        .HasForeignKey("DistrictId");

                    b.HasOne("PTSL.GENERIC.Common.Entity.GeneralSetup.Division", "Division")
                        .WithMany("Marketings")
                        .HasForeignKey("DivisionId");
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Beneficiary.NaturalResourcesIncomeAndCostStatus", b =>
                {
                    b.HasOne("PTSL.GENERIC.Common.Entity.Beneficiary.NaturalIncomeSourceType", "NaturalIncomeSourceType")
                        .WithMany("NaturalResourcesIncomeAndCostStatuses")
                        .HasForeignKey("NaturalIncomeSourceTypeId");

                    b.HasOne("PTSL.GENERIC.Common.Entity.Beneficiary.Survey", "Survey")
                        .WithMany("NaturalResourcesIncomeAndCostStatuses")
                        .HasForeignKey("SurveyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Beneficiary.OtherIncomeSource", b =>
                {
                    b.HasOne("PTSL.GENERIC.Common.Entity.Beneficiary.OtherIncomeSourceType", "OtherIncomeSourceType")
                        .WithMany("OtherIncomeSources")
                        .HasForeignKey("OtherIncomeSourceTypeId");

                    b.HasOne("PTSL.GENERIC.Common.Entity.Beneficiary.Survey", "Survey")
                        .WithMany("OtherIncomeSources")
                        .HasForeignKey("SurveyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Beneficiary.Survey", b =>
                {
                    b.HasOne("PTSL.GENERIC.Common.Entity.Beneficiary.Ethnicity", "BeneficiaryEthnicity")
                        .WithMany("Surveys")
                        .HasForeignKey("BeneficiaryEthnicityId");

                    b.HasOne("PTSL.GENERIC.Common.Entity.Beneficiary.ForestBeat", "ForestBeat")
                        .WithMany("Surveys")
                        .HasForeignKey("ForestBeatId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PTSL.GENERIC.Common.Entity.Beneficiary.ForestCircle", "ForestCircle")
                        .WithMany("Surveys")
                        .HasForeignKey("ForestCircleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PTSL.GENERIC.Common.Entity.Beneficiary.ForestDivision", "ForestDivision")
                        .WithMany("Surveys")
                        .HasForeignKey("ForestDivisionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PTSL.GENERIC.Common.Entity.Beneficiary.ForestFcvVcf", "ForestFcvVcf")
                        .WithMany("Surveys")
                        .HasForeignKey("ForestFcvVcfId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PTSL.GENERIC.Common.Entity.Beneficiary.ForestRange", "ForestRange")
                        .WithMany("Surveys")
                        .HasForeignKey("ForestRangeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PTSL.GENERIC.Common.Entity.GeneralSetup.District", "PermanentDistrict")
                        .WithMany("SurveyPermanentDistricts")
                        .HasForeignKey("PermanentDistrictId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("PTSL.GENERIC.Common.Entity.GeneralSetup.Division", "PermanentDivision")
                        .WithMany("SurveyPermanentDivisions")
                        .HasForeignKey("PermanentDivisionId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("PTSL.GENERIC.Common.Entity.GeneralSetup.Upazilla", "PermanentUpazilla")
                        .WithMany("SurveyPermanentUpazillas")
                        .HasForeignKey("PermanentUpazillaId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("PTSL.GENERIC.Common.Entity.GeneralSetup.District", "PresentDistrict")
                        .WithMany("SurveyPresentDistricts")
                        .HasForeignKey("PresentDistrictId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PTSL.GENERIC.Common.Entity.GeneralSetup.Division", "PresentDivision")
                        .WithMany("SurveyPresentDivisions")
                        .HasForeignKey("PresentDivisionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PTSL.GENERIC.Common.Entity.GeneralSetup.Upazilla", "PresentUpazilla")
                        .WithMany("SurveyPresentUpazillas")
                        .HasForeignKey("PresentUpazillaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Beneficiary.VulnerabilitySituation", b =>
                {
                    b.HasOne("PTSL.GENERIC.Common.Entity.Beneficiary.Survey", "Survey")
                        .WithMany("VulnerabilitySituations")
                        .HasForeignKey("SurveyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PTSL.GENERIC.Common.Entity.Beneficiary.VulnerabilitySituationType", "VulnerabilitySituationType")
                        .WithMany("VulnerabilitySituations")
                        .HasForeignKey("VulnerabilitySituationTypeId");
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Capacity.CommunityTraining", b =>
                {
                    b.HasOne("PTSL.GENERIC.Common.Entity.Capacity.CommunityTrainingType", "CommunityTrainingType")
                        .WithMany("CommunityTrainings")
                        .HasForeignKey("CommunityTrainingTypeId");

                    b.HasOne("PTSL.GENERIC.Common.Entity.GeneralSetup.District", "District")
                        .WithMany("CommunityTrainings")
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PTSL.GENERIC.Common.Entity.GeneralSetup.Division", "Division")
                        .WithMany("CommunityTrainings")
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PTSL.GENERIC.Common.Entity.Capacity.EventType", "EventType")
                        .WithMany("CommunityTrainings")
                        .HasForeignKey("EventTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PTSL.GENERIC.Common.Entity.Beneficiary.ForestBeat", "ForestBeat")
                        .WithMany("CommunityTrainings")
                        .HasForeignKey("ForestBeatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PTSL.GENERIC.Common.Entity.Beneficiary.ForestCircle", "ForestCircle")
                        .WithMany("CommunityTrainings")
                        .HasForeignKey("ForestCircleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PTSL.GENERIC.Common.Entity.Beneficiary.ForestDivision", "ForestDivision")
                        .WithMany("CommunityTrainings")
                        .HasForeignKey("ForestDivisionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PTSL.GENERIC.Common.Entity.Beneficiary.ForestFcvVcf", "ForestFcvVcf")
                        .WithMany("CommunityTrainings")
                        .HasForeignKey("ForestFcvVcfId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PTSL.GENERIC.Common.Entity.Beneficiary.ForestRange", "ForestRange")
                        .WithMany("CommunityTrainings")
                        .HasForeignKey("ForestRangeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PTSL.GENERIC.Common.Entity.Capacity.TrainingOrganizer", "TrainingOrganizer")
                        .WithMany("CommunityTrainings")
                        .HasForeignKey("TrainingOrganizerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PTSL.GENERIC.Common.Entity.GeneralSetup.Upazilla", "Upazilla")
                        .WithMany("CommunityTrainings")
                        .HasForeignKey("UpazillaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Capacity.CommunityTrainingFile", b =>
                {
                    b.HasOne("PTSL.GENERIC.Common.Entity.Capacity.CommunityTraining", "CommunityTraining")
                        .WithMany("CommunityTrainingFiles")
                        .HasForeignKey("CommunityTrainingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Capacity.CommunityTrainingParticipentsMap", b =>
                {
                    b.HasOne("PTSL.GENERIC.Common.Entity.Capacity.CommunityTraining", "CommunityTraining")
                        .WithMany("CommunityTrainingParticipentsMaps")
                        .HasForeignKey("CommunityTrainingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PTSL.GENERIC.Common.Entity.Capacity.CommunityTrainingMember", "CommunityTrainingMember")
                        .WithMany("CommunityTrainingParticipentsMaps")
                        .HasForeignKey("CommunityTrainingMemberId");

                    b.HasOne("PTSL.GENERIC.Common.Entity.Beneficiary.Survey", "Survey")
                        .WithMany("CommunityTrainingParticipentsMaps")
                        .HasForeignKey("SurveyId");
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Capacity.DepartmentalTraining", b =>
                {
                    b.HasOne("PTSL.GENERIC.Common.Entity.Capacity.DepartmentalTrainingType", "DepartmentalTrainingType")
                        .WithMany("DepartmentalTrainings")
                        .HasForeignKey("DepartmentalTrainingTypeId");

                    b.HasOne("PTSL.GENERIC.Common.Entity.GeneralSetup.District", "District")
                        .WithMany("DepartmentalTrainings")
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PTSL.GENERIC.Common.Entity.GeneralSetup.Division", "Division")
                        .WithMany("DepartmentalTrainings")
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PTSL.GENERIC.Common.Entity.Capacity.EventType", "EventType")
                        .WithMany("DepartmentalTrainings")
                        .HasForeignKey("EventTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PTSL.GENERIC.Common.Entity.Beneficiary.ForestBeat", "ForestBeat")
                        .WithMany("DepartmentalTrainings")
                        .HasForeignKey("ForestBeatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PTSL.GENERIC.Common.Entity.Beneficiary.ForestCircle", "ForestCircle")
                        .WithMany("DepartmentalTrainings")
                        .HasForeignKey("ForestCircleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PTSL.GENERIC.Common.Entity.Beneficiary.ForestDivision", "ForestDivision")
                        .WithMany("DepartmentalTrainings")
                        .HasForeignKey("ForestDivisionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PTSL.GENERIC.Common.Entity.Beneficiary.ForestFcvVcf", "ForestFcvVcf")
                        .WithMany("DepartmentalTrainings")
                        .HasForeignKey("ForestFcvVcfId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PTSL.GENERIC.Common.Entity.Beneficiary.ForestRange", "ForestRange")
                        .WithMany("DepartmentalTrainings")
                        .HasForeignKey("ForestRangeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PTSL.GENERIC.Common.Entity.Capacity.TrainingOrganizer", "TrainingOrganizer")
                        .WithMany("DepartmentalTrainings")
                        .HasForeignKey("TrainingOrganizerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PTSL.GENERIC.Common.Entity.GeneralSetup.Upazilla", "Upazilla")
                        .WithMany("DepartmentalTrainings")
                        .HasForeignKey("UpazillaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Capacity.DepartmentalTrainingFile", b =>
                {
                    b.HasOne("PTSL.GENERIC.Common.Entity.Capacity.DepartmentalTraining", "DepartmentalTraining")
                        .WithMany("DepartmentalTrainingFiles")
                        .HasForeignKey("DepartmentalTrainingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.Capacity.DepartmentalTrainingParticipentsMap", b =>
                {
                    b.HasOne("PTSL.GENERIC.Common.Entity.Capacity.DepartmentalTraining", "DepartmentalTraining")
                        .WithMany("DepartmentalTrainingParticipentsMaps")
                        .HasForeignKey("DepartmentalTrainingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PTSL.GENERIC.Common.Entity.Capacity.DepartmentalTrainingMember", "DepartmentalTrainingMember")
                        .WithMany("DepartmentalTrainingParticipentsMaps")
                        .HasForeignKey("DepartmentalTrainingMemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.GeneralSetup.District", b =>
                {
                    b.HasOne("PTSL.GENERIC.Common.Entity.GeneralSetup.Division", "Division")
                        .WithMany("Districts")
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.GeneralSetup.Union", b =>
                {
                    b.HasOne("PTSL.GENERIC.Common.Entity.GeneralSetup.Upazilla", "Upazilla")
                        .WithMany("Unions")
                        .HasForeignKey("UpazillaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.GeneralSetup.Upazilla", b =>
                {
                    b.HasOne("PTSL.GENERIC.Common.Entity.GeneralSetup.District", "District")
                        .WithMany("Upazillas")
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTSL.GENERIC.Common.Entity.User", b =>
                {
                    b.HasOne("PTSL.GENERIC.Common.Entity.UserGroup", "Group")
                        .WithMany("Users")
                        .HasForeignKey("GroupID");

                    b.HasOne("PTSL.GENERIC.Common.Entity.PmsGroup", "PmsGroup")
                        .WithMany()
                        .HasForeignKey("PmsGroupID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PTSL.GENERIC.Common.Entity.UserRoles", null)
                        .WithMany("Users")
                        .HasForeignKey("UserRolesId");
                });
#pragma warning restore 612, 618
        }
    }
}
